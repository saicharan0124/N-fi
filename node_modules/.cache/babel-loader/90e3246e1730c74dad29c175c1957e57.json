{"ast":null,"code":"const {\n  ethers\n} = require(\"ethers\"); //metamask\n\n\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\nawait provider.send(\"eth_requestAccounts\", []);\nconst signer = provider.getSigner(); //creating a table\n\nasync function Tablecreate() {\n  const tableland = await connect({\n    chain: \"polygon-mumbai\"\n  }, signer);\n  const {\n    Borrow_sql,\n    txnHash\n  } = await tableland.create(`id integer, owner string, ipfs_link string, primary key (id)`);\n  console.log(Borrow_sql);\n  console.log(txnHash);\n}\n\n_c = Tablecreate;\nexport default Tablecreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tablecreate\");","map":{"version":3,"sources":["S:/final hack checkpoin/nfi3/src/functions/createTable.js"],"names":["ethers","require","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","Tablecreate","tableland","connect","chain","Borrow_sql","txnHash","create","console","log"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,QAAD,CAA1B,C,CAEA;;;AACE,MAAMC,QAAQ,GAAG,IAAIF,MAAM,CAACG,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;AACC,MAAMJ,QAAQ,CAACK,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAAN;AACA,MAAMC,MAAM,GAAGN,QAAQ,CAACO,SAAT,EAAf,C,CAEH;;AACA,eAAeC,WAAf,GAA6B;AACzB,QAAMC,SAAS,GAAG,MAAMC,OAAO,CAAC;AAAGC,IAAAA,KAAK,EAAE;AAAV,GAAD,EAA8BL,MAA9B,CAA/B;AACA,QAAM;AAAEM,IAAAA,UAAF;AAAaC,IAAAA;AAAb,MAAyB,MAAMJ,SAAS,CAACK,MAAV,CAChC,8DADgC,CAArC;AAIEC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACD;;KARUL,W;AASX,eAAeA,WAAf","sourcesContent":["const { ethers } = require(\"ethers\");\r\n\r\n//metamask\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n   await provider.send(\"eth_requestAccounts\", []);\r\n   const signer = provider.getSigner()\r\n\r\n//creating a table\r\nasync function Tablecreate() {\r\n    const tableland = await connect({  chain: \"polygon-mumbai\" },signer);\r\n    const { Borrow_sql,txnHash } = await tableland.create(\r\n        `id integer, owner string, ipfs_link string, primary key (id)`\r\n      );\r\n    \r\n      console.log(Borrow_sql)\r\n      console.log(txnHash)\r\n    }\r\n    export default Tablecreate;"]},"metadata":{},"sourceType":"module"}