{"ast":null,"code":"var _jsxFileName = \"S:\\\\final hackathon\\\\nfi3\\\\src\\\\components\\\\Repay.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../cssmodule/Mortage.css';\nimport Nftblock2 from './Nftblock2';\nimport '../extra/loading.css';\nimport m_initial3 from '../functions/repay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Repay = props => {\n  _s();\n\n  // const [item,update_item]=useState([]);\n  const [item2, updatetemp] = useState([]);\n  const [loading, setloading] = useState(true);\n  const apiKey = \"qTpo5KLsQvfNVtuZx6mILiNuhNZq4lpJ\";\n  const endpoint = 'https://polygon-mumbai.g.alchemy.com/v2/qTpo5KLsQvfNVtuZx6mILiNuhNZq4lpJ';\n  const own = props.owneraddr;\n  const contractAddress = '';\n  useEffect(async () => {// const headers = {\n    //     'Content-Type': 'application/json',            \n    //   };      \n    //   const result = await axios.post(\n    //     'http://localhost:3001/student/fetch',\n    //     { },\n    //     { headers: headers, }\n    //   );\n    //   console.log(result.data.result);\n    //   update_item(result.data.result);\n  }, []);\n  useEffect(async () => {\n    if (props.owneraddr != undefined) {\n      const testnetNFTs = await fetch(`${endpoint}/getNFTs?owner=${own}`).then(data => data.json());\n      fetchdata(testnetNFTs.ownedNfts);\n    }\n  }, [props.owneraddr]);\n\n  const fetchdata = async arr => {\n    for (let j = 0; j < arr.length; j++) {\n      let temp = arr[j].media[0].gateway;\n      var con_add = arr[j].contract.address;\n      var con_token_id = parseInt(arr[j].id.tokenId, 16);\n      var price = Math.pow(10, -18);\n      const options = {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json'\n        }\n      };\n      await fetch(\"https://api.covalenthq.com/v1/80001/tokens/\" + con_add + \"/nft_transactions/\" + con_token_id + \"/?quote-currency=USD&format=JSON&key=ckey_ed1c2bdcdfee41bd9fbf5422ada\", options).then(response => response.json()).then(response => {\n        let arr_size = response.data.items[0].nft_transactions.length;\n        var temp1 = parseInt(response.data.items[0].nft_transactions[arr_size - 1].value);\n        price *= temp1;\n      }).catch(err => console.error(err));\n      updatetemp(data => [...data, {\n        src: temp,\n        heading: arr[j].title,\n        para: price,\n        address: con_add,\n        token: con_token_id,\n        des: arr[j].description\n      }]);\n    }\n\n    setloading(false);\n  };\n\n  const items2 = item2.map(data => {\n    for (var i = 0; i < item.length; i++) {\n      if (data.address == item[i].address && parseInt(data.token) == item[i].token_id) {\n        window.setInterval(function () {// m_initial3( {\n          //     address:data.address,\n          //     token_id:data.token_id,\n          //     owner:data.owneraddr,\n          //     price:data.para,\n          // });\n          //this is the function responsible for auto call\n        }, 30000);\n        return /*#__PURE__*/_jsxDEV(Nftblock2, {\n          src: data.src,\n          address: data.address,\n          des: data.des,\n          token: data.token,\n          heading: data.heading,\n          para: data.para,\n          changepopup: props.changepopupstate,\n          popupv: props.popupv,\n          owner: props.owneraddr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 28\n        }, this);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"0\",\n      padding: \"0px\"\n    },\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ring\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mortage wrapper\",\n      children: [items2, /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"summa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"summa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"summa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"summa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Repay, \"KqI+bKGmkPAdkGlNbWUaF1oJS3k=\");\n\n_c = Repay;\nexport default Repay;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repay\");","map":{"version":3,"sources":["S:/final hackathon/nfi3/src/components/Repay.js"],"names":["React","useEffect","useState","axios","Nftblock2","m_initial3","Repay","props","item2","updatetemp","loading","setloading","apiKey","endpoint","own","owneraddr","contractAddress","undefined","testnetNFTs","fetch","then","data","json","fetchdata","ownedNfts","arr","j","length","temp","media","gateway","con_add","contract","address","con_token_id","parseInt","id","tokenId","price","Math","pow","options","method","headers","Accept","response","arr_size","items","nft_transactions","temp1","value","catch","err","console","error","src","heading","title","para","token","des","description","items2","map","i","item","token_id","window","setInterval","changepopupstate","popupv","margin","padding"],"mappings":"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","sourcesContent":["import {React, useEffect, useState} from 'react';\r\n\r\nimport axios from 'axios';\r\nimport '../cssmodule/Mortage.css';\r\nimport Nftblock2 from './Nftblock2';\r\nimport '../extra/loading.css';\r\nimport m_initial3 from '../functions/repay';\r\n\r\n\r\nconst Repay=(props)=>{\r\n\r\n\r\n    \r\n\r\n\r\n\r\n    // const [item,update_item]=useState([]);\r\n    const [item2,updatetemp]=useState([]);\r\n    const [loading,setloading]=useState(true);  \r\n\r\n    const apiKey = \"qTpo5KLsQvfNVtuZx6mILiNuhNZq4lpJ\";\r\n    const endpoint = 'https://polygon-mumbai.g.alchemy.com/v2/qTpo5KLsQvfNVtuZx6mILiNuhNZq4lpJ';\r\n    const own=props.owneraddr;\r\n    const contractAddress='';\r\n\r\n    \r\n\r\n\r\n    useEffect(async()=>{\r\n\r\n        // const headers = {\r\n        //     'Content-Type': 'application/json',            \r\n        //   };      \r\n        //   const result = await axios.post(\r\n        //     'http://localhost:3001/student/fetch',\r\n        //     { },\r\n        //     { headers: headers, }\r\n        //   );\r\n       \r\n        //   console.log(result.data.result);\r\n        //   update_item(result.data.result);\r\n    },[]);\r\n\r\n\r\n    useEffect( async() => {\r\n\r\n        if(props.owneraddr != undefined){     \r\n          const  testnetNFTs= await fetch(`${endpoint}/getNFTs?owner=${own}`).then(data => data.json());        \r\n           \r\n            fetchdata(testnetNFTs.ownedNfts);\r\n      }\r\n\r\n    },[props.owneraddr]);\r\n\r\n\r\n\r\n\r\n\r\n    const fetchdata=async(arr)=>{\r\n\r\n    for(let j=0; j<arr.length ;j++){            \r\n        let temp=arr[j].media[0].gateway;\r\n\r\n        var con_add=arr[j].contract.address;\r\n        var con_token_id=parseInt(arr[j].id.tokenId,16);\r\n        var price=Math.pow(10,-18);\r\n\r\n        const options = {method: 'GET', headers: {Accept: 'application/json'}};\r\n        await fetch(\"https://api.covalenthq.com/v1/80001/tokens/\"+con_add+\"/nft_transactions/\"+con_token_id+\"/?quote-currency=USD&format=JSON&key=ckey_ed1c2bdcdfee41bd9fbf5422ada\",options)\r\n        .then(response => response.json())\r\n        .then(response =>{ \r\n            let arr_size=response.data.items[0].nft_transactions.length;\r\n            var temp1=parseInt(response.data.items[0].nft_transactions[arr_size-1].value);\r\n            price*=temp1;\r\n            })\r\n        .catch(err => console.error(err));        \r\n    \r\n\r\n        updatetemp(data=>[...data,{ src:temp,\r\n            heading:arr[j].title,\r\n            para:price,\r\n            address:con_add,\r\n            token:con_token_id,\r\n            des:arr[j].description\r\n        }\r\n]);    \r\n\r\n    }\r\n\r\n    setloading(false);  \r\n   \r\n}\r\n\r\n\r\n    \r\n\r\n        const items2=item2.map((data)=>{\r\n\r\n            for (var i=0;i<item.length;i++){\r\n\r\n                \r\n    \r\n                \r\n                if (data.address==item[i].address && parseInt(data.token)==item[i].token_id){\r\n\r\n                    window.setInterval(function(){ \r\n            \r\n                        // m_initial3( {\r\n                        //     address:data.address,\r\n                        //     token_id:data.token_id,\r\n                        //     owner:data.owneraddr,\r\n                        //     price:data.para,\r\n                        // });\r\n\r\n                        //this is the function responsible for auto call\r\n                      \r\n                  }, 30000); \r\n                \r\n                    return <Nftblock2  src={data.src} address={data.address} des={data.des} token={data.token}  heading={data.heading} para={data.para} changepopup={props.changepopupstate} popupv={props.popupv} owner={props.owneraddr}></Nftblock2>;\r\n                }\r\n    \r\n            }\r\n            \r\n        })\r\n\r\n\r\n        \r\n\r\n\r\n    \r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <div style={{margin:\"0\" ,padding:\"0px\"}}>\r\n        \r\n        {\r\n            loading?(<div className='loading-center'>\r\n                \r\n                        <div className=\"ring\"></div>\r\n                \r\n                </div>):(\r\n                <div className='mortage wrapper'>\r\n                     {items2}\r\n                    <p className='summa'></p> \r\n                    <p className='summa'></p> \r\n                    <p className='summa'></p> \r\n                    <p className='summa'></p>\r\n                </div>\r\n            )\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Repay;"]},"metadata":{},"sourceType":"module"}