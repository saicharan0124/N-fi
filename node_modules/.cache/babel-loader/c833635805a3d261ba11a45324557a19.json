{"ast":null,"code":"import axios from 'axios';\nimport addtotransactions from './addtotransaction';\n\nconst {\n  ethers\n} = require(\"ethers\");\n\nconst m_initial2 = async data => {\n  // console.log(data)\n  //metamask\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  await provider.send(\"eth_requestAccounts\", []);\n  const signer = provider.getSigner();\n  console.log(\"hlo1\"); //contract initialization \n\n  const contract = require(\"./abi.json\");\n\n  const mortgage_addr = '0xe18c8bD1f7EcBe80aec6c44E5f5c83B2f8ee1F91';\n  const mortgage_contract = new ethers.Contract(mortgage_addr, contract.mortgage_abi, signer);\n  const mortgage_contract_p = new ethers.Contract(mortgage_addr, contract.mortgage_abi, provider);\n  console.log(\"hlo2\"); //price to send\n\n  const decimals = 18;\n  const input = \"\" + data.price; // Note: this is a string, e.g. user input\n  // const input = \"0.5\"\n\n  const amount = ethers.utils.parseUnits(input, decimals); // const user=\"0xf5b7a2f2a99aEa196994f525f531D648417d2706\"\n  //borrow function\n\n  const summa = async () => {\n    const Borrow = await mortgage_contract.borrow(data.address, data.token_id, amount, {\n      gasLimit: 210000\n    });\n    console.log(Borrow); // const money_sent= await mortgage_contract_p.on('moneySent',(sender,amount)=>{\n    //    let money_spent_info={\n    //       sender:sender,\n    //       amount:amount\n    //    }\n    //    console.log(money_spent_info)\n    // })\n\n    const txn = await mortgage_contract_p.on('transaction', ans => {\n      let answer = {\n        ans: ans\n      };\n      console.log(answer);\n    });\n    var result;\n    const Borrow_events = await mortgage_contract_p.on('MortgageItemCreated', (tk_id, frm, price, time) => {\n      // const Testlp = await mortgage_contract.testlp(amount,user,{gasLimit: 210000})\n      //  console.log(Testlp)\n      let info = {\n        Tokenid: tk_id,\n        frm: data.address,\n        nftprice: price,\n        time: time,\n        heading: data.heading,\n        img: data.img\n      };\n      addtotransactions(info);\n      console.log(info);\n    });\n  };\n\n  summa();\n}; //   Borrow()\n//   console.log(Borrow)\n//   Borrow_events()\n//  console.log('borrow finished');\n\n\nexport default m_initial2;","map":{"version":3,"sources":["S:/final hackathon/nfi3/src/functions/mortgage.js"],"names":["axios","addtotransactions","ethers","require","m_initial2","data","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","console","log","contract","mortgage_addr","mortgage_contract","Contract","mortgage_abi","mortgage_contract_p","decimals","input","price","amount","utils","parseUnits","summa","Borrow","borrow","address","token_id","gasLimit","txn","on","ans","answer","result","Borrow_events","tk_id","frm","time","info","Tokenid","nftprice","heading","img"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,iBAAP,MAA8B,oBAA9B;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaC,OAAO,CAAC,QAAD,CAA1B;;AAGA,MAAMC,UAAU,GAAC,MAAMC,IAAN,IAAa;AAE7B;AAEE;AACA,QAAMC,QAAQ,GAAG,IAAIJ,MAAM,CAACK,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;AACA,QAAMJ,QAAQ,CAACK,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAAN;AACA,QAAMC,MAAM,GAAGN,QAAQ,CAACO,SAAT,EAAf;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAT2B,CAW9B;;AAEC,QAAMC,QAAQ,GAAGb,OAAO,CAAC,YAAD,CAAxB;;AACA,QAAMc,aAAa,GAAG,4CAAtB;AACA,QAAMC,iBAAiB,GAAG,IAAIhB,MAAM,CAACiB,QAAX,CAAoBF,aAApB,EAAmCD,QAAQ,CAACI,YAA5C,EAAyDR,MAAzD,CAA1B;AACA,QAAMS,mBAAmB,GAAG,IAAInB,MAAM,CAACiB,QAAX,CAAoBF,aAApB,EAAmCD,QAAQ,CAACI,YAA5C,EAAyDd,QAAzD,CAA5B;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAjB6B,CAmB7B;;AACD,QAAMO,QAAQ,GAAG,EAAjB;AACA,QAAMC,KAAK,GAAG,KAAGlB,IAAI,CAACmB,KAAtB,CArB8B,CAqBD;AAC7B;;AACA,QAAMC,MAAM,GAAGvB,MAAM,CAACwB,KAAP,CAAaC,UAAb,CAAwBJ,KAAxB,EAA+BD,QAA/B,CAAf,CAvB8B,CAwB9B;AAEA;;AACA,QAAMM,KAAK,GAAC,YAAS;AACrB,UAAMC,MAAM,GAAG,MAAMX,iBAAiB,CAACY,MAAlB,CAAyBzB,IAAI,CAAC0B,OAA9B,EAAsC1B,IAAI,CAAC2B,QAA3C,EAAoDP,MAApD,EAA2D;AAACQ,MAAAA,QAAQ,EAAE;AAAX,KAA3D,CAArB;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAYc,MAAZ,EAFqB,CAIrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAMK,GAAG,GAAE,MAAMb,mBAAmB,CAACc,EAApB,CAAuB,aAAvB,EAAsCC,GAAD,IAAO;AAC1D,UAAIC,MAAM,GAAC;AAACD,QAAAA,GAAG,EAACA;AAAL,OAAX;AACAtB,MAAAA,OAAO,CAACC,GAAR,CAAYsB,MAAZ;AACF,KAHgB,CAAjB;AAKA,QAAIC,MAAJ;AAEA,UAAMC,aAAa,GAAE,MAAMlB,mBAAmB,CAACc,EAApB,CAAuB,qBAAvB,EAA6C,CAACK,KAAD,EAAOC,GAAP,EAAWjB,KAAX,EAAiBkB,IAAjB,KAAwB;AAC7F;AACA;AAEH,UAAIC,IAAI,GAAE;AACPC,QAAAA,OAAO,EAACJ,KADD;AAEPC,QAAAA,GAAG,EAACpC,IAAI,CAAC0B,OAFF;AAGPc,QAAAA,QAAQ,EAACrB,KAHF;AAIPkB,QAAAA,IAAI,EAACA,IAJE;AAKPI,QAAAA,OAAO,EAACzC,IAAI,CAACyC,OALN;AAMPC,QAAAA,GAAG,EAAC1C,IAAI,CAAC0C;AANF,OAAV;AASA9C,MAAAA,iBAAiB,CAAC0C,IAAD,CAAjB;AAEA7B,MAAAA,OAAO,CAACC,GAAR,CAAY4B,IAAZ;AAIC,KAnB0B,CAA3B;AAuBC,GA1CD;;AA4CAf,EAAAA,KAAK;AAGJ,CA1ED,C,CA4EA;AACA;AACA;AAEA;;;AAQA,eAAexB,UAAf","sourcesContent":["import axios from 'axios';\r\n\r\nimport addtotransactions from './addtotransaction';\r\n\r\nconst { ethers } = require(\"ethers\");\r\n\r\n\r\nconst m_initial2=async(data)=>{\r\n\r\n // console.log(data)\r\n\r\n   //metamask\r\n   const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n   await provider.send(\"eth_requestAccounts\", []);\r\n   const signer = provider.getSigner()\r\n\r\n   console.log(\"hlo1\")\r\n\r\n//contract initialization \r\n\r\n const contract = require(\"./abi.json\");\r\n const mortgage_addr = '0xe18c8bD1f7EcBe80aec6c44E5f5c83B2f8ee1F91' \r\n const mortgage_contract = new ethers.Contract(mortgage_addr, contract.mortgage_abi,signer)\r\n const mortgage_contract_p = new ethers.Contract(mortgage_addr, contract.mortgage_abi,provider)\r\n console.log(\"hlo2\")\r\n\r\n //price to send\r\nconst decimals = 18;\r\nconst input = \"\"+data.price; // Note: this is a string, e.g. user input\r\n// const input = \"0.5\"\r\nconst amount = ethers.utils.parseUnits(input, decimals)\r\n// const user=\"0xf5b7a2f2a99aEa196994f525f531D648417d2706\"\r\n\r\n//borrow function\r\nconst summa=async()=>{\r\nconst Borrow = await mortgage_contract.borrow(data.address,data.token_id,amount,{gasLimit: 210000})\r\nconsole.log(Borrow)\r\n\r\n// const money_sent= await mortgage_contract_p.on('moneySent',(sender,amount)=>{\r\n//    let money_spent_info={\r\n//       sender:sender,\r\n//       amount:amount\r\n//    }\r\n//    console.log(money_spent_info)\r\n// })\r\n\r\nconst txn= await mortgage_contract_p.on('transaction',(ans)=>{\r\n   let answer={ans:ans}\r\n   console.log(answer)\r\n})\r\n\r\nvar result;\r\n\r\nconst Borrow_events= await mortgage_contract_p.on('MortgageItemCreated',(tk_id,frm,price,time)=>{\r\n   // const Testlp = await mortgage_contract.testlp(amount,user,{gasLimit: 210000})\r\n   //  console.log(Testlp)\r\n\r\nlet info ={\r\n   Tokenid:tk_id,\r\n   frm:data.address,\r\n   nftprice:price,\r\n   time:time,\r\n   heading:data.heading,\r\n   img:data.img,\r\n}\r\n\r\naddtotransactions(info);\r\n\r\nconsole.log(info)\r\n\r\n\r\n\r\n})\r\n\r\n\r\n\r\n}\r\n\r\nsumma()\r\n\r\n\r\n}\r\n\r\n//   Borrow()\r\n//   console.log(Borrow)\r\n//   Borrow_events()\r\n\r\n//  console.log('borrow finished');\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default m_initial2;\r\n"]},"metadata":{},"sourceType":"module"}