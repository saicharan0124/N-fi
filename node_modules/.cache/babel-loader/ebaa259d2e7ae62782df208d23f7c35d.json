{"ast":null,"code":"import m_initial2 from './mortgage';\n\nconst {\n  use,\n  POSClient\n} = require('@maticnetwork/maticjs');\n\nconst {\n  Web3ClientPlugin\n} = require('@maticnetwork/maticjs-ethers');\n\nconst {\n  ethers\n} = require('ethers'); // install web3 plugin\n\n\nuse(Web3ClientPlugin); // const apikey='wg5INmNXJo1JEtEAtKWqkZIjAwSze_Ol'\n//  const mainRPC =\"https://polygon-mumbai.g.alchemy.com/v2/wg5INmNXJo1JEtEAtKWqkZIjAwSze_Ol\"\n// // const parentProvider = new ethers.providers.AlchemyProvider( [  80001 , [apikey ] ] )\n// const parentProvider =  new providers.JsonRpcProvider(mainRPC);\n// const privateKey = '5c63fbb44131a60aeb99f7a18c004bdc8ae3407418ab46aa6b116d3c25d2e4c9'\n\nconst initial = async data => {\n  console.log(data);\n  const to_address = ''; //need to be declared \n\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  await provider.send(\"eth_requestAccounts\", []);\n  const signer = provider.getSigner();\n  const input = data.owner;\n  const posClient = new POSClient();\n  await posClient.init({\n    network: 'testnet',\n    version: 'mumbai',\n    parent: {\n      provider: signer,\n      defaultConfig: {\n        from: input\n      }\n    },\n    child: {\n      provider: signer,\n      defaultConfig: {\n        from: input\n      }\n    }\n  });\n  const erc721Token = posClient.erc721(data.address);\n  await erc721Token.transfer(data.token_id, data.owner, to);\n  console.log(\"approve method\");\n  m_initial2(data);\n};\n\nconst to = '';\nexport default initial;","map":{"version":3,"sources":["S:/final hackathon/nfi3/src/functions/approve.js"],"names":["m_initial2","use","POSClient","require","Web3ClientPlugin","ethers","initial","data","console","log","to_address","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","input","owner","posClient","init","network","version","parent","defaultConfig","from","child","erc721Token","erc721","address","transfer","token_id","to"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;;AAGA,MAAM;AAACC,EAAAA,GAAD;AAAKC,EAAAA;AAAL,IAAkBC,OAAO,CAAC,uBAAD,CAA/B;;AACA,MAAM;AAACC,EAAAA;AAAD,IAAqBD,OAAO,CAAC,8BAAD,CAAlC;;AACA,MAAM;AAACE,EAAAA;AAAD,IAAWF,OAAO,CAAC,QAAD,CAAxB,C,CAEA;;;AACAF,GAAG,CAACG,gBAAD,CAAH,C,CACA;AACA;AACA;AACA;AACA;;AAIA,MAAME,OAAO,GAAC,MAAMC,IAAN,IAAa;AAEzBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,QAAMG,UAAU,GAAC,EAAjB,CAJyB,CAIJ;;AAErB,QAAMC,QAAQ,GAAG,IAAIN,MAAM,CAACO,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;AACF,QAAMJ,QAAQ,CAACK,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAAN;AACA,QAAMC,MAAM,GAAGN,QAAQ,CAACO,SAAT,EAAf;AAEE,QAAMC,KAAK,GAACZ,IAAI,CAACa,KAAjB;AACA,QAAMC,SAAS,GAAG,IAAInB,SAAJ,EAAlB;AACA,QAAMmB,SAAS,CAACC,IAAV,CAAe;AACnBC,IAAAA,OAAO,EAAE,SADU;AAEnBC,IAAAA,OAAO,EAAE,QAFU;AAGnBC,IAAAA,MAAM,EAAE;AACNd,MAAAA,QAAQ,EAAEM,MADJ;AAENS,MAAAA,aAAa,EAAE;AACbC,QAAAA,IAAI,EAAGR;AADM;AAFT,KAHW;AASnBS,IAAAA,KAAK,EAAE;AACLjB,MAAAA,QAAQ,EAACM,MADJ;AAELS,MAAAA,aAAa,EAAE;AACbC,QAAAA,IAAI,EAAER;AADO;AAFV;AATY,GAAf,CAAN;AAkBE,QAAMU,WAAW,GAAGR,SAAS,CAACS,MAAV,CAAiBvB,IAAI,CAACwB,OAAtB,CAApB;AACA,QAAMF,WAAW,CAACG,QAAZ,CAAqBzB,IAAI,CAAC0B,QAA1B,EAAmC1B,IAAI,CAACa,KAAxC,EAA8Cc,EAA9C,CAAN;AAEA1B,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEAT,EAAAA,UAAU,CAACO,IAAD,CAAV;AAED,CArCH;;AA4CA,MAAM2B,EAAE,GAAC,EAAT;AAWA,eAAe5B,OAAf","sourcesContent":["import m_initial2 from './mortgage';\r\n\r\n\r\nconst {use,POSClient} = require('@maticnetwork/maticjs')\r\nconst {Web3ClientPlugin} = require('@maticnetwork/maticjs-ethers')\r\nconst {ethers} = require('ethers')\r\n\r\n// install web3 plugin\r\nuse(Web3ClientPlugin);\r\n// const apikey='wg5INmNXJo1JEtEAtKWqkZIjAwSze_Ol'\r\n//  const mainRPC =\"https://polygon-mumbai.g.alchemy.com/v2/wg5INmNXJo1JEtEAtKWqkZIjAwSze_Ol\"\r\n// // const parentProvider = new ethers.providers.AlchemyProvider( [  80001 , [apikey ] ] )\r\n// const parentProvider =  new providers.JsonRpcProvider(mainRPC);\r\n// const privateKey = '5c63fbb44131a60aeb99f7a18c004bdc8ae3407418ab46aa6b116d3c25d2e4c9'\r\n\r\n\r\n\r\nconst initial=async(data)=>{\r\n\r\n  console.log(data);\r\n\r\n  const to_address=''  //need to be declared \r\n\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\r\nawait provider.send(\"eth_requestAccounts\", []);\r\nconst signer = provider.getSigner()\r\n\r\n  const input=data.owner;\r\n  const posClient = new POSClient();\r\n  await posClient.init({\r\n    network: 'testnet',\r\n    version: 'mumbai',\r\n    parent: {\r\n      provider: signer,\r\n      defaultConfig: {\r\n        from : input\r\n      }\r\n    },\r\n    child: {\r\n      provider:signer,\r\n      defaultConfig: {\r\n        from :input\r\n      }\r\n    }\r\n});\r\n\r\n\r\n    const erc721Token = posClient.erc721(data.address);\r\n    await erc721Token.transfer(data.token_id,data.owner,to);\r\n\r\n    console.log(\"approve method\");\r\n\r\n    m_initial2(data);\r\n\r\n  }\r\n \r\n \r\n\r\n\r\n\r\n\r\nconst to=''\r\n\r\n\r\n\r\n  \r\n \r\n\r\n\r\n\r\n\r\n\r\nexport default initial;\r\n"]},"metadata":{},"sourceType":"module"}