{"ast":null,"code":"\"use strict\";\n\nvar _promiseUtils = require(\"./promiseUtils\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass TaskQueue {\n  constructor() {\n    _defineProperty(this, \"queue\", void 0);\n\n    this.queue = [];\n  }\n\n  enqueue(task\n  /*: () => Promise*/\n  )\n  /*: Promise*/\n  {\n    const taskComplete = new _promiseUtils.resolvingPromise();\n    this.queue.push({\n      task: task,\n      _completion: taskComplete\n    });\n\n    if (this.queue.length === 1) {\n      task().then(() => {\n        this._dequeue();\n\n        taskComplete.resolve();\n      }, error => {\n        this._dequeue();\n\n        taskComplete.reject(error);\n      });\n    }\n\n    return taskComplete;\n  }\n\n  _dequeue() {\n    this.queue.shift();\n\n    if (this.queue.length) {\n      const next = this.queue[0];\n      next.task().then(() => {\n        this._dequeue();\n\n        next._completion.resolve();\n      }, error => {\n        this._dequeue();\n\n        next._completion.reject(error);\n      });\n    }\n  }\n\n}\n\nmodule.exports = TaskQueue;","map":{"version":3,"sources":["S:/final hack checkpoin/nfi3/node_modules/moralis/lib/node/TaskQueue.js"],"names":["_promiseUtils","require","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","TaskQueue","constructor","queue","enqueue","task","taskComplete","resolvingPromise","push","_completion","length","then","_dequeue","resolve","error","reject","shift","next","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,aAAa,GAAGC,OAAO,CAAC,gBAAD,CAA3B;;AAEA,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AACxC,MAAID,GAAG,IAAID,GAAX,EAAgB;AACdG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;AAC9BC,MAAAA,KAAK,EAAEA,KADuB;AAE9BG,MAAAA,UAAU,EAAE,IAFkB;AAG9BC,MAAAA,YAAY,EAAE,IAHgB;AAI9BC,MAAAA,QAAQ,EAAE;AAJoB,KAAhC;AAMD,GAPD,MAOO;AACLP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AACD;;AAED,SAAOF,GAAP;AACD;;AAED,MAAMQ,SAAN,CAAgB;AACdC,EAAAA,WAAW,GAAG;AACZV,IAAAA,eAAe,CAAC,IAAD,EAAO,OAAP,EAAgB,KAAK,CAArB,CAAf;;AAEA,SAAKW,KAAL,GAAa,EAAb;AACD;;AAEDC,EAAAA,OAAO,CAACC;AACR;AADO;AAGP;AACA;AACE,UAAMC,YAAY,GAAG,IAAIhB,aAAa,CAACiB,gBAAlB,EAArB;AACA,SAAKJ,KAAL,CAAWK,IAAX,CAAgB;AACdH,MAAAA,IAAI,EAAEA,IADQ;AAEdI,MAAAA,WAAW,EAAEH;AAFC,KAAhB;;AAKA,QAAI,KAAKH,KAAL,CAAWO,MAAX,KAAsB,CAA1B,EAA6B;AAC3BL,MAAAA,IAAI,GAAGM,IAAP,CAAY,MAAM;AAChB,aAAKC,QAAL;;AAEAN,QAAAA,YAAY,CAACO,OAAb;AACD,OAJD,EAIGC,KAAK,IAAI;AACV,aAAKF,QAAL;;AAEAN,QAAAA,YAAY,CAACS,MAAb,CAAoBD,KAApB;AACD,OARD;AASD;;AAED,WAAOR,YAAP;AACD;;AAEDM,EAAAA,QAAQ,GAAG;AACT,SAAKT,KAAL,CAAWa,KAAX;;AAEA,QAAI,KAAKb,KAAL,CAAWO,MAAf,EAAuB;AACrB,YAAMO,IAAI,GAAG,KAAKd,KAAL,CAAW,CAAX,CAAb;AACAc,MAAAA,IAAI,CAACZ,IAAL,GAAYM,IAAZ,CAAiB,MAAM;AACrB,aAAKC,QAAL;;AAEAK,QAAAA,IAAI,CAACR,WAAL,CAAiBI,OAAjB;AACD,OAJD,EAIGC,KAAK,IAAI;AACV,aAAKF,QAAL;;AAEAK,QAAAA,IAAI,CAACR,WAAL,CAAiBM,MAAjB,CAAwBD,KAAxB;AACD,OARD;AASD;AACF;;AAhDa;;AAoDhBI,MAAM,CAACC,OAAP,GAAiBlB,SAAjB","sourcesContent":["\"use strict\";\n\nvar _promiseUtils = require(\"./promiseUtils\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass TaskQueue {\n  constructor() {\n    _defineProperty(this, \"queue\", void 0);\n\n    this.queue = [];\n  }\n\n  enqueue(task\n  /*: () => Promise*/\n  )\n  /*: Promise*/\n  {\n    const taskComplete = new _promiseUtils.resolvingPromise();\n    this.queue.push({\n      task: task,\n      _completion: taskComplete\n    });\n\n    if (this.queue.length === 1) {\n      task().then(() => {\n        this._dequeue();\n\n        taskComplete.resolve();\n      }, error => {\n        this._dequeue();\n\n        taskComplete.reject(error);\n      });\n    }\n\n    return taskComplete;\n  }\n\n  _dequeue() {\n    this.queue.shift();\n\n    if (this.queue.length) {\n      const next = this.queue[0];\n      next.task().then(() => {\n        this._dequeue();\n\n        next._completion.resolve();\n      }, error => {\n        this._dequeue();\n\n        next._completion.reject(error);\n      });\n    }\n  }\n\n}\n\nmodule.exports = TaskQueue;"]},"metadata":{},"sourceType":"script"}