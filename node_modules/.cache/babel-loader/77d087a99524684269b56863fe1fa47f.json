{"ast":null,"code":"\"use strict\";\n\nvar _ethers = require(\"ethers\");\n\nclass UnitConverter {\n  static ETH(value) {\n    return _ethers.ethers.utils.parseEther(`${value}`).toString();\n  }\n\n  static Token(value) {\n    let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 18;\n    return _ethers.ethers.utils.parseUnits(`${value}`, +decimals).toString();\n  }\n\n  static FromWei(value) {\n    let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 18;\n\n    const result = _ethers.ethers.utils.formatUnits(value, decimals); // formatUnits will always add a trailing 0, remove this as we want to return \"1\" instead of \"1.0\"\n\n\n    const splitResult = result.split('.');\n\n    if (splitResult[1] === '0') {\n      return splitResult[0];\n    }\n\n    return result;\n  }\n\n}\n\nmodule.exports = UnitConverter;","map":{"version":3,"sources":["S:/final hackathon/nfi3/node_modules/moralis/lib/node/UnitConvert.js"],"names":["_ethers","require","UnitConverter","ETH","value","ethers","utils","parseEther","toString","Token","decimals","parseUnits","FromWei","result","formatUnits","splitResult","split","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,QAAD,CAArB;;AAEA,MAAMC,aAAN,CAAoB;AACR,SAAHC,GAAG,CAACC,KAAD,EAAQ;AAChB,WAAOJ,OAAO,CAACK,MAAR,CAAeC,KAAf,CAAqBC,UAArB,CAAiC,GAAEH,KAAM,EAAzC,EAA4CI,QAA5C,EAAP;AACD;;AAEW,SAALC,KAAK,CAACL,KAAD,EAAuB;AAAA,QAAfM,QAAe,uEAAJ,EAAI;AACjC,WAAOV,OAAO,CAACK,MAAR,CAAeC,KAAf,CAAqBK,UAArB,CAAiC,GAAEP,KAAM,EAAzC,EAA4C,CAACM,QAA7C,EAAuDF,QAAvD,EAAP;AACD;;AAEa,SAAPI,OAAO,CAACR,KAAD,EAAuB;AAAA,QAAfM,QAAe,uEAAJ,EAAI;;AACnC,UAAMG,MAAM,GAAGb,OAAO,CAACK,MAAR,CAAeC,KAAf,CAAqBQ,WAArB,CAAiCV,KAAjC,EAAwCM,QAAxC,CAAf,CADmC,CAC+B;;;AAGlE,UAAMK,WAAW,GAAGF,MAAM,CAACG,KAAP,CAAa,GAAb,CAApB;;AAEA,QAAID,WAAW,CAAC,CAAD,CAAX,KAAmB,GAAvB,EAA4B;AAC1B,aAAOA,WAAW,CAAC,CAAD,CAAlB;AACD;;AAED,WAAOF,MAAP;AACD;;AApBiB;;AAwBpBI,MAAM,CAACC,OAAP,GAAiBhB,aAAjB","sourcesContent":["\"use strict\";\n\nvar _ethers = require(\"ethers\");\n\nclass UnitConverter {\n  static ETH(value) {\n    return _ethers.ethers.utils.parseEther(`${value}`).toString();\n  }\n\n  static Token(value, decimals = 18) {\n    return _ethers.ethers.utils.parseUnits(`${value}`, +decimals).toString();\n  }\n\n  static FromWei(value, decimals = 18) {\n    const result = _ethers.ethers.utils.formatUnits(value, decimals); // formatUnits will always add a trailing 0, remove this as we want to return \"1\" instead of \"1.0\"\n\n\n    const splitResult = result.split('.');\n\n    if (splitResult[1] === '0') {\n      return splitResult[0];\n    }\n\n    return result;\n  }\n\n}\n\nmodule.exports = UnitConverter;"]},"metadata":{},"sourceType":"script"}