{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.InjectedEvents = void 0;\n\nvar _AbstractWeb3Connector = _interopRequireDefault(require(\"./AbstractWeb3Connector\"));\n\nvar _events = _interopRequireDefault(require(\"events\"));\n\nvar _verifyChainId = _interopRequireDefault(require(\"../utils/verifyChainId\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst InjectedEvents = Object.freeze({\n  ACCOUNTS_CHANGED: 'accountsChanged',\n  CHAIN_CHANGED: 'chainChanged',\n  CONNECT: 'connect',\n  DISCONNECT: 'disconnect'\n});\nexports.InjectedEvents = InjectedEvents;\n\nclass NoEthereumProviderError extends Error {\n  constructor() {\n    super();\n    this.message = 'Non ethereum enabled browser';\n  }\n\n}\n/**\n * Connector to connect an injected provider (like Metamask) to Moralis\n * The provider should be injected in window.ethereum\n */\n\n\nclass InjectedWeb3Connector extends _AbstractWeb3Connector.default {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"type\", 'injected');\n  }\n\n  verifyEthereumBrowser() {\n    var _window;\n\n    if (!((_window = window) !== null && _window !== void 0 && _window.ethereum)) {\n      throw new NoEthereumProviderError();\n    }\n  }\n\n  async activate() {\n    this.verifyEthereumBrowser();\n    const [accounts, chainId] = await Promise.all([window.ethereum.request({\n      method: 'eth_requestAccounts'\n    }), window.ethereum.request({\n      method: 'eth_chainId'\n    })]);\n    const account = accounts[0] ? accounts[0].toLowerCase() : null;\n    const provider = window.ethereum;\n    this.chainId = chainId;\n    this.account = account;\n    this.provider = provider;\n    this.subscribeToEvents(provider);\n    return {\n      provider,\n      chainId,\n      account\n    };\n  }\n\n  async switchNetwork(chainId) {\n    this.verifyEthereumBrowser();\n    chainId = (0, _verifyChainId.default)(chainId);\n    const currentNetwork = this.chainId;\n    if (currentNetwork === chainId) return;\n    await window.ethereum.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{\n        chainId\n      }]\n    });\n  }\n\n  async addNetwork(chainId, chainName, currencyName, currencySymbol, rpcUrl, blockExplorerUrl) {\n    this.verifyEthereumBrowser();\n    const newchainId = (0, _verifyChainId.default)(chainId);\n    await window.ethereum.request({\n      method: 'wallet_addEthereumChain',\n      params: [{\n        chainId: newchainId,\n        chainName: chainName,\n        nativeCurrency: {\n          name: currencyName,\n          symbol: currencySymbol,\n          decimals: 18\n        },\n        rpcUrls: [rpcUrl],\n        blockExplorerUrls: blockExplorerUrl ? [blockExplorerUrl] : null\n      }]\n    });\n  }\n\n}\n\nvar _default = InjectedWeb3Connector;\nexports.default = _default;","map":{"version":3,"sources":["S:/final hack checkpoin/nfi3/node_modules/moralis/lib/node/Web3Connector/InjectedWeb3Connector.js"],"names":["Object","defineProperty","exports","value","default","InjectedEvents","_AbstractWeb3Connector","_interopRequireDefault","require","_events","_verifyChainId","obj","__esModule","_defineProperty","key","enumerable","configurable","writable","freeze","ACCOUNTS_CHANGED","CHAIN_CHANGED","CONNECT","DISCONNECT","NoEthereumProviderError","Error","constructor","message","InjectedWeb3Connector","verifyEthereumBrowser","_window","window","ethereum","activate","accounts","chainId","Promise","all","request","method","account","toLowerCase","provider","subscribeToEvents","switchNetwork","currentNetwork","params","addNetwork","chainName","currencyName","currencySymbol","rpcUrl","blockExplorerUrl","newchainId","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.InjectedEvents = void 0;\n\nvar _AbstractWeb3Connector = _interopRequireDefault(require(\"./AbstractWeb3Connector\"));\n\nvar _events = _interopRequireDefault(require(\"events\"));\n\nvar _verifyChainId = _interopRequireDefault(require(\"../utils/verifyChainId\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst InjectedEvents = Object.freeze({\n  ACCOUNTS_CHANGED: 'accountsChanged',\n  CHAIN_CHANGED: 'chainChanged',\n  CONNECT: 'connect',\n  DISCONNECT: 'disconnect'\n});\nexports.InjectedEvents = InjectedEvents;\n\nclass NoEthereumProviderError extends Error {\n  constructor() {\n    super();\n    this.message = 'Non ethereum enabled browser';\n  }\n\n}\n/**\n * Connector to connect an injected provider (like Metamask) to Moralis\n * The provider should be injected in window.ethereum\n */\n\n\nclass InjectedWeb3Connector extends _AbstractWeb3Connector.default {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"type\", 'injected');\n  }\n\n  verifyEthereumBrowser() {\n    var _window;\n\n    if (!((_window = window) !== null && _window !== void 0 && _window.ethereum)) {\n      throw new NoEthereumProviderError();\n    }\n  }\n\n  async activate() {\n    this.verifyEthereumBrowser();\n    const [accounts, chainId] = await Promise.all([window.ethereum.request({\n      method: 'eth_requestAccounts'\n    }), window.ethereum.request({\n      method: 'eth_chainId'\n    })]);\n    const account = accounts[0] ? accounts[0].toLowerCase() : null;\n    const provider = window.ethereum;\n    this.chainId = chainId;\n    this.account = account;\n    this.provider = provider;\n    this.subscribeToEvents(provider);\n    return {\n      provider,\n      chainId,\n      account\n    };\n  }\n\n  async switchNetwork(chainId) {\n    this.verifyEthereumBrowser();\n    chainId = (0, _verifyChainId.default)(chainId);\n    const currentNetwork = this.chainId;\n    if (currentNetwork === chainId) return;\n    await window.ethereum.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{\n        chainId\n      }]\n    });\n  }\n\n  async addNetwork(chainId, chainName, currencyName, currencySymbol, rpcUrl, blockExplorerUrl) {\n    this.verifyEthereumBrowser();\n    const newchainId = (0, _verifyChainId.default)(chainId);\n    await window.ethereum.request({\n      method: 'wallet_addEthereumChain',\n      params: [{\n        chainId: newchainId,\n        chainName: chainName,\n        nativeCurrency: {\n          name: currencyName,\n          symbol: currencySymbol,\n          decimals: 18\n        },\n        rpcUrls: [rpcUrl],\n        blockExplorerUrls: blockExplorerUrl ? [blockExplorerUrl] : null\n      }]\n    });\n  }\n\n}\n\nvar _default = InjectedWeb3Connector;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}