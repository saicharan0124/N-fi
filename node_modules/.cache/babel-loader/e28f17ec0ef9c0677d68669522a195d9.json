{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.WalletConnectEvent = void 0;\n\nvar _verifyChainId = _interopRequireDefault(require(\"../utils/verifyChainId\"));\n\nvar _AbstractWeb3Connector = _interopRequireDefault(require(\"./AbstractWeb3Connector\"));\n\nvar _events = require(\"./events\");\n\nvar _MoralisRpcs = require(\"./MoralisRpcs\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst WalletConnectEvent = Object.freeze({\n  ACCOUNTS_CHANGED: 'accountsChanged',\n  CHAIN_CHANGED: 'chainChanged',\n  DISCONNECT: 'disconnect'\n});\n/**\n * Connector to connect an WalletConenct provider to Moralis\n * Note: this assumes using WalletConnect v1\n * // TODO: support WalletConnect v2\n */\n\nexports.WalletConnectEvent = WalletConnectEvent;\n\nclass WalletConnectWeb3Connector extends _AbstractWeb3Connector.default {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"type\", 'WalletConnect');\n  }\n\n  async activate() {\n    let {\n      chainId: providedChainId,\n      mobileLinks,\n      newSession\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    // Log out of any previous sessions\n    if (newSession) {\n      this.cleanup();\n    }\n\n    if (!this.provider) {\n      let WalletConnectProvider;\n      const config = {\n        rpc: (0, _MoralisRpcs.getMoralisRpcs)('WalletConnect'),\n        chainId: providedChainId,\n        qrcodeModalOptions: {\n          mobileLinks\n        }\n      };\n\n      try {\n        var _require;\n\n        WalletConnectProvider = (_require = require('@walletconnect/web3-provider')) === null || _require === void 0 ? void 0 : _require.default;\n      } catch (error) {// Do nothing. User might not need walletconnect\n      }\n\n      if (!WalletConnectProvider) {\n        var _window, _window$WalletConnect;\n\n        WalletConnectProvider = (_window = window) === null || _window === void 0 ? void 0 : (_window$WalletConnect = _window.WalletConnectProvider) === null || _window$WalletConnect === void 0 ? void 0 : _window$WalletConnect.default;\n      }\n\n      if (!WalletConnectProvider) {\n        throw new Error('Cannot enable via WalletConnect: dependency \"@walletconnect/web3-provider\" is missing');\n      }\n\n      if (typeof WalletConnectProvider === 'function') {\n        this.provider = new WalletConnectProvider(config);\n      } else {\n        this.provider = new window.WalletConnectProvider(config);\n      }\n    }\n\n    if (!this.provider) {\n      throw new Error('Could not connect via WalletConnect, error in connecting to provider');\n    }\n\n    const accounts = await this.provider.enable();\n    const account = accounts[0].toLowerCase();\n    const {\n      chainId\n    } = this.provider;\n    const verifiedChainId = (0, _verifyChainId.default)(chainId);\n    this.account = account;\n    this.chainId = verifiedChainId;\n    this.subscribeToEvents(this.provider);\n    return {\n      provider: this.provider,\n      account,\n      chainId: verifiedChainId\n    };\n  } // Cleanup old sessions\n\n\n  cleanup() {\n    try {\n      if (window) {\n        window.localStorage.removeItem('walletconnect');\n      }\n    } catch (error) {// Do nothing\n    }\n  }\n\n  async deactivate() {\n    this.unsubscribeToEvents(this.provider);\n\n    if (this.provider) {\n      try {\n        await this.provider.close();\n      } catch (_unused) {// Do nothing\n      }\n    }\n\n    this.account = null;\n    this.chainId = null;\n    this.provider = null;\n  }\n\n}\n\nvar _default = WalletConnectWeb3Connector;\nexports.default = _default;","map":{"version":3,"sources":["S:/final hack checkpoin/nfi3/node_modules/moralis/lib/node/Web3Connector/WalletConnectWeb3Connector.js"],"names":["Object","defineProperty","exports","value","default","WalletConnectEvent","_verifyChainId","_interopRequireDefault","require","_AbstractWeb3Connector","_events","_MoralisRpcs","obj","__esModule","_defineProperty","key","enumerable","configurable","writable","freeze","ACCOUNTS_CHANGED","CHAIN_CHANGED","DISCONNECT","WalletConnectWeb3Connector","constructor","activate","chainId","providedChainId","mobileLinks","newSession","cleanup","provider","WalletConnectProvider","config","rpc","getMoralisRpcs","qrcodeModalOptions","_require","error","_window","_window$WalletConnect","window","Error","accounts","enable","account","toLowerCase","verifiedChainId","subscribeToEvents","localStorage","removeItem","deactivate","unsubscribeToEvents","close","_unused","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.WalletConnectEvent = void 0;\n\nvar _verifyChainId = _interopRequireDefault(require(\"../utils/verifyChainId\"));\n\nvar _AbstractWeb3Connector = _interopRequireDefault(require(\"./AbstractWeb3Connector\"));\n\nvar _events = require(\"./events\");\n\nvar _MoralisRpcs = require(\"./MoralisRpcs\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst WalletConnectEvent = Object.freeze({\n  ACCOUNTS_CHANGED: 'accountsChanged',\n  CHAIN_CHANGED: 'chainChanged',\n  DISCONNECT: 'disconnect'\n});\n/**\n * Connector to connect an WalletConenct provider to Moralis\n * Note: this assumes using WalletConnect v1\n * // TODO: support WalletConnect v2\n */\n\nexports.WalletConnectEvent = WalletConnectEvent;\n\nclass WalletConnectWeb3Connector extends _AbstractWeb3Connector.default {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"type\", 'WalletConnect');\n  }\n\n  async activate({\n    chainId: providedChainId,\n    mobileLinks,\n    newSession\n  } = {}) {\n    // Log out of any previous sessions\n    if (newSession) {\n      this.cleanup();\n    }\n\n    if (!this.provider) {\n      let WalletConnectProvider;\n      const config = {\n        rpc: (0, _MoralisRpcs.getMoralisRpcs)('WalletConnect'),\n        chainId: providedChainId,\n        qrcodeModalOptions: {\n          mobileLinks\n        }\n      };\n\n      try {\n        var _require;\n\n        WalletConnectProvider = (_require = require('@walletconnect/web3-provider')) === null || _require === void 0 ? void 0 : _require.default;\n      } catch (error) {// Do nothing. User might not need walletconnect\n      }\n\n      if (!WalletConnectProvider) {\n        var _window, _window$WalletConnect;\n\n        WalletConnectProvider = (_window = window) === null || _window === void 0 ? void 0 : (_window$WalletConnect = _window.WalletConnectProvider) === null || _window$WalletConnect === void 0 ? void 0 : _window$WalletConnect.default;\n      }\n\n      if (!WalletConnectProvider) {\n        throw new Error('Cannot enable via WalletConnect: dependency \"@walletconnect/web3-provider\" is missing');\n      }\n\n      if (typeof WalletConnectProvider === 'function') {\n        this.provider = new WalletConnectProvider(config);\n      } else {\n        this.provider = new window.WalletConnectProvider(config);\n      }\n    }\n\n    if (!this.provider) {\n      throw new Error('Could not connect via WalletConnect, error in connecting to provider');\n    }\n\n    const accounts = await this.provider.enable();\n    const account = accounts[0].toLowerCase();\n    const {\n      chainId\n    } = this.provider;\n    const verifiedChainId = (0, _verifyChainId.default)(chainId);\n    this.account = account;\n    this.chainId = verifiedChainId;\n    this.subscribeToEvents(this.provider);\n    return {\n      provider: this.provider,\n      account,\n      chainId: verifiedChainId\n    };\n  } // Cleanup old sessions\n\n\n  cleanup() {\n    try {\n      if (window) {\n        window.localStorage.removeItem('walletconnect');\n      }\n    } catch (error) {// Do nothing\n    }\n  }\n\n  async deactivate() {\n    this.unsubscribeToEvents(this.provider);\n\n    if (this.provider) {\n      try {\n        await this.provider.close();\n      } catch (_unused) {// Do nothing\n      }\n    }\n\n    this.account = null;\n    this.chainId = null;\n    this.provider = null;\n  }\n\n}\n\nvar _default = WalletConnectWeb3Connector;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}