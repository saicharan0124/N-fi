{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _CoreManager = _interopRequireDefault(require(\"../CoreManager\"));\n\nvar _convert = require(\"../utils/convert\");\n\nvar _verifyChainId = _interopRequireDefault(require(\"../utils/verifyChainId\"));\n\nvar _AbstractWeb3Connector = _interopRequireDefault(require(\"./AbstractWeb3Connector\"));\n\nvar _MoralisRpcs = require(\"./MoralisRpcs\");\n\nvar _ethers = require(\"ethers\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass MiniRpcProvider {\n  constructor(chainId, url) {\n    _defineProperty(this, \"request\", async (method, params) => {\n      if (typeof method !== 'string') {\n        // eslint-disable-next-line prefer-destructuring\n        params = method.params; // eslint-disable-next-line prefer-destructuring\n\n        method = method.method;\n      }\n\n      const RESTController = _CoreManager.default.getRESTController();\n\n      try {\n        const response = await RESTController.ajax('POST', this.url, JSON.stringify({\n          jsonrpc: '2.0',\n          id: 1,\n          method,\n          params\n        }), {\n          'Content-Type': 'application/json'\n        });\n\n        if (!response) {\n          throw new Error('No response');\n        }\n\n        if (!response.status || response.status > 400) {\n          throw new Error(`Error response [${response.status}] ${response.statusText}`);\n        }\n\n        const body = response.response;\n\n        if ('error' in body) {\n          var _body$error, _body$error2, _body$error3;\n\n          throw new Error(body === null || body === void 0 ? void 0 : (_body$error = body.error) === null || _body$error === void 0 ? void 0 : _body$error.message, body === null || body === void 0 ? void 0 : (_body$error2 = body.error) === null || _body$error2 === void 0 ? void 0 : _body$error2.code, body === null || body === void 0 ? void 0 : (_body$error3 = body.error) === null || _body$error3 === void 0 ? void 0 : _body$error3.data);\n        }\n\n        if (!('result' in body)) {\n          throw new Error(`Received unexpected JSON-RPC response`);\n        }\n\n        return body.result;\n      } catch (error) {\n        throw new Error(`Failed to make \"${method}\" request with networkConnector: \"${error.message}\"`);\n      }\n    });\n\n    this.chainId = chainId;\n    this.url = url;\n    const parsed = new URL(url);\n    this.host = parsed.host;\n    this.path = parsed.pathname;\n  }\n\n}\n/**\n * Connect to web3 via a network url\n * Note: this has no knowledge of any user accounts\n */\n\n\nclass NetworkWeb3Connector extends _AbstractWeb3Connector.default {\n  constructor() {\n    let {\n      urls,\n      // `defaultChainId` is deprecated, use `chaiId` instead\n      defaultChainId,\n      chainId,\n      speedyNodeApiKey\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var _ref;\n\n    super();\n\n    _defineProperty(this, \"type\", 'network');\n\n    if (!urls && speedyNodeApiKey) {\n      urls = (0, _MoralisRpcs.getMoralisRpcs)(speedyNodeApiKey);\n    }\n\n    if (!urls && !speedyNodeApiKey) {\n      throw new Error('Cannot connect to rpc: No urls or speedyNodeApiKey provided for NetworkWeb3Connector.');\n    }\n\n    this.chainId = (0, _verifyChainId.default)((_ref = chainId !== null && chainId !== void 0 ? chainId : defaultChainId) !== null && _ref !== void 0 ? _ref : Number(Object.keys(urls)[0]));\n    this.providers = Object.keys(urls).reduce((accumulator, chainId) => {\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)]);\n      return accumulator;\n    }, {});\n  }\n\n  async activate() {\n    let {\n      chainId: providedChainId,\n      privateKey = null\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (providedChainId) {\n      this.chainId = (0, _verifyChainId.default)(providedChainId);\n    }\n\n    const provider = this.providers[(0, _convert.fromHexToDecimal)(this.chainId)];\n\n    if (!provider) {\n      throw new Error(`No rpc url provided for chainId ${this.chainId}`);\n    }\n\n    if (privateKey != null) {\n      this.account = await new _ethers.ethers.Wallet(privateKey).getAddress();\n    }\n\n    return {\n      provider,\n      chainId: this.chainId,\n      account: this.account\n    };\n  }\n\n}\n\nvar _default = NetworkWeb3Connector;\nexports.default = _default;","map":{"version":3,"sources":["S:/final hackathon/nfi3/node_modules/moralis/lib/node/Web3Connector/NetworkWeb3Connector.js"],"names":["Object","defineProperty","exports","value","default","_CoreManager","_interopRequireDefault","require","_convert","_verifyChainId","_AbstractWeb3Connector","_MoralisRpcs","_ethers","obj","__esModule","_defineProperty","key","enumerable","configurable","writable","MiniRpcProvider","constructor","chainId","url","method","params","RESTController","getRESTController","response","ajax","JSON","stringify","jsonrpc","id","Error","status","statusText","body","_body$error","_body$error2","_body$error3","error","message","code","data","result","parsed","URL","host","path","pathname","NetworkWeb3Connector","urls","defaultChainId","speedyNodeApiKey","_ref","getMoralisRpcs","Number","keys","providers","reduce","accumulator","activate","providedChainId","privateKey","provider","fromHexToDecimal","account","ethers","Wallet","getAddress","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _CoreManager = _interopRequireDefault(require(\"../CoreManager\"));\n\nvar _convert = require(\"../utils/convert\");\n\nvar _verifyChainId = _interopRequireDefault(require(\"../utils/verifyChainId\"));\n\nvar _AbstractWeb3Connector = _interopRequireDefault(require(\"./AbstractWeb3Connector\"));\n\nvar _MoralisRpcs = require(\"./MoralisRpcs\");\n\nvar _ethers = require(\"ethers\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass MiniRpcProvider {\n  constructor(chainId, url) {\n    _defineProperty(this, \"request\", async (method, params) => {\n      if (typeof method !== 'string') {\n        // eslint-disable-next-line prefer-destructuring\n        params = method.params; // eslint-disable-next-line prefer-destructuring\n\n        method = method.method;\n      }\n\n      const RESTController = _CoreManager.default.getRESTController();\n\n      try {\n        const response = await RESTController.ajax('POST', this.url, JSON.stringify({\n          jsonrpc: '2.0',\n          id: 1,\n          method,\n          params\n        }), {\n          'Content-Type': 'application/json'\n        });\n\n        if (!response) {\n          throw new Error('No response');\n        }\n\n        if (!response.status || response.status > 400) {\n          throw new Error(`Error response [${response.status}] ${response.statusText}`);\n        }\n\n        const body = response.response;\n\n        if ('error' in body) {\n          var _body$error, _body$error2, _body$error3;\n\n          throw new Error(body === null || body === void 0 ? void 0 : (_body$error = body.error) === null || _body$error === void 0 ? void 0 : _body$error.message, body === null || body === void 0 ? void 0 : (_body$error2 = body.error) === null || _body$error2 === void 0 ? void 0 : _body$error2.code, body === null || body === void 0 ? void 0 : (_body$error3 = body.error) === null || _body$error3 === void 0 ? void 0 : _body$error3.data);\n        }\n\n        if (!('result' in body)) {\n          throw new Error(`Received unexpected JSON-RPC response`);\n        }\n\n        return body.result;\n      } catch (error) {\n        throw new Error(`Failed to make \"${method}\" request with networkConnector: \"${error.message}\"`);\n      }\n    });\n\n    this.chainId = chainId;\n    this.url = url;\n    const parsed = new URL(url);\n    this.host = parsed.host;\n    this.path = parsed.pathname;\n  }\n\n}\n/**\n * Connect to web3 via a network url\n * Note: this has no knowledge of any user accounts\n */\n\n\nclass NetworkWeb3Connector extends _AbstractWeb3Connector.default {\n  constructor({\n    urls,\n    // `defaultChainId` is deprecated, use `chaiId` instead\n    defaultChainId,\n    chainId,\n    speedyNodeApiKey\n  } = {}) {\n    var _ref;\n\n    super();\n\n    _defineProperty(this, \"type\", 'network');\n\n    if (!urls && speedyNodeApiKey) {\n      urls = (0, _MoralisRpcs.getMoralisRpcs)(speedyNodeApiKey);\n    }\n\n    if (!urls && !speedyNodeApiKey) {\n      throw new Error('Cannot connect to rpc: No urls or speedyNodeApiKey provided for NetworkWeb3Connector.');\n    }\n\n    this.chainId = (0, _verifyChainId.default)((_ref = chainId !== null && chainId !== void 0 ? chainId : defaultChainId) !== null && _ref !== void 0 ? _ref : Number(Object.keys(urls)[0]));\n    this.providers = Object.keys(urls).reduce((accumulator, chainId) => {\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)]);\n      return accumulator;\n    }, {});\n  }\n\n  async activate({\n    chainId: providedChainId,\n    privateKey = null\n  } = {}) {\n    if (providedChainId) {\n      this.chainId = (0, _verifyChainId.default)(providedChainId);\n    }\n\n    const provider = this.providers[(0, _convert.fromHexToDecimal)(this.chainId)];\n\n    if (!provider) {\n      throw new Error(`No rpc url provided for chainId ${this.chainId}`);\n    }\n\n    if (privateKey != null) {\n      this.account = await new _ethers.ethers.Wallet(privateKey).getAddress();\n    }\n\n    return {\n      provider,\n      chainId: this.chainId,\n      account: this.account\n    };\n  }\n\n}\n\nvar _default = NetworkWeb3Connector;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}