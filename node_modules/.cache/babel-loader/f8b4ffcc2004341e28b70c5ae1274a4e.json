{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Automatically generated code, via genWeb3API.js\n * Do not modify manually\n */\n\n\nconst axios = require('axios');\n\nclass Web3Api {\n  static initialize(_ref) {\n    let {\n      apiKey,\n      serverUrl,\n      Moralis = null\n    } = _ref;\n\n    if (!serverUrl && !apiKey) {\n      throw new Error('Web3Api.initialize failed: initialize with apiKey or serverUrl');\n    }\n\n    if (apiKey) this.apiKey = apiKey;\n    if (serverUrl) this.serverUrl = serverUrl;\n    this.Moralis = Moralis;\n  }\n\n  static getBody(params, bodyParams) {\n    if (!params || !bodyParams || !bodyParams.length) {\n      return undefined;\n    }\n\n    let body = {};\n    bodyParams.forEach(_ref2 => {\n      let {\n        key,\n        type,\n        required\n      } = _ref2;\n\n      if (params[key] === undefined) {\n        if (required) throw new Error(`param ${key} is required!`);\n      } else if (type === this.BodyParamTypes.setBody) {\n        body = params[key];\n      } else {\n        body[key] = params[key];\n      } // remove the param so it doesn't also get added as a query param\n\n\n      delete params[key];\n    });\n    return body;\n  }\n\n  static getParameterizedUrl(url, params) {\n    if (!Object.keys(params).length) return url; // find url params, they start with :\n\n    const requiredParams = url.split('/').filter(s => s && s.includes(':'));\n    if (!requiredParams.length) return url;\n    let parameterizedUrl = url;\n    requiredParams.forEach(p => {\n      // strip the : and replace with param value\n      const key = p.substr(1);\n      const value = params[key];\n\n      if (!value) {\n        throw new Error(`required param ${key} not provided`);\n      }\n\n      parameterizedUrl = parameterizedUrl.replace(p, value); // remove required param from param list\n      // so it doesn't become part of the query params\n\n      delete params[key];\n    });\n    return parameterizedUrl;\n  }\n\n  static getNextOptions(result, options) {\n    const nextOptions = _objectSpread({}, options);\n\n    if (!result.page_size || !result.total || result.page === undefined) return options;\n\n    if (result.cursor) {\n      if (result.total > result.page_size * (result.page + 1)) nextOptions.cursor = result.cursor;\n    } else {\n      if (result.total > result.page_size * (result.page + 1)) {\n        nextOptions.offset = (result.page + 1) * (nextOptions.limit || 500);\n      }\n    }\n\n    return nextOptions;\n  }\n\n  static getApiRateLimitInfo(headers) {\n    return {\n      'x-rate-limit-limit': headers['x-rate-limit-limit'],\n      'x-rate-limit-remaining-ttl': headers['x-rate-limit-remaining-ttl'],\n      'x-rate-limit-used': headers['x-rate-limit-used'],\n      'x-rate-limit-remaining-ip-ttl': headers['x-rate-limit-remaining-ip-ttl'],\n      'x-rate-limit-ip-used': headers['x-rate-limit-ip-used']\n    };\n  }\n\n  static getApiErrorMessage(error, url) {\n    var _error$response, _error$response$data;\n\n    return (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || (error === null || error === void 0 ? void 0 : error.message) || (error === null || error === void 0 ? void 0 : error.toString()) || `Web3 API error while calling ${url}`;\n  }\n\n  static async fetch(_ref3) {\n    let {\n      endpoint,\n      params: providedParams\n    } = _ref3;\n\n    // Make a shallow copy to prevent modification of original params\n    const params = _objectSpread({}, providedParams);\n\n    if (this.Moralis) {\n      const {\n        User,\n        account\n      } = this.Moralis;\n      const user = User.current();\n\n      if (!params.address) {\n        if (user) {\n          params.address = user.get('ethAddress');\n        } else if (account) {\n          params.address = account;\n        }\n      }\n    }\n\n    if (!this.apiKey) {\n      return this.fetchFromServer(endpoint.name, params);\n    }\n\n    return this.fetchFromApi(endpoint, params);\n  }\n\n  static async fetchFromApi(endpoint, params) {\n    const {\n      method = 'GET',\n      url,\n      bodyParams\n    } = endpoint;\n\n    try {\n      const parameterizedUrl = this.getParameterizedUrl(url, params);\n      const body = this.getBody(params, bodyParams);\n      const response = await axios(this.baseURL + parameterizedUrl, {\n        params,\n        method,\n        body,\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'x-api-key': this.apiKey\n        }\n      });\n      const result = response.data;\n      const nextOptions = this.getNextOptions(result, params);\n      if (!this.checkObjEqual(nextOptions, params)) result.next = () => this.fetchFromApi(endpoint, nextOptions);\n      return result;\n    } catch (error) {\n      const {\n        status,\n        headers,\n        data\n      } = error.response;\n      let msg;\n\n      if (status === 429) {\n        msg = `This Moralis Server is rate-limited because of the plan restrictions. See the details about the current rate and throttle limits: ${JSON.stringify(this.getApiRateLimitInfo(headers))}`;\n      } else {\n        msg = this.getApiErrorMessage(error, url);\n      }\n\n      throw new Error(msg);\n    }\n  }\n\n  static async fetchFromServer(name, options) {\n    if (!this.serverUrl) {\n      throw new Error('Web3Api not initialized, run Moralis.start() first');\n    }\n\n    try {\n      const http = axios.create({\n        baseURL: this.serverUrl\n      });\n      if (!options.chain) options.chain = 'eth';\n      const user = this.Moralis.User.current();\n\n      if (user) {\n        options._SessionToken = user.attributes.sessionToken;\n        options._ApplicationId = this.Moralis.applicationId;\n      }\n\n      const response = await http.post(`/functions/${name}`, options, {\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      const {\n        result\n      } = response.data;\n      const nextOptions = this.getNextOptions(result, options);\n      if (!this.checkObjEqual(nextOptions, options)) result.next = () => this.fetchFromServer(name, nextOptions);\n      return result;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n\n      if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.error) {\n        throw new Error(error.response.data.error);\n      }\n\n      throw error;\n    }\n  }\n\n}\n\n_defineProperty(Web3Api, \"baseURL\", 'https://deep-index.moralis.io/api/v2');\n\n_defineProperty(Web3Api, \"BodyParamTypes\", {\n  setBody: 'set body',\n  property: 'property'\n});\n\n_defineProperty(Web3Api, \"checkObjEqual\", function () {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.every(obj => JSON.stringify(obj) === JSON.stringify(objects[0]));\n});\n\n_defineProperty(Web3Api, \"native\", {\n  getBlock: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"native\",\n        \"name\": \"getBlock\",\n        \"url\": \"/block/:block_number_or_hash\"\n      },\n      params: options\n    });\n  },\n  getDateToBlock: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"native\",\n        \"name\": \"getDateToBlock\",\n        \"url\": \"/dateToBlock\"\n      },\n      params: options\n    });\n  },\n  getLogsByAddress: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"native\",\n        \"name\": \"getLogsByAddress\",\n        \"url\": \"/:address/logs\"\n      },\n      params: options\n    });\n  },\n  getNFTTransfersByBlock: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"native\",\n        \"name\": \"getNFTTransfersByBlock\",\n        \"url\": \"/block/:block_number_or_hash/nft/transfers\"\n      },\n      params: options\n    });\n  },\n  getTransaction: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"native\",\n        \"name\": \"getTransaction\",\n        \"url\": \"/transaction/:transaction_hash\"\n      },\n      params: options\n    });\n  },\n  getContractEvents: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"POST\",\n        \"group\": \"native\",\n        \"name\": \"getContractEvents\",\n        \"url\": \"/:address/events\",\n        \"bodyParams\": [{\n          \"key\": \"data\",\n          \"type\": \"set body\",\n          \"required\": false\n        }]\n      },\n      params: options\n    });\n  },\n  runContractFunction: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"POST\",\n        \"group\": \"native\",\n        \"name\": \"runContractFunction\",\n        \"url\": \"/:address/function\",\n        \"bodyParams\": [{\n          \"key\": \"abi\",\n          \"type\": \"property\",\n          \"required\": true\n        }, {\n          \"key\": \"params\",\n          \"type\": \"property\",\n          \"required\": false\n        }]\n      },\n      params: options\n    });\n  }\n});\n\n_defineProperty(Web3Api, \"account\", {\n  getTransactions: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"account\",\n        \"name\": \"getTransactions\",\n        \"url\": \"/:address\"\n      },\n      params: options\n    });\n  },\n  getNativeBalance: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"account\",\n        \"name\": \"getNativeBalance\",\n        \"url\": \"/:address/balance\"\n      },\n      params: options\n    });\n  },\n  getTokenBalances: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"account\",\n        \"name\": \"getTokenBalances\",\n        \"url\": \"/:address/erc20\"\n      },\n      params: options\n    });\n  },\n  getTokenTransfers: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"account\",\n        \"name\": \"getTokenTransfers\",\n        \"url\": \"/:address/erc20/transfers\"\n      },\n      params: options\n    });\n  },\n  getNFTs: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"account\",\n        \"name\": \"getNFTs\",\n        \"url\": \"/:address/nft\"\n      },\n      params: options\n    });\n  },\n  getNFTTransfers: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"account\",\n        \"name\": \"getNFTTransfers\",\n        \"url\": \"/:address/nft/transfers\"\n      },\n      params: options\n    });\n  },\n  getNFTsForContract: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"account\",\n        \"name\": \"getNFTsForContract\",\n        \"url\": \"/:address/nft/:token_address\"\n      },\n      params: options\n    });\n  }\n});\n\n_defineProperty(Web3Api, \"token\", {\n  getTokenMetadata: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"token\",\n        \"name\": \"getTokenMetadata\",\n        \"url\": \"/erc20/metadata\"\n      },\n      params: options\n    });\n  },\n  getNFTTrades: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"token\",\n        \"name\": \"getNFTTrades\",\n        \"url\": \"/nft/:address/trades\"\n      },\n      params: options\n    });\n  },\n  getNFTLowestPrice: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"token\",\n        \"name\": \"getNFTLowestPrice\",\n        \"url\": \"/nft/:address/lowestprice\"\n      },\n      params: options\n    });\n  },\n  getTokenMetadataBySymbol: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"token\",\n        \"name\": \"getTokenMetadataBySymbol\",\n        \"url\": \"/erc20/metadata/symbols\"\n      },\n      params: options\n    });\n  },\n  getTokenPrice: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"token\",\n        \"name\": \"getTokenPrice\",\n        \"url\": \"/erc20/:address/price\"\n      },\n      params: options\n    });\n  },\n  getTokenAddressTransfers: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"token\",\n        \"name\": \"getTokenAddressTransfers\",\n        \"url\": \"/erc20/:address/transfers\"\n      },\n      params: options\n    });\n  },\n  getTokenAllowance: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"token\",\n        \"name\": \"getTokenAllowance\",\n        \"url\": \"/erc20/:address/allowance\"\n      },\n      params: options\n    });\n  },\n  searchNFTs: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"token\",\n        \"name\": \"searchNFTs\",\n        \"url\": \"/nft/search\"\n      },\n      params: options\n    });\n  },\n  getNftTransfersFromToBlock: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"token\",\n        \"name\": \"getNftTransfersFromToBlock\",\n        \"url\": \"/nft/transfers\"\n      },\n      params: options\n    });\n  },\n  getAllTokenIds: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"token\",\n        \"name\": \"getAllTokenIds\",\n        \"url\": \"/nft/:address\"\n      },\n      params: options\n    });\n  },\n  getContractNFTTransfers: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"token\",\n        \"name\": \"getContractNFTTransfers\",\n        \"url\": \"/nft/:address/transfers\"\n      },\n      params: options\n    });\n  },\n  getNFTOwners: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"token\",\n        \"name\": \"getNFTOwners\",\n        \"url\": \"/nft/:address/owners\"\n      },\n      params: options\n    });\n  },\n  getNFTMetadata: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"token\",\n        \"name\": \"getNFTMetadata\",\n        \"url\": \"/nft/:address/metadata\"\n      },\n      params: options\n    });\n  },\n  reSyncMetadata: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"token\",\n        \"name\": \"reSyncMetadata\",\n        \"url\": \"/nft/:address/:token_id/metadata/resync\"\n      },\n      params: options\n    });\n  },\n  syncNFTContract: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"PUT\",\n        \"group\": \"token\",\n        \"name\": \"syncNFTContract\",\n        \"url\": \"/nft/:address/sync\"\n      },\n      params: options\n    });\n  },\n  getTokenIdMetadata: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"token\",\n        \"name\": \"getTokenIdMetadata\",\n        \"url\": \"/nft/:address/:token_id\"\n      },\n      params: options\n    });\n  },\n  getTokenIdOwners: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"token\",\n        \"name\": \"getTokenIdOwners\",\n        \"url\": \"/nft/:address/:token_id/owners\"\n      },\n      params: options\n    });\n  },\n  getWalletTokenIdTransfers: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"token\",\n        \"name\": \"getWalletTokenIdTransfers\",\n        \"url\": \"/nft/:address/:token_id/transfers\"\n      },\n      params: options\n    });\n  }\n});\n\n_defineProperty(Web3Api, \"resolve\", {\n  resolveDomain: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"resolve\",\n        \"name\": \"resolveDomain\",\n        \"url\": \"/resolve/:domain\"\n      },\n      params: options\n    });\n  },\n  resolveAddress: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"resolve\",\n        \"name\": \"resolveAddress\",\n        \"url\": \"/resolve/:address/reverse\"\n      },\n      params: options\n    });\n  }\n});\n\n_defineProperty(Web3Api, \"defi\", {\n  getPairReserves: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"defi\",\n        \"name\": \"getPairReserves\",\n        \"url\": \"/:pair_address/reserves\"\n      },\n      params: options\n    });\n  },\n  getPairAddress: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"defi\",\n        \"name\": \"getPairAddress\",\n        \"url\": \"/:token0_address/:token1_address/pairAddress\"\n      },\n      params: options\n    });\n  }\n});\n\n_defineProperty(Web3Api, \"storage\", {\n  uploadFolder: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"POST\",\n        \"group\": \"storage\",\n        \"name\": \"uploadFolder\",\n        \"url\": \"/ipfs/uploadFolder\",\n        \"bodyParams\": [{\n          \"key\": \"data\",\n          \"type\": \"set body\",\n          \"required\": false\n        }]\n      },\n      params: options\n    });\n  }\n});\n\n_defineProperty(Web3Api, \"info\", {\n  web3ApiVersion: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"info\",\n        \"name\": \"web3ApiVersion\",\n        \"url\": \"/web3/version\"\n      },\n      params: options\n    });\n  },\n  endpointWeights: async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Web3Api.fetch({\n      endpoint: {\n        \"method\": \"GET\",\n        \"group\": \"info\",\n        \"name\": \"endpointWeights\",\n        \"url\": \"/info/endpointWeights\"\n      },\n      params: options\n    });\n  }\n});\n\nvar _default = Web3Api;\nexports.default = _default;","map":{"version":3,"sources":["S:/final hackathon/nfi3/node_modules/moralis/lib/node/MoralisWeb3Api.js"],"names":["Object","defineProperty","exports","value","default","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","configurable","writable","axios","require","Web3Api","initialize","apiKey","serverUrl","Moralis","Error","getBody","params","bodyParams","undefined","body","type","required","BodyParamTypes","setBody","getParameterizedUrl","url","requiredParams","split","s","includes","parameterizedUrl","p","substr","replace","getNextOptions","result","options","nextOptions","page_size","total","page","cursor","offset","limit","getApiRateLimitInfo","headers","getApiErrorMessage","error","_error$response","_error$response$data","response","data","message","toString","fetch","endpoint","providedParams","User","account","user","current","address","get","fetchFromServer","name","fetchFromApi","method","baseURL","Accept","checkObjEqual","next","status","msg","JSON","stringify","http","create","chain","_SessionToken","attributes","sessionToken","_ApplicationId","applicationId","post","_error$response2","_error$response2$data","property","objects","every","getBlock","getDateToBlock","getLogsByAddress","getNFTTransfersByBlock","getTransaction","getContractEvents","runContractFunction","getTransactions","getNativeBalance","getTokenBalances","getTokenTransfers","getNFTs","getNFTTransfers","getNFTsForContract","getTokenMetadata","getNFTTrades","getNFTLowestPrice","getTokenMetadataBySymbol","getTokenPrice","getTokenAddressTransfers","getTokenAllowance","searchNFTs","getNftTransfersFromToBlock","getAllTokenIds","getContractNFTTransfers","getNFTOwners","getNFTMetadata","reSyncMetadata","syncNFTContract","getTokenIdMetadata","getTokenIdOwners","getWalletTokenIdTransfers","resolveDomain","resolveAddress","getPairReserves","getPairAddress","uploadFolder","web3ApiVersion","endpointWeights","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AACvC,MAAIC,IAAI,GAAGR,MAAM,CAACQ,IAAP,CAAYF,MAAZ,CAAX;;AAEA,MAAIN,MAAM,CAACS,qBAAX,EAAkC;AAChC,QAAIC,OAAO,GAAGV,MAAM,CAACS,qBAAP,CAA6BH,MAA7B,CAAd;AACAC,IAAAA,cAAc,KAAKG,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AACzD,aAAOZ,MAAM,CAACa,wBAAP,CAAgCP,MAAhC,EAAwCM,GAAxC,EAA6CE,UAApD;AACD,KAF4B,CAAf,CAAd,EAEKN,IAAI,CAACO,IAAL,CAAUC,KAAV,CAAgBR,IAAhB,EAAsBE,OAAtB,CAFL;AAGD;;AAED,SAAOF,IAAP;AACD;;AAED,SAASS,aAAT,CAAuBC,MAAvB,EAA+B;AAC7B,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACzC,QAAIG,MAAM,GAAG,QAAQF,SAAS,CAACD,CAAD,CAAjB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;AACAA,IAAAA,CAAC,GAAG,CAAJ,GAAQd,OAAO,CAACL,MAAM,CAACsB,MAAD,CAAP,EAAiB,CAAC,CAAlB,CAAP,CAA4BC,OAA5B,CAAoC,UAAUC,GAAV,EAAe;AACzDC,MAAAA,eAAe,CAACP,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AACD,KAFO,CAAR,GAEKxB,MAAM,CAAC0B,yBAAP,GAAmC1B,MAAM,CAAC2B,gBAAP,CAAwBT,MAAxB,EAAgClB,MAAM,CAAC0B,yBAAP,CAAiCJ,MAAjC,CAAhC,CAAnC,GAA+GjB,OAAO,CAACL,MAAM,CAACsB,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AACjKxB,MAAAA,MAAM,CAACC,cAAP,CAAsBiB,MAAtB,EAA8BM,GAA9B,EAAmCxB,MAAM,CAACa,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AACD,KAFmH,CAFpH;AAKD;;AAED,SAAON,MAAP;AACD;;AAED,SAASO,eAAT,CAAyBG,GAAzB,EAA8BJ,GAA9B,EAAmCrB,KAAnC,EAA0C;AACxC,MAAIqB,GAAG,IAAII,GAAX,EAAgB;AACd5B,IAAAA,MAAM,CAACC,cAAP,CAAsB2B,GAAtB,EAA2BJ,GAA3B,EAAgC;AAC9BrB,MAAAA,KAAK,EAAEA,KADuB;AAE9BW,MAAAA,UAAU,EAAE,IAFkB;AAG9Be,MAAAA,YAAY,EAAE,IAHgB;AAI9BC,MAAAA,QAAQ,EAAE;AAJoB,KAAhC;AAMD,GAPD,MAOO;AACLF,IAAAA,GAAG,CAACJ,GAAD,CAAH,GAAWrB,KAAX;AACD;;AAED,SAAOyB,GAAP;AACD;AACD;AACA;AACA;AACA;;;AAGA,MAAMG,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,OAAN,CAAc;AACK,SAAVC,UAAU,OAId;AAAA,QAJe;AAChBC,MAAAA,MADgB;AAEhBC,MAAAA,SAFgB;AAGhBC,MAAAA,OAAO,GAAG;AAHM,KAIf;;AACD,QAAI,CAACD,SAAD,IAAc,CAACD,MAAnB,EAA2B;AACzB,YAAM,IAAIG,KAAJ,CAAU,gEAAV,CAAN;AACD;;AAED,QAAIH,MAAJ,EAAY,KAAKA,MAAL,GAAcA,MAAd;AACZ,QAAIC,SAAJ,EAAe,KAAKA,SAAL,GAAiBA,SAAjB;AACf,SAAKC,OAAL,GAAeA,OAAf;AACD;;AAEa,SAAPE,OAAO,CAACC,MAAD,EAASC,UAAT,EAAqB;AACjC,QAAI,CAACD,MAAD,IAAW,CAACC,UAAZ,IAA0B,CAACA,UAAU,CAACpB,MAA1C,EAAkD;AAChD,aAAOqB,SAAP;AACD;;AAED,QAAIC,IAAI,GAAG,EAAX;AACAF,IAAAA,UAAU,CAAClB,OAAX,CAAmB,SAIb;AAAA,UAJc;AAClBC,QAAAA,GADkB;AAElBoB,QAAAA,IAFkB;AAGlBC,QAAAA;AAHkB,OAId;;AACJ,UAAIL,MAAM,CAAChB,GAAD,CAAN,KAAgBkB,SAApB,EAA+B;AAC7B,YAAIG,QAAJ,EAAc,MAAM,IAAIP,KAAJ,CAAW,SAAQd,GAAI,eAAvB,CAAN;AACf,OAFD,MAEO,IAAIoB,IAAI,KAAK,KAAKE,cAAL,CAAoBC,OAAjC,EAA0C;AAC/CJ,QAAAA,IAAI,GAAGH,MAAM,CAAChB,GAAD,CAAb;AACD,OAFM,MAEA;AACLmB,QAAAA,IAAI,CAACnB,GAAD,CAAJ,GAAYgB,MAAM,CAAChB,GAAD,CAAlB;AACD,OAPG,CAOF;;;AAGF,aAAOgB,MAAM,CAAChB,GAAD,CAAb;AACD,KAfD;AAgBA,WAAOmB,IAAP;AACD;;AAEyB,SAAnBK,mBAAmB,CAACC,GAAD,EAAMT,MAAN,EAAc;AACtC,QAAI,CAACxC,MAAM,CAACQ,IAAP,CAAYgC,MAAZ,EAAoBnB,MAAzB,EAAiC,OAAO4B,GAAP,CADK,CACO;;AAE7C,UAAMC,cAAc,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAexC,MAAf,CAAsByC,CAAC,IAAIA,CAAC,IAAIA,CAAC,CAACC,QAAF,CAAW,GAAX,CAAhC,CAAvB;AACA,QAAI,CAACH,cAAc,CAAC7B,MAApB,EAA4B,OAAO4B,GAAP;AAC5B,QAAIK,gBAAgB,GAAGL,GAAvB;AACAC,IAAAA,cAAc,CAAC3B,OAAf,CAAuBgC,CAAC,IAAI;AAC1B;AACA,YAAM/B,GAAG,GAAG+B,CAAC,CAACC,MAAF,CAAS,CAAT,CAAZ;AACA,YAAMrD,KAAK,GAAGqC,MAAM,CAAChB,GAAD,CAApB;;AAEA,UAAI,CAACrB,KAAL,EAAY;AACV,cAAM,IAAImC,KAAJ,CAAW,kBAAiBd,GAAI,eAAhC,CAAN;AACD;;AAED8B,MAAAA,gBAAgB,GAAGA,gBAAgB,CAACG,OAAjB,CAAyBF,CAAzB,EAA4BpD,KAA5B,CAAnB,CAT0B,CAS6B;AACvD;;AAEA,aAAOqC,MAAM,CAAChB,GAAD,CAAb;AACD,KAbD;AAcA,WAAO8B,gBAAP;AACD;;AAEoB,SAAdI,cAAc,CAACC,MAAD,EAASC,OAAT,EAAkB;AACrC,UAAMC,WAAW,GAAG5C,aAAa,CAAC,EAAD,EAAK2C,OAAL,CAAjC;;AAEA,QAAI,CAACD,MAAM,CAACG,SAAR,IAAqB,CAACH,MAAM,CAACI,KAA7B,IAAsCJ,MAAM,CAACK,IAAP,KAAgBtB,SAA1D,EAAqE,OAAOkB,OAAP;;AAErE,QAAID,MAAM,CAACM,MAAX,EAAmB;AACjB,UAAIN,MAAM,CAACI,KAAP,GAAeJ,MAAM,CAACG,SAAP,IAAoBH,MAAM,CAACK,IAAP,GAAc,CAAlC,CAAnB,EAAyDH,WAAW,CAACI,MAAZ,GAAqBN,MAAM,CAACM,MAA5B;AAC1D,KAFD,MAEO;AACL,UAAIN,MAAM,CAACI,KAAP,GAAeJ,MAAM,CAACG,SAAP,IAAoBH,MAAM,CAACK,IAAP,GAAc,CAAlC,CAAnB,EAAyD;AACvDH,QAAAA,WAAW,CAACK,MAAZ,GAAqB,CAACP,MAAM,CAACK,IAAP,GAAc,CAAf,KAAqBH,WAAW,CAACM,KAAZ,IAAqB,GAA1C,CAArB;AACD;AACF;;AAED,WAAON,WAAP;AACD;;AAEyB,SAAnBO,mBAAmB,CAACC,OAAD,EAAU;AAClC,WAAO;AACL,4BAAsBA,OAAO,CAAC,oBAAD,CADxB;AAEL,oCAA8BA,OAAO,CAAC,4BAAD,CAFhC;AAGL,2BAAqBA,OAAO,CAAC,mBAAD,CAHvB;AAIL,uCAAiCA,OAAO,CAAC,+BAAD,CAJnC;AAKL,8BAAwBA,OAAO,CAAC,sBAAD;AAL1B,KAAP;AAOD;;AAEwB,SAAlBC,kBAAkB,CAACC,KAAD,EAAQtB,GAAR,EAAa;AACpC,QAAIuB,eAAJ,EAAqBC,oBAArB;;AAEA,WAAO,CAACF,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqC,KAAK,CAA1C,GAA8C,CAACC,eAAe,GAAGD,KAAK,CAACG,QAAzB,MAAuC,IAAvC,IAA+CF,eAAe,KAAK,KAAK,CAAxE,GAA4E,KAAK,CAAjF,GAAqF,CAACC,oBAAoB,GAAGD,eAAe,CAACG,IAAxC,MAAkD,IAAlD,IAA0DF,oBAAoB,KAAK,KAAK,CAAxF,GAA4F,KAAK,CAAjG,GAAqGA,oBAAoB,CAACG,OAA9P,MAA2QL,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqC,KAAK,CAA1C,GAA8CA,KAAK,CAACK,OAA/T,MAA4UL,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqC,KAAK,CAA1C,GAA8CA,KAAK,CAACM,QAAN,EAA1X,KAAgZ,gCAA+B5B,GAAI,EAA1b;AACD;;AAEiB,eAAL6B,KAAK,QAGf;AAAA,QAHgB;AACjBC,MAAAA,QADiB;AAEjBvC,MAAAA,MAAM,EAAEwC;AAFS,KAGhB;;AACD;AACA,UAAMxC,MAAM,GAAGvB,aAAa,CAAC,EAAD,EAAK+D,cAAL,CAA5B;;AAEA,QAAI,KAAK3C,OAAT,EAAkB;AAChB,YAAM;AACJ4C,QAAAA,IADI;AAEJC,QAAAA;AAFI,UAGF,KAAK7C,OAHT;AAIA,YAAM8C,IAAI,GAAGF,IAAI,CAACG,OAAL,EAAb;;AAEA,UAAI,CAAC5C,MAAM,CAAC6C,OAAZ,EAAqB;AACnB,YAAIF,IAAJ,EAAU;AACR3C,UAAAA,MAAM,CAAC6C,OAAP,GAAiBF,IAAI,CAACG,GAAL,CAAS,YAAT,CAAjB;AACD,SAFD,MAEO,IAAIJ,OAAJ,EAAa;AAClB1C,UAAAA,MAAM,CAAC6C,OAAP,GAAiBH,OAAjB;AACD;AACF;AACF;;AAED,QAAI,CAAC,KAAK/C,MAAV,EAAkB;AAChB,aAAO,KAAKoD,eAAL,CAAqBR,QAAQ,CAACS,IAA9B,EAAoChD,MAApC,CAAP;AACD;;AAED,WAAO,KAAKiD,YAAL,CAAkBV,QAAlB,EAA4BvC,MAA5B,CAAP;AACD;;AAEwB,eAAZiD,YAAY,CAACV,QAAD,EAAWvC,MAAX,EAAmB;AAC1C,UAAM;AACJkD,MAAAA,MAAM,GAAG,KADL;AAEJzC,MAAAA,GAFI;AAGJR,MAAAA;AAHI,QAIFsC,QAJJ;;AAMA,QAAI;AACF,YAAMzB,gBAAgB,GAAG,KAAKN,mBAAL,CAAyBC,GAAzB,EAA8BT,MAA9B,CAAzB;AACA,YAAMG,IAAI,GAAG,KAAKJ,OAAL,CAAaC,MAAb,EAAqBC,UAArB,CAAb;AACA,YAAMiC,QAAQ,GAAG,MAAM3C,KAAK,CAAC,KAAK4D,OAAL,GAAerC,gBAAhB,EAAkC;AAC5Dd,QAAAA,MAD4D;AAE5DkD,QAAAA,MAF4D;AAG5D/C,QAAAA,IAH4D;AAI5D0B,QAAAA,OAAO,EAAE;AACPuB,UAAAA,MAAM,EAAE,kBADD;AAEP,0BAAgB,kBAFT;AAGP,uBAAa,KAAKzD;AAHX;AAJmD,OAAlC,CAA5B;AAUA,YAAMwB,MAAM,GAAGe,QAAQ,CAACC,IAAxB;AACA,YAAMd,WAAW,GAAG,KAAKH,cAAL,CAAoBC,MAApB,EAA4BnB,MAA5B,CAApB;AACA,UAAI,CAAC,KAAKqD,aAAL,CAAmBhC,WAAnB,EAAgCrB,MAAhC,CAAL,EAA8CmB,MAAM,CAACmC,IAAP,GAAc,MAAM,KAAKL,YAAL,CAAkBV,QAAlB,EAA4BlB,WAA5B,CAApB;AAC9C,aAAOF,MAAP;AACD,KAjBD,CAiBE,OAAOY,KAAP,EAAc;AACd,YAAM;AACJwB,QAAAA,MADI;AAEJ1B,QAAAA,OAFI;AAGJM,QAAAA;AAHI,UAIFJ,KAAK,CAACG,QAJV;AAKA,UAAIsB,GAAJ;;AAEA,UAAID,MAAM,KAAK,GAAf,EAAoB;AAClBC,QAAAA,GAAG,GAAI,qIAAoIC,IAAI,CAACC,SAAL,CAAe,KAAK9B,mBAAL,CAAyBC,OAAzB,CAAf,CAAkD,EAA7L;AACD,OAFD,MAEO;AACL2B,QAAAA,GAAG,GAAG,KAAK1B,kBAAL,CAAwBC,KAAxB,EAA+BtB,GAA/B,CAAN;AACD;;AAED,YAAM,IAAIX,KAAJ,CAAU0D,GAAV,CAAN;AACD;AACF;;AAE2B,eAAfT,eAAe,CAACC,IAAD,EAAO5B,OAAP,EAAgB;AAC1C,QAAI,CAAC,KAAKxB,SAAV,EAAqB;AACnB,YAAM,IAAIE,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,QAAI;AACF,YAAM6D,IAAI,GAAGpE,KAAK,CAACqE,MAAN,CAAa;AACxBT,QAAAA,OAAO,EAAE,KAAKvD;AADU,OAAb,CAAb;AAGA,UAAI,CAACwB,OAAO,CAACyC,KAAb,EAAoBzC,OAAO,CAACyC,KAAR,GAAgB,KAAhB;AACpB,YAAMlB,IAAI,GAAG,KAAK9C,OAAL,CAAa4C,IAAb,CAAkBG,OAAlB,EAAb;;AAEA,UAAID,IAAJ,EAAU;AACRvB,QAAAA,OAAO,CAAC0C,aAAR,GAAwBnB,IAAI,CAACoB,UAAL,CAAgBC,YAAxC;AACA5C,QAAAA,OAAO,CAAC6C,cAAR,GAAyB,KAAKpE,OAAL,CAAaqE,aAAtC;AACD;;AAED,YAAMhC,QAAQ,GAAG,MAAMyB,IAAI,CAACQ,IAAL,CAAW,cAAanB,IAAK,EAA7B,EAAgC5B,OAAhC,EAAyC;AAC9DS,QAAAA,OAAO,EAAE;AACPuB,UAAAA,MAAM,EAAE,kBADD;AAEP,0BAAgB;AAFT;AADqD,OAAzC,CAAvB;AAMA,YAAM;AACJjC,QAAAA;AADI,UAEFe,QAAQ,CAACC,IAFb;AAGA,YAAMd,WAAW,GAAG,KAAKH,cAAL,CAAoBC,MAApB,EAA4BC,OAA5B,CAApB;AACA,UAAI,CAAC,KAAKiC,aAAL,CAAmBhC,WAAnB,EAAgCD,OAAhC,CAAL,EAA+CD,MAAM,CAACmC,IAAP,GAAc,MAAM,KAAKP,eAAL,CAAqBC,IAArB,EAA2B3B,WAA3B,CAApB;AAC/C,aAAOF,MAAP;AACD,KAxBD,CAwBE,OAAOY,KAAP,EAAc;AACd,UAAIqC,gBAAJ,EAAsBC,qBAAtB;;AAEA,UAAI,CAACD,gBAAgB,GAAGrC,KAAK,CAACG,QAA1B,MAAwC,IAAxC,IAAgDkC,gBAAgB,KAAK,KAAK,CAA1E,IAA+E,CAACC,qBAAqB,GAAGD,gBAAgB,CAACjC,IAA1C,MAAoD,IAAnI,IAA2IkC,qBAAqB,KAAK,KAAK,CAA1K,IAA+KA,qBAAqB,CAACtC,KAAzM,EAAgN;AAC9M,cAAM,IAAIjC,KAAJ,CAAUiC,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBJ,KAA9B,CAAN;AACD;;AAED,YAAMA,KAAN;AACD;AACF;;AA7MW;;AAiNd9C,eAAe,CAACQ,OAAD,EAAU,SAAV,EAAqB,sCAArB,CAAf;;AAEAR,eAAe,CAACQ,OAAD,EAAU,gBAAV,EAA4B;AACzCc,EAAAA,OAAO,EAAE,UADgC;AAEzC+D,EAAAA,QAAQ,EAAE;AAF+B,CAA5B,CAAf;;AAKArF,eAAe,CAACQ,OAAD,EAAU,eAAV,EAA2B;AAAA,oCAAI8E,OAAJ;AAAIA,IAAAA,OAAJ;AAAA;;AAAA,SAAgBA,OAAO,CAACC,KAAR,CAAcpF,GAAG,IAAIqE,IAAI,CAACC,SAAL,CAAetE,GAAf,MAAwBqE,IAAI,CAACC,SAAL,CAAea,OAAO,CAAC,CAAD,CAAtB,CAA7C,CAAhB;AAAA,CAA3B,CAAf;;AAEAtF,eAAe,CAACQ,OAAD,EAAU,QAAV,EAAoB;AACjCgF,EAAAA,QAAQ,EAAE;AAAA,QAAOrD,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AAC9CC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,QAFD;AAGR,gBAAQ,UAHA;AAIR,eAAO;AAJC,OADoC;AAO9CvC,MAAAA,MAAM,EAAEoB;AAPsC,KAAd,CAAxB;AAAA,GADuB;AAUjCsD,EAAAA,cAAc,EAAE;AAAA,QAAOtD,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACpDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,QAFD;AAGR,gBAAQ,gBAHA;AAIR,eAAO;AAJC,OAD0C;AAOpDvC,MAAAA,MAAM,EAAEoB;AAP4C,KAAd,CAAxB;AAAA,GAViB;AAmBjCuD,EAAAA,gBAAgB,EAAE;AAAA,QAAOvD,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACtDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,QAFD;AAGR,gBAAQ,kBAHA;AAIR,eAAO;AAJC,OAD4C;AAOtDvC,MAAAA,MAAM,EAAEoB;AAP8C,KAAd,CAAxB;AAAA,GAnBe;AA4BjCwD,EAAAA,sBAAsB,EAAE;AAAA,QAAOxD,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AAC5DC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,QAFD;AAGR,gBAAQ,wBAHA;AAIR,eAAO;AAJC,OADkD;AAO5DvC,MAAAA,MAAM,EAAEoB;AAPoD,KAAd,CAAxB;AAAA,GA5BS;AAqCjCyD,EAAAA,cAAc,EAAE;AAAA,QAAOzD,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACpDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,QAFD;AAGR,gBAAQ,gBAHA;AAIR,eAAO;AAJC,OAD0C;AAOpDvC,MAAAA,MAAM,EAAEoB;AAP4C,KAAd,CAAxB;AAAA,GArCiB;AA8CjC0D,EAAAA,iBAAiB,EAAE;AAAA,QAAO1D,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACvDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,MADF;AAER,iBAAS,QAFD;AAGR,gBAAQ,mBAHA;AAIR,eAAO,kBAJC;AAKR,sBAAc,CAAC;AACb,iBAAO,MADM;AAEb,kBAAQ,UAFK;AAGb,sBAAY;AAHC,SAAD;AALN,OAD6C;AAYvDvC,MAAAA,MAAM,EAAEoB;AAZ+C,KAAd,CAAxB;AAAA,GA9Cc;AA4DjC2D,EAAAA,mBAAmB,EAAE;AAAA,QAAO3D,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACzDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,MADF;AAER,iBAAS,QAFD;AAGR,gBAAQ,qBAHA;AAIR,eAAO,oBAJC;AAKR,sBAAc,CAAC;AACb,iBAAO,KADM;AAEb,kBAAQ,UAFK;AAGb,sBAAY;AAHC,SAAD,EAIX;AACD,iBAAO,QADN;AAED,kBAAQ,UAFP;AAGD,sBAAY;AAHX,SAJW;AALN,OAD+C;AAgBzDvC,MAAAA,MAAM,EAAEoB;AAhBiD,KAAd,CAAxB;AAAA;AA5DY,CAApB,CAAf;;AAgFAnC,eAAe,CAACQ,OAAD,EAAU,SAAV,EAAqB;AAClCuF,EAAAA,eAAe,EAAE;AAAA,QAAO5D,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACrDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,SAFD;AAGR,gBAAQ,iBAHA;AAIR,eAAO;AAJC,OAD2C;AAOrDvC,MAAAA,MAAM,EAAEoB;AAP6C,KAAd,CAAxB;AAAA,GADiB;AAUlC6D,EAAAA,gBAAgB,EAAE;AAAA,QAAO7D,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACtDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,SAFD;AAGR,gBAAQ,kBAHA;AAIR,eAAO;AAJC,OAD4C;AAOtDvC,MAAAA,MAAM,EAAEoB;AAP8C,KAAd,CAAxB;AAAA,GAVgB;AAmBlC8D,EAAAA,gBAAgB,EAAE;AAAA,QAAO9D,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACtDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,SAFD;AAGR,gBAAQ,kBAHA;AAIR,eAAO;AAJC,OAD4C;AAOtDvC,MAAAA,MAAM,EAAEoB;AAP8C,KAAd,CAAxB;AAAA,GAnBgB;AA4BlC+D,EAAAA,iBAAiB,EAAE;AAAA,QAAO/D,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACvDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,SAFD;AAGR,gBAAQ,mBAHA;AAIR,eAAO;AAJC,OAD6C;AAOvDvC,MAAAA,MAAM,EAAEoB;AAP+C,KAAd,CAAxB;AAAA,GA5Be;AAqClCgE,EAAAA,OAAO,EAAE;AAAA,QAAOhE,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AAC7CC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,SAFD;AAGR,gBAAQ,SAHA;AAIR,eAAO;AAJC,OADmC;AAO7CvC,MAAAA,MAAM,EAAEoB;AAPqC,KAAd,CAAxB;AAAA,GArCyB;AA8ClCiE,EAAAA,eAAe,EAAE;AAAA,QAAOjE,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACrDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,SAFD;AAGR,gBAAQ,iBAHA;AAIR,eAAO;AAJC,OAD2C;AAOrDvC,MAAAA,MAAM,EAAEoB;AAP6C,KAAd,CAAxB;AAAA,GA9CiB;AAuDlCkE,EAAAA,kBAAkB,EAAE;AAAA,QAAOlE,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACxDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,SAFD;AAGR,gBAAQ,oBAHA;AAIR,eAAO;AAJC,OAD8C;AAOxDvC,MAAAA,MAAM,EAAEoB;AAPgD,KAAd,CAAxB;AAAA;AAvDc,CAArB,CAAf;;AAkEAnC,eAAe,CAACQ,OAAD,EAAU,OAAV,EAAmB;AAChC8F,EAAAA,gBAAgB,EAAE;AAAA,QAAOnE,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACtDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,OAFD;AAGR,gBAAQ,kBAHA;AAIR,eAAO;AAJC,OAD4C;AAOtDvC,MAAAA,MAAM,EAAEoB;AAP8C,KAAd,CAAxB;AAAA,GADc;AAUhCoE,EAAAA,YAAY,EAAE;AAAA,QAAOpE,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AAClDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,OAFD;AAGR,gBAAQ,cAHA;AAIR,eAAO;AAJC,OADwC;AAOlDvC,MAAAA,MAAM,EAAEoB;AAP0C,KAAd,CAAxB;AAAA,GAVkB;AAmBhCqE,EAAAA,iBAAiB,EAAE;AAAA,QAAOrE,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACvDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,OAFD;AAGR,gBAAQ,mBAHA;AAIR,eAAO;AAJC,OAD6C;AAOvDvC,MAAAA,MAAM,EAAEoB;AAP+C,KAAd,CAAxB;AAAA,GAnBa;AA4BhCsE,EAAAA,wBAAwB,EAAE;AAAA,QAAOtE,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AAC9DC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,OAFD;AAGR,gBAAQ,0BAHA;AAIR,eAAO;AAJC,OADoD;AAO9DvC,MAAAA,MAAM,EAAEoB;AAPsD,KAAd,CAAxB;AAAA,GA5BM;AAqChCuE,EAAAA,aAAa,EAAE;AAAA,QAAOvE,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACnDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,OAFD;AAGR,gBAAQ,eAHA;AAIR,eAAO;AAJC,OADyC;AAOnDvC,MAAAA,MAAM,EAAEoB;AAP2C,KAAd,CAAxB;AAAA,GArCiB;AA8ChCwE,EAAAA,wBAAwB,EAAE;AAAA,QAAOxE,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AAC9DC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,OAFD;AAGR,gBAAQ,0BAHA;AAIR,eAAO;AAJC,OADoD;AAO9DvC,MAAAA,MAAM,EAAEoB;AAPsD,KAAd,CAAxB;AAAA,GA9CM;AAuDhCyE,EAAAA,iBAAiB,EAAE;AAAA,QAAOzE,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACvDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,OAFD;AAGR,gBAAQ,mBAHA;AAIR,eAAO;AAJC,OAD6C;AAOvDvC,MAAAA,MAAM,EAAEoB;AAP+C,KAAd,CAAxB;AAAA,GAvDa;AAgEhC0E,EAAAA,UAAU,EAAE;AAAA,QAAO1E,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AAChDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,OAFD;AAGR,gBAAQ,YAHA;AAIR,eAAO;AAJC,OADsC;AAOhDvC,MAAAA,MAAM,EAAEoB;AAPwC,KAAd,CAAxB;AAAA,GAhEoB;AAyEhC2E,EAAAA,0BAA0B,EAAE;AAAA,QAAO3E,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AAChEC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,OAFD;AAGR,gBAAQ,4BAHA;AAIR,eAAO;AAJC,OADsD;AAOhEvC,MAAAA,MAAM,EAAEoB;AAPwD,KAAd,CAAxB;AAAA,GAzEI;AAkFhC4E,EAAAA,cAAc,EAAE;AAAA,QAAO5E,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACpDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,OAFD;AAGR,gBAAQ,gBAHA;AAIR,eAAO;AAJC,OAD0C;AAOpDvC,MAAAA,MAAM,EAAEoB;AAP4C,KAAd,CAAxB;AAAA,GAlFgB;AA2FhC6E,EAAAA,uBAAuB,EAAE;AAAA,QAAO7E,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AAC7DC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,OAFD;AAGR,gBAAQ,yBAHA;AAIR,eAAO;AAJC,OADmD;AAO7DvC,MAAAA,MAAM,EAAEoB;AAPqD,KAAd,CAAxB;AAAA,GA3FO;AAoGhC8E,EAAAA,YAAY,EAAE;AAAA,QAAO9E,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AAClDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,OAFD;AAGR,gBAAQ,cAHA;AAIR,eAAO;AAJC,OADwC;AAOlDvC,MAAAA,MAAM,EAAEoB;AAP0C,KAAd,CAAxB;AAAA,GApGkB;AA6GhC+E,EAAAA,cAAc,EAAE;AAAA,QAAO/E,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACpDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,OAFD;AAGR,gBAAQ,gBAHA;AAIR,eAAO;AAJC,OAD0C;AAOpDvC,MAAAA,MAAM,EAAEoB;AAP4C,KAAd,CAAxB;AAAA,GA7GgB;AAsHhCgF,EAAAA,cAAc,EAAE;AAAA,QAAOhF,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACpDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,OAFD;AAGR,gBAAQ,gBAHA;AAIR,eAAO;AAJC,OAD0C;AAOpDvC,MAAAA,MAAM,EAAEoB;AAP4C,KAAd,CAAxB;AAAA,GAtHgB;AA+HhCiF,EAAAA,eAAe,EAAE;AAAA,QAAOjF,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACrDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,OAFD;AAGR,gBAAQ,iBAHA;AAIR,eAAO;AAJC,OAD2C;AAOrDvC,MAAAA,MAAM,EAAEoB;AAP6C,KAAd,CAAxB;AAAA,GA/He;AAwIhCkF,EAAAA,kBAAkB,EAAE;AAAA,QAAOlF,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACxDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,OAFD;AAGR,gBAAQ,oBAHA;AAIR,eAAO;AAJC,OAD8C;AAOxDvC,MAAAA,MAAM,EAAEoB;AAPgD,KAAd,CAAxB;AAAA,GAxIY;AAiJhCmF,EAAAA,gBAAgB,EAAE;AAAA,QAAOnF,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACtDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,OAFD;AAGR,gBAAQ,kBAHA;AAIR,eAAO;AAJC,OAD4C;AAOtDvC,MAAAA,MAAM,EAAEoB;AAP8C,KAAd,CAAxB;AAAA,GAjJc;AA0JhCoF,EAAAA,yBAAyB,EAAE;AAAA,QAAOpF,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AAC/DC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,OAFD;AAGR,gBAAQ,2BAHA;AAIR,eAAO;AAJC,OADqD;AAO/DvC,MAAAA,MAAM,EAAEoB;AAPuD,KAAd,CAAxB;AAAA;AA1JK,CAAnB,CAAf;;AAqKAnC,eAAe,CAACQ,OAAD,EAAU,SAAV,EAAqB;AAClCgH,EAAAA,aAAa,EAAE;AAAA,QAAOrF,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACnDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,SAFD;AAGR,gBAAQ,eAHA;AAIR,eAAO;AAJC,OADyC;AAOnDvC,MAAAA,MAAM,EAAEoB;AAP2C,KAAd,CAAxB;AAAA,GADmB;AAUlCsF,EAAAA,cAAc,EAAE;AAAA,QAAOtF,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACpDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,SAFD;AAGR,gBAAQ,gBAHA;AAIR,eAAO;AAJC,OAD0C;AAOpDvC,MAAAA,MAAM,EAAEoB;AAP4C,KAAd,CAAxB;AAAA;AAVkB,CAArB,CAAf;;AAqBAnC,eAAe,CAACQ,OAAD,EAAU,MAAV,EAAkB;AAC/BkH,EAAAA,eAAe,EAAE;AAAA,QAAOvF,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACrDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,MAFD;AAGR,gBAAQ,iBAHA;AAIR,eAAO;AAJC,OAD2C;AAOrDvC,MAAAA,MAAM,EAAEoB;AAP6C,KAAd,CAAxB;AAAA,GADc;AAU/BwF,EAAAA,cAAc,EAAE;AAAA,QAAOxF,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACpDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,MAFD;AAGR,gBAAQ,gBAHA;AAIR,eAAO;AAJC,OAD0C;AAOpDvC,MAAAA,MAAM,EAAEoB;AAP4C,KAAd,CAAxB;AAAA;AAVe,CAAlB,CAAf;;AAqBAnC,eAAe,CAACQ,OAAD,EAAU,SAAV,EAAqB;AAClCoH,EAAAA,YAAY,EAAE;AAAA,QAAOzF,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AAClDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,MADF;AAER,iBAAS,SAFD;AAGR,gBAAQ,cAHA;AAIR,eAAO,oBAJC;AAKR,sBAAc,CAAC;AACb,iBAAO,MADM;AAEb,kBAAQ,UAFK;AAGb,sBAAY;AAHC,SAAD;AALN,OADwC;AAYlDvC,MAAAA,MAAM,EAAEoB;AAZ0C,KAAd,CAAxB;AAAA;AADoB,CAArB,CAAf;;AAiBAnC,eAAe,CAACQ,OAAD,EAAU,MAAV,EAAkB;AAC/BqH,EAAAA,cAAc,EAAE;AAAA,QAAO1F,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACpDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,MAFD;AAGR,gBAAQ,gBAHA;AAIR,eAAO;AAJC,OAD0C;AAOpDvC,MAAAA,MAAM,EAAEoB;AAP4C,KAAd,CAAxB;AAAA,GADe;AAU/B2F,EAAAA,eAAe,EAAE;AAAA,QAAO3F,OAAP,uEAAiB,EAAjB;AAAA,WAAwB3B,OAAO,CAAC6C,KAAR,CAAc;AACrDC,MAAAA,QAAQ,EAAE;AACR,kBAAU,KADF;AAER,iBAAS,MAFD;AAGR,gBAAQ,iBAHA;AAIR,eAAO;AAJC,OAD2C;AAOrDvC,MAAAA,MAAM,EAAEoB;AAP6C,KAAd,CAAxB;AAAA;AAVc,CAAlB,CAAf;;AAqBA,IAAI4F,QAAQ,GAAGvH,OAAf;AACA/B,OAAO,CAACE,OAAR,GAAkBoJ,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Automatically generated code, via genWeb3API.js\n * Do not modify manually\n */\n\n\nconst axios = require('axios');\n\nclass Web3Api {\n  static initialize({\n    apiKey,\n    serverUrl,\n    Moralis = null\n  }) {\n    if (!serverUrl && !apiKey) {\n      throw new Error('Web3Api.initialize failed: initialize with apiKey or serverUrl');\n    }\n\n    if (apiKey) this.apiKey = apiKey;\n    if (serverUrl) this.serverUrl = serverUrl;\n    this.Moralis = Moralis;\n  }\n\n  static getBody(params, bodyParams) {\n    if (!params || !bodyParams || !bodyParams.length) {\n      return undefined;\n    }\n\n    let body = {};\n    bodyParams.forEach(({\n      key,\n      type,\n      required\n    }) => {\n      if (params[key] === undefined) {\n        if (required) throw new Error(`param ${key} is required!`);\n      } else if (type === this.BodyParamTypes.setBody) {\n        body = params[key];\n      } else {\n        body[key] = params[key];\n      } // remove the param so it doesn't also get added as a query param\n\n\n      delete params[key];\n    });\n    return body;\n  }\n\n  static getParameterizedUrl(url, params) {\n    if (!Object.keys(params).length) return url; // find url params, they start with :\n\n    const requiredParams = url.split('/').filter(s => s && s.includes(':'));\n    if (!requiredParams.length) return url;\n    let parameterizedUrl = url;\n    requiredParams.forEach(p => {\n      // strip the : and replace with param value\n      const key = p.substr(1);\n      const value = params[key];\n\n      if (!value) {\n        throw new Error(`required param ${key} not provided`);\n      }\n\n      parameterizedUrl = parameterizedUrl.replace(p, value); // remove required param from param list\n      // so it doesn't become part of the query params\n\n      delete params[key];\n    });\n    return parameterizedUrl;\n  }\n\n  static getNextOptions(result, options) {\n    const nextOptions = _objectSpread({}, options);\n\n    if (!result.page_size || !result.total || result.page === undefined) return options;\n\n    if (result.cursor) {\n      if (result.total > result.page_size * (result.page + 1)) nextOptions.cursor = result.cursor;\n    } else {\n      if (result.total > result.page_size * (result.page + 1)) {\n        nextOptions.offset = (result.page + 1) * (nextOptions.limit || 500);\n      }\n    }\n\n    return nextOptions;\n  }\n\n  static getApiRateLimitInfo(headers) {\n    return {\n      'x-rate-limit-limit': headers['x-rate-limit-limit'],\n      'x-rate-limit-remaining-ttl': headers['x-rate-limit-remaining-ttl'],\n      'x-rate-limit-used': headers['x-rate-limit-used'],\n      'x-rate-limit-remaining-ip-ttl': headers['x-rate-limit-remaining-ip-ttl'],\n      'x-rate-limit-ip-used': headers['x-rate-limit-ip-used']\n    };\n  }\n\n  static getApiErrorMessage(error, url) {\n    var _error$response, _error$response$data;\n\n    return (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || (error === null || error === void 0 ? void 0 : error.message) || (error === null || error === void 0 ? void 0 : error.toString()) || `Web3 API error while calling ${url}`;\n  }\n\n  static async fetch({\n    endpoint,\n    params: providedParams\n  }) {\n    // Make a shallow copy to prevent modification of original params\n    const params = _objectSpread({}, providedParams);\n\n    if (this.Moralis) {\n      const {\n        User,\n        account\n      } = this.Moralis;\n      const user = User.current();\n\n      if (!params.address) {\n        if (user) {\n          params.address = user.get('ethAddress');\n        } else if (account) {\n          params.address = account;\n        }\n      }\n    }\n\n    if (!this.apiKey) {\n      return this.fetchFromServer(endpoint.name, params);\n    }\n\n    return this.fetchFromApi(endpoint, params);\n  }\n\n  static async fetchFromApi(endpoint, params) {\n    const {\n      method = 'GET',\n      url,\n      bodyParams\n    } = endpoint;\n\n    try {\n      const parameterizedUrl = this.getParameterizedUrl(url, params);\n      const body = this.getBody(params, bodyParams);\n      const response = await axios(this.baseURL + parameterizedUrl, {\n        params,\n        method,\n        body,\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'x-api-key': this.apiKey\n        }\n      });\n      const result = response.data;\n      const nextOptions = this.getNextOptions(result, params);\n      if (!this.checkObjEqual(nextOptions, params)) result.next = () => this.fetchFromApi(endpoint, nextOptions);\n      return result;\n    } catch (error) {\n      const {\n        status,\n        headers,\n        data\n      } = error.response;\n      let msg;\n\n      if (status === 429) {\n        msg = `This Moralis Server is rate-limited because of the plan restrictions. See the details about the current rate and throttle limits: ${JSON.stringify(this.getApiRateLimitInfo(headers))}`;\n      } else {\n        msg = this.getApiErrorMessage(error, url);\n      }\n\n      throw new Error(msg);\n    }\n  }\n\n  static async fetchFromServer(name, options) {\n    if (!this.serverUrl) {\n      throw new Error('Web3Api not initialized, run Moralis.start() first');\n    }\n\n    try {\n      const http = axios.create({\n        baseURL: this.serverUrl\n      });\n      if (!options.chain) options.chain = 'eth';\n      const user = this.Moralis.User.current();\n\n      if (user) {\n        options._SessionToken = user.attributes.sessionToken;\n        options._ApplicationId = this.Moralis.applicationId;\n      }\n\n      const response = await http.post(`/functions/${name}`, options, {\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      const {\n        result\n      } = response.data;\n      const nextOptions = this.getNextOptions(result, options);\n      if (!this.checkObjEqual(nextOptions, options)) result.next = () => this.fetchFromServer(name, nextOptions);\n      return result;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n\n      if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.error) {\n        throw new Error(error.response.data.error);\n      }\n\n      throw error;\n    }\n  }\n\n}\n\n_defineProperty(Web3Api, \"baseURL\", 'https://deep-index.moralis.io/api/v2');\n\n_defineProperty(Web3Api, \"BodyParamTypes\", {\n  setBody: 'set body',\n  property: 'property'\n});\n\n_defineProperty(Web3Api, \"checkObjEqual\", (...objects) => objects.every(obj => JSON.stringify(obj) === JSON.stringify(objects[0])));\n\n_defineProperty(Web3Api, \"native\", {\n  getBlock: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"native\",\n      \"name\": \"getBlock\",\n      \"url\": \"/block/:block_number_or_hash\"\n    },\n    params: options\n  }),\n  getDateToBlock: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"native\",\n      \"name\": \"getDateToBlock\",\n      \"url\": \"/dateToBlock\"\n    },\n    params: options\n  }),\n  getLogsByAddress: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"native\",\n      \"name\": \"getLogsByAddress\",\n      \"url\": \"/:address/logs\"\n    },\n    params: options\n  }),\n  getNFTTransfersByBlock: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"native\",\n      \"name\": \"getNFTTransfersByBlock\",\n      \"url\": \"/block/:block_number_or_hash/nft/transfers\"\n    },\n    params: options\n  }),\n  getTransaction: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"native\",\n      \"name\": \"getTransaction\",\n      \"url\": \"/transaction/:transaction_hash\"\n    },\n    params: options\n  }),\n  getContractEvents: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"POST\",\n      \"group\": \"native\",\n      \"name\": \"getContractEvents\",\n      \"url\": \"/:address/events\",\n      \"bodyParams\": [{\n        \"key\": \"data\",\n        \"type\": \"set body\",\n        \"required\": false\n      }]\n    },\n    params: options\n  }),\n  runContractFunction: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"POST\",\n      \"group\": \"native\",\n      \"name\": \"runContractFunction\",\n      \"url\": \"/:address/function\",\n      \"bodyParams\": [{\n        \"key\": \"abi\",\n        \"type\": \"property\",\n        \"required\": true\n      }, {\n        \"key\": \"params\",\n        \"type\": \"property\",\n        \"required\": false\n      }]\n    },\n    params: options\n  })\n});\n\n_defineProperty(Web3Api, \"account\", {\n  getTransactions: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"account\",\n      \"name\": \"getTransactions\",\n      \"url\": \"/:address\"\n    },\n    params: options\n  }),\n  getNativeBalance: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"account\",\n      \"name\": \"getNativeBalance\",\n      \"url\": \"/:address/balance\"\n    },\n    params: options\n  }),\n  getTokenBalances: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"account\",\n      \"name\": \"getTokenBalances\",\n      \"url\": \"/:address/erc20\"\n    },\n    params: options\n  }),\n  getTokenTransfers: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"account\",\n      \"name\": \"getTokenTransfers\",\n      \"url\": \"/:address/erc20/transfers\"\n    },\n    params: options\n  }),\n  getNFTs: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"account\",\n      \"name\": \"getNFTs\",\n      \"url\": \"/:address/nft\"\n    },\n    params: options\n  }),\n  getNFTTransfers: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"account\",\n      \"name\": \"getNFTTransfers\",\n      \"url\": \"/:address/nft/transfers\"\n    },\n    params: options\n  }),\n  getNFTsForContract: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"account\",\n      \"name\": \"getNFTsForContract\",\n      \"url\": \"/:address/nft/:token_address\"\n    },\n    params: options\n  })\n});\n\n_defineProperty(Web3Api, \"token\", {\n  getTokenMetadata: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"token\",\n      \"name\": \"getTokenMetadata\",\n      \"url\": \"/erc20/metadata\"\n    },\n    params: options\n  }),\n  getNFTTrades: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"token\",\n      \"name\": \"getNFTTrades\",\n      \"url\": \"/nft/:address/trades\"\n    },\n    params: options\n  }),\n  getNFTLowestPrice: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"token\",\n      \"name\": \"getNFTLowestPrice\",\n      \"url\": \"/nft/:address/lowestprice\"\n    },\n    params: options\n  }),\n  getTokenMetadataBySymbol: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"token\",\n      \"name\": \"getTokenMetadataBySymbol\",\n      \"url\": \"/erc20/metadata/symbols\"\n    },\n    params: options\n  }),\n  getTokenPrice: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"token\",\n      \"name\": \"getTokenPrice\",\n      \"url\": \"/erc20/:address/price\"\n    },\n    params: options\n  }),\n  getTokenAddressTransfers: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"token\",\n      \"name\": \"getTokenAddressTransfers\",\n      \"url\": \"/erc20/:address/transfers\"\n    },\n    params: options\n  }),\n  getTokenAllowance: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"token\",\n      \"name\": \"getTokenAllowance\",\n      \"url\": \"/erc20/:address/allowance\"\n    },\n    params: options\n  }),\n  searchNFTs: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"token\",\n      \"name\": \"searchNFTs\",\n      \"url\": \"/nft/search\"\n    },\n    params: options\n  }),\n  getNftTransfersFromToBlock: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"token\",\n      \"name\": \"getNftTransfersFromToBlock\",\n      \"url\": \"/nft/transfers\"\n    },\n    params: options\n  }),\n  getAllTokenIds: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"token\",\n      \"name\": \"getAllTokenIds\",\n      \"url\": \"/nft/:address\"\n    },\n    params: options\n  }),\n  getContractNFTTransfers: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"token\",\n      \"name\": \"getContractNFTTransfers\",\n      \"url\": \"/nft/:address/transfers\"\n    },\n    params: options\n  }),\n  getNFTOwners: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"token\",\n      \"name\": \"getNFTOwners\",\n      \"url\": \"/nft/:address/owners\"\n    },\n    params: options\n  }),\n  getNFTMetadata: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"token\",\n      \"name\": \"getNFTMetadata\",\n      \"url\": \"/nft/:address/metadata\"\n    },\n    params: options\n  }),\n  reSyncMetadata: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"token\",\n      \"name\": \"reSyncMetadata\",\n      \"url\": \"/nft/:address/:token_id/metadata/resync\"\n    },\n    params: options\n  }),\n  syncNFTContract: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"PUT\",\n      \"group\": \"token\",\n      \"name\": \"syncNFTContract\",\n      \"url\": \"/nft/:address/sync\"\n    },\n    params: options\n  }),\n  getTokenIdMetadata: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"token\",\n      \"name\": \"getTokenIdMetadata\",\n      \"url\": \"/nft/:address/:token_id\"\n    },\n    params: options\n  }),\n  getTokenIdOwners: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"token\",\n      \"name\": \"getTokenIdOwners\",\n      \"url\": \"/nft/:address/:token_id/owners\"\n    },\n    params: options\n  }),\n  getWalletTokenIdTransfers: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"token\",\n      \"name\": \"getWalletTokenIdTransfers\",\n      \"url\": \"/nft/:address/:token_id/transfers\"\n    },\n    params: options\n  })\n});\n\n_defineProperty(Web3Api, \"resolve\", {\n  resolveDomain: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"resolve\",\n      \"name\": \"resolveDomain\",\n      \"url\": \"/resolve/:domain\"\n    },\n    params: options\n  }),\n  resolveAddress: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"resolve\",\n      \"name\": \"resolveAddress\",\n      \"url\": \"/resolve/:address/reverse\"\n    },\n    params: options\n  })\n});\n\n_defineProperty(Web3Api, \"defi\", {\n  getPairReserves: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"defi\",\n      \"name\": \"getPairReserves\",\n      \"url\": \"/:pair_address/reserves\"\n    },\n    params: options\n  }),\n  getPairAddress: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"defi\",\n      \"name\": \"getPairAddress\",\n      \"url\": \"/:token0_address/:token1_address/pairAddress\"\n    },\n    params: options\n  })\n});\n\n_defineProperty(Web3Api, \"storage\", {\n  uploadFolder: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"POST\",\n      \"group\": \"storage\",\n      \"name\": \"uploadFolder\",\n      \"url\": \"/ipfs/uploadFolder\",\n      \"bodyParams\": [{\n        \"key\": \"data\",\n        \"type\": \"set body\",\n        \"required\": false\n      }]\n    },\n    params: options\n  })\n});\n\n_defineProperty(Web3Api, \"info\", {\n  web3ApiVersion: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"info\",\n      \"name\": \"web3ApiVersion\",\n      \"url\": \"/web3/version\"\n    },\n    params: options\n  }),\n  endpointWeights: async (options = {}) => Web3Api.fetch({\n    endpoint: {\n      \"method\": \"GET\",\n      \"group\": \"info\",\n      \"name\": \"endpointWeights\",\n      \"url\": \"/info/endpointWeights\"\n    },\n    params: options\n  })\n});\n\nvar _default = Web3Api;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}