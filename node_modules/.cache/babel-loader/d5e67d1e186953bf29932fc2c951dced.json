{"ast":null,"code":"var _jsxFileName = \"S:\\\\final hackathon\\\\nfi3\\\\src\\\\components\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport '../cssmodule/Header.css';\nimport { FaCut, FaHandHoldingUsd, FaUserAlt } from \"react-icons/fa\";\nimport { connectWallet, getCurrentWalletConnected //import here\n} from \"../utilities/Interact.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = props => {\n  _s();\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setStatus(\"👆🏽 Write a token_id in ttoken_id-field above.\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\n        }\n      });\n    }\n  } //State variables\n\n\n  const [walletAddress, setWallet] = useState(\"\");\n  const [Status, setStatus] = useState(\"\");\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.Status);\n    setWallet(walletResponse.address);\n  };\n\n  useEffect(async () => {\n    const {\n      address,\n      status\n    } = await getCurrentWalletConnected();\n    setWallet(address);\n    setStatus(status);\n    addWalletListener();\n  }, []);\n  useEffect(() => {\n    props.waladdhandler(walletAddress);\n  }, [walletAddress]); //console.log(walletAddress);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"nav-bar\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      style: {\n        textDecoration: 'none',\n        marginLeft: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"nft-logo\",\n        children: \"NFT-CHARTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 71\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/mortage\",\n      style: {\n        textDecoration: 'none',\n        paddingLeft: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn\",\n        children: [/*#__PURE__*/_jsxDEV(FaHandHoldingUsd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 100\n        }, this), \"     MORTAGE\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 79\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/splitter\",\n      style: {\n        textDecoration: 'none',\n        marginLeft: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn\",\n        children: [/*#__PURE__*/_jsxDEV(FaCut, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 99\n        }, this), \"  SPLITTER\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 79\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btn-r\",\n      onClick: connectWalletPressed,\n      children: walletAddress.length > 0 ? \"Connected: \" + String(walletAddress).substring(0, 6) + \"...\" + String(walletAddress).substring(38) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Header, \"II0ftQQTXurLsCcHMZ3HLbCAjmA=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["S:/final hackathon/nfi3/src/components/Header.js"],"names":["Link","useEffect","useState","FaCut","FaHandHoldingUsd","FaUserAlt","connectWallet","getCurrentWalletConnected","Header","props","addWalletListener","window","ethereum","on","accounts","length","setWallet","setStatus","walletAddress","Status","connectWalletPressed","walletResponse","address","status","waladdhandler","textDecoration","marginLeft","paddingLeft","String","substring"],"mappings":"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","sourcesContent":["\r\nimport { Link } from 'react-router-dom';\r\nimport  { useEffect, useState } from \"react\";\r\n\r\nimport '../cssmodule/Header.css';\r\n\r\nimport {FaCut,FaHandHoldingUsd,FaUserAlt}  from \"react-icons/fa\";\r\n\r\nimport {\r\n    connectWallet,\r\n    getCurrentWalletConnected\r\n    //import here\r\n  } from \"../utilities/Interact.js\";\r\n\r\n\r\nconst  Header=(props)=>{\r\n\r\n    function addWalletListener() {\r\n        if (window.ethereum) {\r\n          window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n            if (accounts.length > 0) {\r\n              setWallet(accounts[0]);\r\n              setStatus(\"👆🏽 Write a token_id in ttoken_id-field above.\");\r\n            } else {\r\n              setWallet(\"\");\r\n              setStatus(\"🦊 Connect to Metamask using the top right button.\");\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      //State variables\r\n      const [walletAddress, setWallet] = useState(\"\");\r\n      const [Status, setStatus] = useState(\"\");\r\n    \r\n     \r\n      const connectWalletPressed = async () => {\r\n        const walletResponse = await connectWallet();\r\n        setStatus(walletResponse.Status);\r\n        setWallet(walletResponse.address);\r\n      };\r\n    \r\n      useEffect(async () => {\r\n        const { address, status } = await getCurrentWalletConnected();\r\n        setWallet(address)\r\n        setStatus(status);\r\n    \r\n       \r\n      \r\n      addWalletListener();\r\n      }, []);\r\n    \r\n      useEffect(()=>{\r\n        props.waladdhandler(walletAddress);\r\n    \r\n      },[walletAddress])\r\n    \r\n      //console.log(walletAddress);\r\n\r\n\r\n    return (\r\n    <div class='nav-bar'>\r\n\r\n        <Link to='/' style={{ textDecoration: 'none',marginLeft: 0 }}><h3 className='nft-logo'>NFT-CHARTER</h3></Link>\r\n\r\n        <Link to='/mortage' style={{ textDecoration: 'none',paddingLeft: 0 }}><button class='btn' ><FaHandHoldingUsd/>     MORTAGE</button></Link> \r\n        <Link to='/splitter' style={{ textDecoration: 'none',marginLeft: 0 }}><button class='btn'><FaCut/>  SPLITTER</button></Link>\r\n        \r\n        {/* <button class='btn-r'><FaUserAlt/>  login</button>  */}\r\n\r\n        <button class='btn-r' onClick={connectWalletPressed}>\r\n        {walletAddress.length > 0 ? (\r\n                \"Connected: \" +\r\n                String(walletAddress).substring(0, 6) +\r\n                \"...\" +\r\n                String(walletAddress).substring(38)\r\n              ) : (\r\n                <span>Connect Wallet</span>\r\n              )}</button> \r\n\r\n\r\n\r\n    </div>\r\n    );\r\n    \r\n\r\n}\r\n\r\n\r\nexport default Header;"]},"metadata":{},"sourceType":"module"}