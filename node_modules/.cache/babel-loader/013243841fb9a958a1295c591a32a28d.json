{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _ethers = require(\"ethers\");\n\nvar _events = _interopRequireDefault(require(\"events\"));\n\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\n\nvar _ParseUser = _interopRequireDefault(require(\"./ParseUser\"));\n\nvar _ParseACL = _interopRequireDefault(require(\"./ParseACL\"));\n\nvar _MoralisErd = _interopRequireDefault(require(\"./MoralisErd\"));\n\nvar _MoralisDot = _interopRequireDefault(require(\"./MoralisDot\"));\n\nvar _MoralisSol = _interopRequireDefault(require(\"./MoralisSol\"));\n\nvar _TransferUtils = _interopRequireDefault(require(\"./TransferUtils\"));\n\nvar _Cloud = require(\"./Cloud\");\n\nvar _createSigningData = _interopRequireDefault(require(\"./createSigningData\"));\n\nvar _WalletConnectWeb3Connector = _interopRequireDefault(require(\"./Web3Connector/WalletConnectWeb3Connector\"));\n\nvar _InjectedWeb3Connector = _interopRequireDefault(require(\"./Web3Connector/InjectedWeb3Connector\"));\n\nvar _NetworkWeb3Connector = _interopRequireDefault(require(\"./Web3Connector/NetworkWeb3Connector\"));\n\nvar _ParseError = _interopRequireDefault(require(\"./ParseError\"));\n\nvar _InternalWeb3Provider = _interopRequireWildcard(require(\"./InternalWeb3Provider\"));\n\nvar _detectProvider = _interopRequireDefault(require(\"@metamask/detect-provider\"));\n\nvar _MagicWeb3Connector = _interopRequireDefault(require(\"./Web3Connector/MagicWeb3Connector\"));\n\nvar _Web3AuthConnector = require(\"./Web3Connector/Web3AuthConnector\");\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst MoralisEmitter = new _events.default();\nconst WARNING = 'Non ethereum enabled browser';\nconst ERROR_WEB3_MISSING = 'Missing web3 instance, make sure to call Moralis.enableWeb3() or Moralis.authenticate()';\n\nclass MoralisWeb3 {\n  // Ethers.js instance that will be set after calling enableWeb3\n  // Internal web3 provider, containing the Ethers.js Web3 library for internal usage for handling transactions, contracts etc.\n  static addListener(eventName, listener) {\n    MoralisEmitter.on(eventName, listener);\n    return () => MoralisEmitter.removeListener(eventName, listener);\n  }\n\n  static on(eventName, listener) {\n    MoralisEmitter.on(eventName, listener);\n    return () => MoralisEmitter.removeListener(eventName, listener);\n  }\n\n  static once(eventName, listener) {\n    MoralisEmitter.once(eventName, listener);\n    return () => MoralisEmitter.removeListener(eventName, listener);\n  }\n\n  static removeListener(eventName, listener) {\n    return MoralisEmitter.removeListener(eventName, listener);\n  }\n\n  static off(eventName, listener) {\n    return MoralisEmitter.off(eventName, listener);\n  }\n\n  static removeAllListeners(eventName, listener) {\n    return MoralisEmitter.removeAllListeners(eventName, listener);\n  }\n\n  static isWeb3Enabled() {\n    return this.ensureWeb3IsInstalled();\n  }\n\n  static handleWeb3AccountChanged(account) {\n    MoralisEmitter.emit(_InternalWeb3Provider.InternalWeb3Events.ACCOUNT_CHANGED, account);\n  }\n\n  static handleWeb3ChainChanged(chainId) {\n    var _this$internalWeb3Pro;\n\n    this.web3 = (_this$internalWeb3Pro = this.internalWeb3Provider) === null || _this$internalWeb3Pro === void 0 ? void 0 : _this$internalWeb3Pro.web3;\n    MoralisEmitter.emit(_InternalWeb3Provider.InternalWeb3Events.CHAIN_CHANGED, chainId);\n  }\n\n  static handleWeb3Connect(connectInfo) {\n    MoralisEmitter.emit(_InternalWeb3Provider.InternalWeb3Events.PROVIDER_CONNECT, connectInfo);\n  }\n\n  static handleWeb3Disconnect(error) {\n    // Do not disconnect when MetaMask is attempting to reconnect\n    if ((error === null || error === void 0 ? void 0 : error.message) === 'MetaMask: Disconnected from chain. Attempting to connect.') {\n      return;\n    }\n\n    this.cleanup();\n    MoralisEmitter.emit(_InternalWeb3Provider.InternalWeb3Events.PROVIDER_DISCONNECT, error);\n  }\n\n  static async enableWeb3() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (this.isEnablingWeb3) {\n      throw new Error('Cannot execute Moralis.enableWeb3(), as Moralis Moralis.enableWeb3() already has been called, but is not finished yet ');\n    }\n\n    try {\n      var _options$connector;\n\n      this.isEnablingWeb3 = true;\n\n      if (this.speedyNodeApiKey) {\n        options.speedyNodeApiKey = this.speedyNodeApiKey;\n        options.provider = 'network';\n      }\n\n      const Connector = (_options$connector = options === null || options === void 0 ? void 0 : options.connector) !== null && _options$connector !== void 0 ? _options$connector : MoralisWeb3.getWeb3Connector(options === null || options === void 0 ? void 0 : options.provider);\n      const connector = new Connector(options);\n      const anyNetwork = (options === null || options === void 0 ? void 0 : options.anyNetwork) === true ? true : false;\n      this.internalWeb3Provider = new _InternalWeb3Provider.default(connector, anyNetwork, options.privateKey);\n      this.internalWeb3Provider.on(_InternalWeb3Provider.InternalWeb3Events.ACCOUNT_CHANGED, args => this.handleWeb3AccountChanged(args));\n      this.internalWeb3Provider.on(_InternalWeb3Provider.InternalWeb3Events.CHAIN_CHANGED, args => this.handleWeb3ChainChanged(args));\n      this.internalWeb3Provider.on(_InternalWeb3Provider.InternalWeb3Events.PROVIDER_CONNECT, args => this.handleWeb3Connect(args));\n      this.internalWeb3Provider.on(_InternalWeb3Provider.InternalWeb3Events.PROVIDER_DISCONNECT, args => this.handleWeb3Disconnect(args));\n      let provider;\n      let chainId;\n      let account;\n      let internalWeb3;\n\n      try {\n        ({\n          provider,\n          chainId,\n          account,\n          web3: internalWeb3\n        } = await this.internalWeb3Provider.activate(options));\n\n        if (!provider) {\n          throw new Error('Failed to activate, no provider returned');\n        }\n      } catch (error) {\n        await this.cleanup();\n        throw error;\n      }\n\n      const web3 = internalWeb3;\n      this.web3 = internalWeb3;\n      MoralisEmitter.emit(_InternalWeb3Provider.InternalWeb3Events.WEB3_ENABLED, {\n        chainId,\n        account,\n        connector,\n        provider,\n        web3\n      });\n      return web3; // eslint-disable-next-line no-useless-catch\n    } catch (error) {\n      throw error;\n    } finally {\n      this.isEnablingWeb3 = false;\n    }\n  }\n\n  static isDotAuth(options) {\n    switch (options === null || options === void 0 ? void 0 : options.type) {\n      case 'dot':\n      case 'polkadot':\n      case 'kusama':\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  static isElrondAuth(options) {\n    switch (options === null || options === void 0 ? void 0 : options.type) {\n      case 'erd':\n      case 'elrond':\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  static isSolAuth(options) {\n    switch (options === null || options === void 0 ? void 0 : options.type) {\n      case 'sol':\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  static getWeb3Connector(provider) {\n    switch (provider) {\n      case 'walletconnect':\n      case 'walletConnect':\n      case 'wc':\n        return _WalletConnectWeb3Connector.default;\n\n      case 'network':\n        return _NetworkWeb3Connector.default;\n\n      case 'magicLink':\n        return _MagicWeb3Connector.default;\n\n      case 'web3Auth':\n        return _Web3AuthConnector.Web3Auth;\n\n      default:\n        return _InjectedWeb3Connector.default;\n    }\n  }\n\n  static async deactivateWeb3() {\n    return this.cleanup();\n  }\n  /**\n   * Cleanup previously established provider\n   */\n\n\n  static async cleanup() {\n    if (this.isEnablingWeb3) {\n      // Enabling is aborted before finishing\n      this.isEnablingWeb3 = false;\n      this.internalWeb3Provider = null;\n      this.web3 = null;\n      return;\n    }\n\n    if (this.web3 && this.internalWeb3Provider) {\n      MoralisEmitter.emit(_InternalWeb3Provider.InternalWeb3Events.WEB3_DEACTIVATED, {\n        connector: this.internalWeb3Provider.connector,\n        provider: this.internalWeb3Provider.provider\n      });\n    }\n\n    if (this.internalWeb3Provider) {\n      this.internalWeb3Provider.removeListener(_InternalWeb3Provider.InternalWeb3Events.ACCOUNT_CHANGED, this.handleWeb3AccountChanged);\n      this.internalWeb3Provider.removeListener(_InternalWeb3Provider.InternalWeb3Events.CHAIN_CHANGED, this.handleWeb3ChainChanged);\n      this.internalWeb3Provider.removeListener(_InternalWeb3Provider.InternalWeb3Events.PROVIDER_CONNECT, this.handleWeb3Connect);\n      this.internalWeb3Provider.removeListener(_InternalWeb3Provider.InternalWeb3Events.PROVIDER_DISCONNECT, this.handleWeb3Disconnect); // For example, if walletconnect has been enabled, then later on metamask, then wc is not the internalProvider, but still has an active connection\n\n      try {\n        await this.internalWeb3Provider.deactivate();\n      } catch (error) {// Do nothing\n      }\n    }\n\n    this.internalWeb3Provider = null;\n    this.web3 = null;\n  }\n\n  static async authenticate(options) {\n    const isLoggedIn = await _ParseUser.default.currentAsync();\n\n    if (isLoggedIn) {\n      await _ParseUser.default.logOut();\n    }\n\n    if (MoralisWeb3.isDotAuth(options)) {\n      return _MoralisDot.default.authenticate(options);\n    }\n\n    if (MoralisWeb3.isElrondAuth(options)) {\n      return _MoralisErd.default.authenticate(options);\n    }\n\n    if (MoralisWeb3.isSolAuth(options)) {\n      return _MoralisSol.default.authenticate(options);\n    }\n\n    await this.enableWeb3(options);\n    const {\n      account,\n      web3: internalWeb3,\n      signer\n    } = this.getInternalWeb3Provider();\n\n    if (!account) {\n      throw new Error('Cannot authenticate, no account returned from provider');\n    }\n\n    const message = (options === null || options === void 0 ? void 0 : options.signingMessage) || MoralisWeb3.getSigningData();\n    const data = await (0, _createSigningData.default)(message);\n    const ethAddress = account.toLowerCase();\n    if (!ethAddress) throw new Error('Address not found');\n    const signature = await signer.signMessage(data);\n    if (!signature) throw new Error('Data not signed');\n    const user = await _ParseUser.default.logInWith('moralisEth', {\n      authData: {\n        id: ethAddress,\n        signature,\n        data\n      }\n    });\n    if (!user) throw new Error('Could not get user');\n    await user.setACL(new _ParseACL.default(user));\n    user.addAllUnique('accounts', [ethAddress]);\n    user.set('ethAddress', ethAddress);\n    await user.save(null, options);\n    return user;\n  }\n\n  static async link(account, options) {\n    const {\n      signer\n    } = this.getInternalWeb3Provider();\n    const message = (options === null || options === void 0 ? void 0 : options.signingMessage) || MoralisWeb3.getSigningData();\n    const user = await _ParseUser.default.currentAsync();\n    const ethAddress = account.toLowerCase();\n\n    const EthAddress = _ParseObject.default.extend('_EthAddress');\n\n    const query = new _ParseQuery.default(EthAddress);\n    const ethAddressRecord = await query.get(ethAddress).catch(() => null);\n\n    if (!ethAddressRecord) {\n      const data = await (0, _createSigningData.default)(message);\n      const signature = await signer.signMessage(data);\n      if (!signature) throw new Error('Data not signed');\n      await user.linkWith('moralisEth', {\n        authData: {\n          id: ethAddress,\n          signature,\n          data\n        }\n      });\n    }\n\n    user.addAllUnique('accounts', [ethAddress]);\n    user.set('ethAddress', ethAddress);\n    await user.save(null, options);\n    return user;\n  }\n\n  static async unlink(account) {\n    var _user$get;\n\n    const accountsLower = account.toLowerCase();\n\n    const EthAddress = _ParseObject.default.extend('_EthAddress');\n\n    const query = new _ParseQuery.default(EthAddress);\n    const ethAddressRecord = await query.get(accountsLower);\n    await ethAddressRecord.destroy();\n    const user = await _ParseUser.default.currentAsync();\n    const accounts = (_user$get = user.get('accounts')) !== null && _user$get !== void 0 ? _user$get : [];\n    const nextAccounts = accounts.filter(v => v !== accountsLower);\n    user.set('accounts', nextAccounts);\n    user.set('ethAddress', nextAccounts[0]);\n    await user._unlinkFrom('moralisEth');\n    await user.save();\n    return user;\n  }\n\n  static async initPlugins(installedPlugins) {\n    const specs = installedPlugins || (await (0, _Cloud.run)('getPluginSpecs'));\n    if (!this.Plugins) this.Plugins = {};\n    if (!specs) return;\n    const allPlugins = this.Plugins;\n    specs.forEach(plugin => {\n      allPlugins[plugin.name] = {};\n      plugin.functions.forEach(f => {\n        allPlugins[plugin.name][f] = async (params, options) => {\n          if (!options) options = {};\n          const response = await (0, _Cloud.run)(`${plugin.name}_${f}`, params);\n\n          if (!response.data.success) {\n            const error = JSON.stringify(response.data.data, null, 2);\n            throw new Error(`Something went wrong\\n${error}`);\n          }\n\n          if (options.disableTriggers !== true) {\n            const triggerReturn = await this.handleTriggers(response.data.result.triggers, response.data.result.data);\n            if (triggerReturn) return triggerReturn;\n          }\n\n          return response.data.result;\n        };\n      });\n    });\n    this.Plugins = allPlugins;\n  }\n\n  static async handleTriggers(triggersArray, payload) {\n    var _triggersArray$i, _triggersArray$i$data, _triggersArray$i2, _triggersArray$i2$dat, _triggersArray$i$data2, _triggersArray$i3, _triggersArray$i3$dat, _triggersArray$i4, _triggersArray$i4$dat, _triggersArray$i5, _triggersArray$i6, _triggersArray$i7, _triggersArray$i8, _triggersArray$i9, _triggersArray$i10, _triggersArray$i11, _triggersArray$i12, _triggersArray$i13, _triggersArray$i14, _triggersArray$i15, _triggersArray$i16, _triggersArray$i17, _triggersArray$i18, _triggersArray$i20, _triggersArray$i22, _triggersArray$i23, _triggersArray$i24;\n\n    if (!triggersArray) return;\n\n    for (let i = 0; i < triggersArray.length; i++) {\n      switch (triggersArray[i].name) {\n        // Handles `openUrl` trigger\n        case 'openUrl':\n          if (triggersArray[i].newTab) window.open(triggersArray[i].url);else window.open(triggersArray[i].url, '_self');\n          break;\n        // Handles `web3Transaction` trigger\n\n        case 'web3Transaction':\n          // Trigger a web3 transaction (await)\n          response = await this.getInternalWeb3Provider().signer.sendTransaction({\n            from: (_triggersArray$i = triggersArray[i]) === null || _triggersArray$i === void 0 ? void 0 : (_triggersArray$i$data = _triggersArray$i.data) === null || _triggersArray$i$data === void 0 ? void 0 : _triggersArray$i$data.from,\n            to: (_triggersArray$i2 = triggersArray[i]) === null || _triggersArray$i2 === void 0 ? void 0 : (_triggersArray$i2$dat = _triggersArray$i2.data) === null || _triggersArray$i2$dat === void 0 ? void 0 : _triggersArray$i2$dat.to,\n            value: _ethers.ethers.BigNumber.from((_triggersArray$i$data2 = (_triggersArray$i3 = triggersArray[i]) === null || _triggersArray$i3 === void 0 ? void 0 : (_triggersArray$i3$dat = _triggersArray$i3.data) === null || _triggersArray$i3$dat === void 0 ? void 0 : _triggersArray$i3$dat.value) !== null && _triggersArray$i$data2 !== void 0 ? _triggersArray$i$data2 : 0),\n            data: (_triggersArray$i4 = triggersArray[i]) === null || _triggersArray$i4 === void 0 ? void 0 : (_triggersArray$i4$dat = _triggersArray$i4.data) === null || _triggersArray$i4$dat === void 0 ? void 0 : _triggersArray$i4$dat.data\n          });\n\n          if (((_triggersArray$i5 = triggersArray[i]) === null || _triggersArray$i5 === void 0 ? void 0 : _triggersArray$i5.shouldAwait) === true) {\n            response = await response.wait();\n          } // Save the response returned by the web3 trasanction\n\n\n          if (((_triggersArray$i6 = triggersArray[i]) === null || _triggersArray$i6 === void 0 ? void 0 : _triggersArray$i6.saveResponse) === true) this.memoryCard.save(response); // Return payload and response\n\n          if (((_triggersArray$i7 = triggersArray[i]) === null || _triggersArray$i7 === void 0 ? void 0 : _triggersArray$i7.shouldReturnPayload) === true) return {\n            payload: payload,\n            response: response\n          }; // Only return response\n\n          if (((_triggersArray$i8 = triggersArray[i]) === null || _triggersArray$i8 === void 0 ? void 0 : _triggersArray$i8.shouldReturnResponse) === true) return response;\n          break;\n        // Handles `web3Sign` trigger\n\n        case 'web3Sign':\n          if (!triggersArray[i].message) throw new Error('web3Sign trigger does not have a message to sign');\n          if (!triggersArray[i].signer) throw new Error('web3Sign trigger signer address missing or invalid'); // eslint-disable-next-line no-case-declarations\n\n          const message = JSON.parse(triggersArray[i].message);\n          delete message.types.EIP712Domain; // eslint-disable-next-line no-case-declarations\n\n          let response = await this.getInternalWeb3Provider().signer._signTypedData(message.domain, message.types, message.message); // Save response\n\n          if (((_triggersArray$i9 = triggersArray[i]) === null || _triggersArray$i9 === void 0 ? void 0 : _triggersArray$i9.saveResponse) === true) this.memoryCard.save(response); // Return payload and response\n\n          if (((_triggersArray$i10 = triggersArray[i]) === null || _triggersArray$i10 === void 0 ? void 0 : _triggersArray$i10.shouldReturnPayload) === true) return {\n            payload: payload,\n            response: response\n          }; // Only return response\n\n          if (((_triggersArray$i11 = triggersArray[i]) === null || _triggersArray$i11 === void 0 ? void 0 : _triggersArray$i11.shouldReturnResponse) === true) return response;\n          break;\n        // Calls a given plugin endpoint\n\n        case 'callPluginEndpoint':\n          if (!triggersArray[i].pluginName) throw new Error('callPluginEndpoint trigger does not have an plugin name to call');\n          if (!triggersArray[i].endpoint) throw new Error('callPluginEndpoint trigger does not have an endpoint to call'); // Call a plugin endpoint (await)\n\n          if (((_triggersArray$i12 = triggersArray[i]) === null || _triggersArray$i12 === void 0 ? void 0 : _triggersArray$i12.shouldAwait) === true) {\n            // Check if a saved response has to be used to fill a parameter needed by the plugin\n            if (triggersArray[i].useSavedResponse === true) {\n              triggersArray[i].params[triggersArray[i].savedResponseAs] = this.memoryCard.get(triggersArray[i].savedResponseAt);\n            } // Call the endpoint\n\n\n            response = await (0, _Cloud.run)(`${triggersArray[i].pluginName}_${triggersArray[i].endpoint}`, triggersArray[i].params);\n          } // Call a plugin endpoint (does NOT await)\n\n\n          if (((_triggersArray$i13 = triggersArray[i]) === null || _triggersArray$i13 === void 0 ? void 0 : _triggersArray$i13.shouldAwait) === false) {\n            // Check if a saved response has to be used to fill a parameter needed by the plugin\n            if (triggersArray[i].useSavedResponse === true) {\n              triggersArray[i].params[triggersArray[i].savedResponseAs] = this.memoryCard.get(triggersArray[i].savedResponseAt);\n            } // Call the endpoint\n\n\n            response = (0, _Cloud.run)(`${triggersArray[i].pluginName}_${triggersArray[i].endpoint}`, triggersArray[i].params);\n          } // If the response contains a trigger, run it\n\n\n          if (triggersArray[i].runResponseTrigger === true) {\n            response = await this.handleTriggers(response.data.result.triggers, response.data.result.data);\n          } // Save response\n\n\n          if (((_triggersArray$i14 = triggersArray[i]) === null || _triggersArray$i14 === void 0 ? void 0 : _triggersArray$i14.saveResponse) === true) this.memoryCard.save(response); // If should not run the response trigger, continues the loop and does not return (to avoid breaking the loop execution and run other pending triggers)\n\n          if (((_triggersArray$i15 = triggersArray[i]) === null || _triggersArray$i15 === void 0 ? void 0 : _triggersArray$i15.runResponseTrigger) === false) continue; // Return payload and response\n\n          if (((_triggersArray$i16 = triggersArray[i]) === null || _triggersArray$i16 === void 0 ? void 0 : _triggersArray$i16.shouldReturnPayload) === true) return {\n            payload: 'payload',\n            response: response\n          }; // Only return response\n\n          if (((_triggersArray$i17 = triggersArray[i]) === null || _triggersArray$i17 === void 0 ? void 0 : _triggersArray$i17.shouldReturnResponse) === true) return response;\n          break;\n\n        case 'web3SignV4':\n          if (!triggersArray[i].parameters) throw new Error('web3SignV4 trigger does not have `parameters` to sign');\n          if (!triggersArray[i].from) throw new Error('web3SignV4 trigger does not have a `from` address');\n\n          if (((_triggersArray$i18 = triggersArray[i]) === null || _triggersArray$i18 === void 0 ? void 0 : _triggersArray$i18.shouldAwait) === true) {\n            try {\n              var _triggersArray$i19;\n\n              const {\n                domain,\n                types,\n                message\n              } = JSON.parse(triggersArray[i].parameters[1]);\n\n              if (types.EIP712Domain) {\n                // Ethers.js will compute this automatically\n                delete types.EIP712Domain;\n              }\n\n              const signature = await this.getInternalWeb3Provider().signer._signTypedData(domain, types, message);\n              const result = {\n                result: signature\n              };\n              if (((_triggersArray$i19 = triggersArray[i]) === null || _triggersArray$i19 === void 0 ? void 0 : _triggersArray$i19.saveResponse) === true) this.memoryCard.save(result);\n              response = result;\n            } catch (error) {\n              throw new Error(error.message || error);\n            }\n          }\n\n          if (((_triggersArray$i20 = triggersArray[i]) === null || _triggersArray$i20 === void 0 ? void 0 : _triggersArray$i20.shouldAwait) === false) {\n            const {\n              domain,\n              types,\n              message\n            } = JSON.parse(triggersArray[i].parameters[1]);\n\n            if (types.EIP712Domain) {\n              // Ethers.js will compute this automatically\n              delete types.EIP712Domain;\n            }\n\n            this.getInternalWeb3Provider().signer._signTypedData(domain, types, message) // eslint-disable-next-line no-loop-func\n            .then(signature => {\n              var _triggersArray$i21;\n\n              const result = {\n                result: signature\n              };\n              if (((_triggersArray$i21 = triggersArray[i]) === null || _triggersArray$i21 === void 0 ? void 0 : _triggersArray$i21.saveResponse) === true) this.memoryCard.save(result);\n              response = result;\n            }).catch(error => {\n              throw new Error(error.message || error);\n            });\n          } // Return payload and response\n\n\n          if (((_triggersArray$i22 = triggersArray[i]) === null || _triggersArray$i22 === void 0 ? void 0 : _triggersArray$i22.shouldReturnPayload) === true) return {\n            payload: payload,\n            response: response\n          }; // Only return response\n\n          if (((_triggersArray$i23 = triggersArray[i]) === null || _triggersArray$i23 === void 0 ? void 0 : _triggersArray$i23.shouldReturnResponse) === true) return response;\n          break;\n\n        default:\n          throw new Error(`Unknown trigger: \"${(_triggersArray$i24 = triggersArray[i]) === null || _triggersArray$i24 === void 0 ? void 0 : _triggersArray$i24.name}\"`);\n      }\n    } // Delete all saved data\n\n\n    this.memoryCard.deleteSaved();\n  }\n\n  static async getAllERC20() {\n    let {\n      chain,\n      address\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const result = await (0, _Cloud.run)('getAllERC20', {\n      chain,\n      address\n    });\n    return result;\n  }\n\n  static async getERC20() {\n    let {\n      chain,\n      address,\n      symbol,\n      tokenAddress\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const result = (0, _Cloud.run)('getERC20', {\n      chain,\n      address,\n      symbol,\n      tokenAddress\n    });\n    return result;\n  }\n\n  static getNFTs() {\n    let {\n      chain = 'Eth',\n      address = ''\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return (0, _Cloud.run)('getNFTs_old', {\n      chain,\n      address\n    });\n  }\n\n  static getNFTsCount() {\n    let {\n      chain = 'Eth',\n      address = ''\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return (0, _Cloud.run)('getNFTsCount_old', {\n      chain,\n      address\n    });\n  }\n\n  static getTransactions() {\n    let {\n      chain = 'Eth',\n      address = '',\n      order = 'desc'\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return (0, _Cloud.run)('getTransactions', {\n      chain,\n      address,\n      order\n    });\n  }\n\n  static getTransactionsCount() {\n    let {\n      chain = 'Eth',\n      address = ''\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return (0, _Cloud.run)('getTransactionsCount', {\n      chain,\n      address\n    });\n  }\n\n  static async transfer() {\n    let {\n      type = 'native',\n      receiver = '',\n      contractAddress = '',\n      // eslint-disable-next-line camelcase\n      contract_address,\n      amount = '',\n      tokenId = '',\n      // eslint-disable-next-line camelcase\n      token_id,\n      system = 'evm'\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // Allow snake-case for backwards compatibility\n    // eslint-disable-next-line camelcase\n    contractAddress = contractAddress || contract_address; // eslint-disable-next-line camelcase\n\n    tokenId = tokenId || token_id;\n    const options = {\n      receiver,\n      contractAddress,\n      amount,\n      tokenId,\n      system\n    };\n\n    _TransferUtils.default.isSupportedType(type);\n\n    _TransferUtils.default.validateInput(type, options);\n\n    const {\n      web3: internalWeb3,\n      account: sender,\n      signer\n    } = this.getInternalWeb3Provider();\n    if (!sender) throw new Error('Sender address not found');\n    let transferOperation;\n    let customToken;\n    if (tokenId) _TransferUtils.default.isUint256(tokenId);\n\n    if (type !== 'native') {\n      customToken = new _ethers.ethers.Contract(contractAddress, _TransferUtils.default.abi[type], signer);\n    }\n\n    switch (type) {\n      case 'native':\n        transferOperation = signer.sendTransaction({\n          to: receiver,\n          value: _ethers.ethers.BigNumber.from(amount)\n        });\n        break;\n\n      case 'erc20':\n        transferOperation = customToken.transfer(receiver, amount, {\n          from: sender\n        });\n        break;\n\n      case 'erc721':\n        transferOperation = customToken.safeTransferFrom(sender, receiver, `${tokenId}`, {\n          from: sender\n        });\n        break;\n\n      case 'erc1155':\n        transferOperation = customToken.safeTransferFrom(sender, receiver, `${tokenId}`, amount, '0x', {\n          from: sender\n        });\n        break;\n\n      default:\n        throw new Error(`Unknown transfer type: \"${type}\"`);\n    }\n\n    const result = await transferOperation;\n    return result;\n  }\n\n  static async executeFunction() {\n    let {\n      contractAddress,\n      abi,\n      functionName,\n      msgValue,\n      params = {},\n      overrides = {}\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var _functionData;\n\n    const {\n      account,\n      web3: internalWeb3,\n      provider,\n      signerOrProvider\n    } = this.getInternalWeb3Provider(); // Check if function is an overloaded function definition. ex \"getMessage(string)\", or \"getMessage()\"\n\n    const overloadedFunction = functionName.match(/^(.+)\\((.*)\\)$/);\n    let functionData;\n\n    if (overloadedFunction) {\n      // Get functiondata from overloaded function\n      const nameWithoutTopics = overloadedFunction[1];\n      const topics = overloadedFunction[2].split(',').map(topic => topic.trim()).filter(topic => !!topic);\n      const functionDataArray = abi.filter(x => x.name === nameWithoutTopics);\n\n      if (functionDataArray.length === 0) {\n        throw new Error('Function does not exist in abi');\n      }\n\n      functionData = functionDataArray.find(data => {\n        var _data$inputs$length;\n\n        return ((_data$inputs$length = data === null || data === void 0 ? void 0 : data.inputs.length) !== null && _data$inputs$length !== void 0 ? _data$inputs$length : 0) === topics.length && data.inputs.every((input, index) => input.type === topics[index]);\n      });\n\n      if (!functionData) {\n        const possibleTopics = functionDataArray.map(data => `${data.name}(${data.inputs.map(input => input.type).join(',')})`);\n        throw new Error(`Function with the provided topic does not exist in abi. Possible funcationNames: ${possibleTopics.join(' ,')}`);\n      }\n    } else {\n      // Get functiondata from 'normal' function\n      const functionDataArray = abi.filter(x => x.name === functionName);\n\n      if (functionDataArray.length === 0) {\n        throw new Error('Function does not exist in abi');\n      }\n\n      if (functionDataArray.length > 1) {\n        const possibleTopics = functionDataArray.map(data => `${data.name}(${data.inputs.map(input => input.type).join(',')})`);\n        throw new Error(`Multiple function definitions found in the abi. Please include the topic in the functionName. Possible funcationNames: ${possibleTopics.join(' ,')}`);\n      }\n\n      functionData = functionDataArray[0];\n    }\n\n    const stateMutability = (_functionData = functionData) === null || _functionData === void 0 ? void 0 : _functionData.stateMutability;\n\n    if (!(stateMutability === 'view' || stateMutability === 'pure')) {\n      if (!params.from) {\n        const currentAddress = account;\n        if (!currentAddress) throw new Error('From address is required');\n        ({}).from = currentAddress;\n      }\n    }\n\n    const errors = [];\n\n    for (const input of functionData.inputs) {\n      const value = params[input.name];\n\n      if (!value && typeof value !== 'number' && typeof value !== 'boolean' && input.name !== '') {\n        errors.push(`${input.name} is required`);\n      }\n    }\n\n    if (errors.length > 0) {\n      throw errors;\n    }\n\n    const parsedInputs = functionData.inputs.map(x => {\n      return params[x.name];\n    });\n    const contract = new _ethers.ethers.Contract(contractAddress, abi, signerOrProvider);\n    const contractMethod = contract[functionName];\n\n    if (!contractMethod) {\n      throw new Error(`Cannot find function \"${functionName}\" on the contract`);\n    }\n\n    const response = await contractMethod(...Object.values(parsedInputs), msgValue ? {\n      value: _ethers.ethers.BigNumber.from(`${msgValue}`)\n    } : {});\n    return response;\n  }\n\n  static getSigningData() {\n    return `Moralis Authentication`;\n  }\n\n  static ensureWeb3IsInstalled() {\n    return this.internalWeb3Provider && this.internalWeb3Provider.web3 ? true : false;\n  }\n  /**\n   * Gets the internalWeb3Provider with validation to make sure it has been instansiated with 'enableWeb3()'\n   */\n\n\n  static getInternalWeb3Provider() {\n    if (!this.ensureWeb3IsInstalled()) throw new Error(ERROR_WEB3_MISSING);\n    return this.internalWeb3Provider;\n  }\n  /**\n   * Gets web3 from the internalWeb3Provider with validation to make sure it has been instansiated with 'enableWeb3()'\n   */\n\n\n  static getInternalWeb3() {\n    return this.getInternalWeb3Provider().web3;\n  }\n\n  static get provider() {\n    var _this$internalWeb3Pro2, _this$internalWeb3Pro3;\n\n    return (_this$internalWeb3Pro2 = (_this$internalWeb3Pro3 = this.internalWeb3Provider) === null || _this$internalWeb3Pro3 === void 0 ? void 0 : _this$internalWeb3Pro3.provider) !== null && _this$internalWeb3Pro2 !== void 0 ? _this$internalWeb3Pro2 : null;\n  }\n\n  static get connector() {\n    var _this$internalWeb3Pro4, _this$internalWeb3Pro5;\n\n    return (_this$internalWeb3Pro4 = (_this$internalWeb3Pro5 = this.internalWeb3Provider) === null || _this$internalWeb3Pro5 === void 0 ? void 0 : _this$internalWeb3Pro5.connector) !== null && _this$internalWeb3Pro4 !== void 0 ? _this$internalWeb3Pro4 : null;\n  }\n\n  static get connectorType() {\n    var _this$connector$type, _this$connector;\n\n    return (_this$connector$type = (_this$connector = this.connector) === null || _this$connector === void 0 ? void 0 : _this$connector.type) !== null && _this$connector$type !== void 0 ? _this$connector$type : null;\n  }\n\n  static get network() {\n    var _this$connector$netwo, _this$connector2;\n\n    return (_this$connector$netwo = (_this$connector2 = this.connector) === null || _this$connector2 === void 0 ? void 0 : _this$connector2.network) !== null && _this$connector$netwo !== void 0 ? _this$connector$netwo : null;\n  }\n\n  static get account() {\n    var _this$internalWeb3Pro6, _this$internalWeb3Pro7;\n\n    return (_this$internalWeb3Pro6 = (_this$internalWeb3Pro7 = this.internalWeb3Provider) === null || _this$internalWeb3Pro7 === void 0 ? void 0 : _this$internalWeb3Pro7.account) !== null && _this$internalWeb3Pro6 !== void 0 ? _this$internalWeb3Pro6 : null;\n  }\n\n  static get chainId() {\n    var _this$internalWeb3Pro8, _this$internalWeb3Pro9;\n\n    return (_this$internalWeb3Pro8 = (_this$internalWeb3Pro9 = this.internalWeb3Provider) === null || _this$internalWeb3Pro9 === void 0 ? void 0 : _this$internalWeb3Pro9.chainId) !== null && _this$internalWeb3Pro8 !== void 0 ? _this$internalWeb3Pro8 : null;\n  }\n\n  static getChainId() {\n    return this.chainId;\n  }\n\n  static get web3Library() {\n    return _ethers.ethers;\n  }\n\n  static _forwardToConnector(methodName, args) {\n    const {\n      connector\n    } = this.getInternalWeb3Provider();\n    const hasMethod = Boolean(connector[methodName]);\n\n    if (!hasMethod) {\n      throw new Error(`Cannot call ${methodName}, as it does not exist on connector type \"${connector.type}\"`);\n    }\n\n    return connector[methodName](...args);\n  }\n\n  static switchNetwork() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return this._forwardToConnector('switchNetwork', args);\n  }\n\n  static addNetwork() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return this._forwardToConnector('addNetwork', args);\n  }\n\n  static async isMetaMaskInstalled() {\n    return (await (0, _detectProvider.default)()) ? true : false;\n  }\n\n}\n\n_defineProperty(MoralisWeb3, \"speedyNodeApiKey\", void 0);\n\n_defineProperty(MoralisWeb3, \"web3\", null);\n\n_defineProperty(MoralisWeb3, \"internalWeb3Provider\", null);\n\n_defineProperty(MoralisWeb3, \"Plugins\", {});\n\n_defineProperty(MoralisWeb3, \"isEnablingWeb3\", false);\n\n_defineProperty(MoralisWeb3, \"memoryCard\", {\n  save(what) {\n    this.saved = what;\n  },\n\n  get(where) {\n    if (!this.saved) throw new Error('Nothing saved to memory card'); // In case the saved data is not an object but a simple string or number\n\n    if (where.length === 0) return this.getSaved();\n    let tmp;\n    let savedTmp = this.saved;\n\n    for (let i = 0; i < where.length; i++) {\n      tmp = savedTmp[where[i]];\n      savedTmp = tmp;\n    }\n\n    return savedTmp;\n  },\n\n  getSaved() {\n    return this.saved;\n  },\n\n  deleteSaved() {\n    this.saved = undefined;\n  }\n\n});\n\nMoralisWeb3.onConnect = MoralisWeb3.on.bind(MoralisWeb3, _InternalWeb3Provider.InternalWeb3Events.PROVIDER_CONNECT);\nMoralisWeb3.onDisconnect = MoralisWeb3.on.bind(MoralisWeb3, _InternalWeb3Provider.InternalWeb3Events.PROVIDER_DISCONNECT);\nMoralisWeb3.onWeb3Enabled = MoralisWeb3.on.bind(MoralisWeb3, _InternalWeb3Provider.InternalWeb3Events.WEB3_ENABLED);\nMoralisWeb3.onWeb3Deactivated = MoralisWeb3.on.bind(MoralisWeb3, _InternalWeb3Provider.InternalWeb3Events.WEB3_DEACTIVATED);\nMoralisWeb3.onChainChanged = MoralisWeb3.on.bind(MoralisWeb3, _InternalWeb3Provider.InternalWeb3Events.CHAIN_CHANGED);\nMoralisWeb3.onAccountChanged = MoralisWeb3.on.bind(MoralisWeb3, _InternalWeb3Provider.InternalWeb3Events.ACCOUNT_CHANGED);\nvar _default = MoralisWeb3;\nexports.default = _default;","map":{"version":3,"sources":["S:/final hack checkpoin/nfi3/node_modules/moralis/lib/node/MoralisWeb3.js"],"names":["Object","defineProperty","exports","value","default","_ethers","require","_events","_interopRequireDefault","_ParseObject","_ParseQuery","_ParseUser","_ParseACL","_MoralisErd","_MoralisDot","_MoralisSol","_TransferUtils","_Cloud","_createSigningData","_WalletConnectWeb3Connector","_InjectedWeb3Connector","_NetworkWeb3Connector","_ParseError","_InternalWeb3Provider","_interopRequireWildcard","_detectProvider","_MagicWeb3Connector","_Web3AuthConnector","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_defineProperty","enumerable","configurable","writable","MoralisEmitter","WARNING","ERROR_WEB3_MISSING","MoralisWeb3","addListener","eventName","listener","on","removeListener","once","off","removeAllListeners","isWeb3Enabled","ensureWeb3IsInstalled","handleWeb3AccountChanged","account","emit","InternalWeb3Events","ACCOUNT_CHANGED","handleWeb3ChainChanged","chainId","_this$internalWeb3Pro","web3","internalWeb3Provider","CHAIN_CHANGED","handleWeb3Connect","connectInfo","PROVIDER_CONNECT","handleWeb3Disconnect","error","message","cleanup","PROVIDER_DISCONNECT","enableWeb3","options","isEnablingWeb3","Error","_options$connector","speedyNodeApiKey","provider","Connector","connector","getWeb3Connector","anyNetwork","privateKey","args","internalWeb3","activate","WEB3_ENABLED","isDotAuth","type","isElrondAuth","isSolAuth","Web3Auth","deactivateWeb3","WEB3_DEACTIVATED","deactivate","authenticate","isLoggedIn","currentAsync","logOut","signer","getInternalWeb3Provider","signingMessage","getSigningData","data","ethAddress","toLowerCase","signature","signMessage","user","logInWith","authData","id","setACL","addAllUnique","save","link","EthAddress","extend","query","ethAddressRecord","catch","linkWith","unlink","_user$get","accountsLower","destroy","accounts","nextAccounts","filter","v","_unlinkFrom","initPlugins","installedPlugins","specs","run","Plugins","allPlugins","forEach","plugin","name","functions","f","params","response","success","JSON","stringify","disableTriggers","triggerReturn","handleTriggers","result","triggers","triggersArray","payload","_triggersArray$i","_triggersArray$i$data","_triggersArray$i2","_triggersArray$i2$dat","_triggersArray$i$data2","_triggersArray$i3","_triggersArray$i3$dat","_triggersArray$i4","_triggersArray$i4$dat","_triggersArray$i5","_triggersArray$i6","_triggersArray$i7","_triggersArray$i8","_triggersArray$i9","_triggersArray$i10","_triggersArray$i11","_triggersArray$i12","_triggersArray$i13","_triggersArray$i14","_triggersArray$i15","_triggersArray$i16","_triggersArray$i17","_triggersArray$i18","_triggersArray$i20","_triggersArray$i22","_triggersArray$i23","_triggersArray$i24","i","length","newTab","window","open","url","sendTransaction","from","to","ethers","BigNumber","shouldAwait","wait","saveResponse","memoryCard","shouldReturnPayload","shouldReturnResponse","parse","types","EIP712Domain","_signTypedData","domain","pluginName","endpoint","useSavedResponse","savedResponseAs","savedResponseAt","runResponseTrigger","parameters","_triggersArray$i19","then","_triggersArray$i21","deleteSaved","getAllERC20","chain","address","getERC20","symbol","tokenAddress","getNFTs","getNFTsCount","getTransactions","order","getTransactionsCount","transfer","receiver","contractAddress","contract_address","amount","tokenId","token_id","system","isSupportedType","validateInput","sender","transferOperation","customToken","isUint256","Contract","abi","safeTransferFrom","executeFunction","functionName","msgValue","overrides","_functionData","signerOrProvider","overloadedFunction","match","functionData","nameWithoutTopics","topics","split","map","topic","trim","functionDataArray","x","find","_data$inputs$length","inputs","every","input","index","possibleTopics","join","stateMutability","currentAddress","errors","push","parsedInputs","contract","contractMethod","values","getInternalWeb3","_this$internalWeb3Pro2","_this$internalWeb3Pro3","_this$internalWeb3Pro4","_this$internalWeb3Pro5","connectorType","_this$connector$type","_this$connector","network","_this$connector$netwo","_this$connector2","_this$internalWeb3Pro6","_this$internalWeb3Pro7","_this$internalWeb3Pro8","_this$internalWeb3Pro9","getChainId","web3Library","_forwardToConnector","methodName","hasMethod","Boolean","switchNetwork","addNetwork","isMetaMaskInstalled","what","saved","where","getSaved","tmp","savedTmp","undefined","onConnect","bind","onDisconnect","onWeb3Enabled","onWeb3Deactivated","onChainChanged","onAccountChanged","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _ethers = require(\"ethers\");\n\nvar _events = _interopRequireDefault(require(\"events\"));\n\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\n\nvar _ParseUser = _interopRequireDefault(require(\"./ParseUser\"));\n\nvar _ParseACL = _interopRequireDefault(require(\"./ParseACL\"));\n\nvar _MoralisErd = _interopRequireDefault(require(\"./MoralisErd\"));\n\nvar _MoralisDot = _interopRequireDefault(require(\"./MoralisDot\"));\n\nvar _MoralisSol = _interopRequireDefault(require(\"./MoralisSol\"));\n\nvar _TransferUtils = _interopRequireDefault(require(\"./TransferUtils\"));\n\nvar _Cloud = require(\"./Cloud\");\n\nvar _createSigningData = _interopRequireDefault(require(\"./createSigningData\"));\n\nvar _WalletConnectWeb3Connector = _interopRequireDefault(require(\"./Web3Connector/WalletConnectWeb3Connector\"));\n\nvar _InjectedWeb3Connector = _interopRequireDefault(require(\"./Web3Connector/InjectedWeb3Connector\"));\n\nvar _NetworkWeb3Connector = _interopRequireDefault(require(\"./Web3Connector/NetworkWeb3Connector\"));\n\nvar _ParseError = _interopRequireDefault(require(\"./ParseError\"));\n\nvar _InternalWeb3Provider = _interopRequireWildcard(require(\"./InternalWeb3Provider\"));\n\nvar _detectProvider = _interopRequireDefault(require(\"@metamask/detect-provider\"));\n\nvar _MagicWeb3Connector = _interopRequireDefault(require(\"./Web3Connector/MagicWeb3Connector\"));\n\nvar _Web3AuthConnector = require(\"./Web3Connector/Web3AuthConnector\");\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst MoralisEmitter = new _events.default();\nconst WARNING = 'Non ethereum enabled browser';\nconst ERROR_WEB3_MISSING = 'Missing web3 instance, make sure to call Moralis.enableWeb3() or Moralis.authenticate()';\n\nclass MoralisWeb3 {\n  // Ethers.js instance that will be set after calling enableWeb3\n  // Internal web3 provider, containing the Ethers.js Web3 library for internal usage for handling transactions, contracts etc.\n  static addListener(eventName, listener) {\n    MoralisEmitter.on(eventName, listener);\n    return () => MoralisEmitter.removeListener(eventName, listener);\n  }\n\n  static on(eventName, listener) {\n    MoralisEmitter.on(eventName, listener);\n    return () => MoralisEmitter.removeListener(eventName, listener);\n  }\n\n  static once(eventName, listener) {\n    MoralisEmitter.once(eventName, listener);\n    return () => MoralisEmitter.removeListener(eventName, listener);\n  }\n\n  static removeListener(eventName, listener) {\n    return MoralisEmitter.removeListener(eventName, listener);\n  }\n\n  static off(eventName, listener) {\n    return MoralisEmitter.off(eventName, listener);\n  }\n\n  static removeAllListeners(eventName, listener) {\n    return MoralisEmitter.removeAllListeners(eventName, listener);\n  }\n\n  static isWeb3Enabled() {\n    return this.ensureWeb3IsInstalled();\n  }\n\n  static handleWeb3AccountChanged(account) {\n    MoralisEmitter.emit(_InternalWeb3Provider.InternalWeb3Events.ACCOUNT_CHANGED, account);\n  }\n\n  static handleWeb3ChainChanged(chainId) {\n    var _this$internalWeb3Pro;\n\n    this.web3 = (_this$internalWeb3Pro = this.internalWeb3Provider) === null || _this$internalWeb3Pro === void 0 ? void 0 : _this$internalWeb3Pro.web3;\n    MoralisEmitter.emit(_InternalWeb3Provider.InternalWeb3Events.CHAIN_CHANGED, chainId);\n  }\n\n  static handleWeb3Connect(connectInfo) {\n    MoralisEmitter.emit(_InternalWeb3Provider.InternalWeb3Events.PROVIDER_CONNECT, connectInfo);\n  }\n\n  static handleWeb3Disconnect(error) {\n    // Do not disconnect when MetaMask is attempting to reconnect\n    if ((error === null || error === void 0 ? void 0 : error.message) === 'MetaMask: Disconnected from chain. Attempting to connect.') {\n      return;\n    }\n\n    this.cleanup();\n    MoralisEmitter.emit(_InternalWeb3Provider.InternalWeb3Events.PROVIDER_DISCONNECT, error);\n  }\n\n  static async enableWeb3(options = {}) {\n    if (this.isEnablingWeb3) {\n      throw new Error('Cannot execute Moralis.enableWeb3(), as Moralis Moralis.enableWeb3() already has been called, but is not finished yet ');\n    }\n\n    try {\n      var _options$connector;\n\n      this.isEnablingWeb3 = true;\n\n      if (this.speedyNodeApiKey) {\n        options.speedyNodeApiKey = this.speedyNodeApiKey;\n        options.provider = 'network';\n      }\n\n      const Connector = (_options$connector = options === null || options === void 0 ? void 0 : options.connector) !== null && _options$connector !== void 0 ? _options$connector : MoralisWeb3.getWeb3Connector(options === null || options === void 0 ? void 0 : options.provider);\n      const connector = new Connector(options);\n      const anyNetwork = (options === null || options === void 0 ? void 0 : options.anyNetwork) === true ? true : false;\n      this.internalWeb3Provider = new _InternalWeb3Provider.default(connector, anyNetwork, options.privateKey);\n      this.internalWeb3Provider.on(_InternalWeb3Provider.InternalWeb3Events.ACCOUNT_CHANGED, args => this.handleWeb3AccountChanged(args));\n      this.internalWeb3Provider.on(_InternalWeb3Provider.InternalWeb3Events.CHAIN_CHANGED, args => this.handleWeb3ChainChanged(args));\n      this.internalWeb3Provider.on(_InternalWeb3Provider.InternalWeb3Events.PROVIDER_CONNECT, args => this.handleWeb3Connect(args));\n      this.internalWeb3Provider.on(_InternalWeb3Provider.InternalWeb3Events.PROVIDER_DISCONNECT, args => this.handleWeb3Disconnect(args));\n      let provider;\n      let chainId;\n      let account;\n      let internalWeb3;\n\n      try {\n        ({\n          provider,\n          chainId,\n          account,\n          web3: internalWeb3\n        } = await this.internalWeb3Provider.activate(options));\n\n        if (!provider) {\n          throw new Error('Failed to activate, no provider returned');\n        }\n      } catch (error) {\n        await this.cleanup();\n        throw error;\n      }\n\n      const web3 = internalWeb3;\n      this.web3 = internalWeb3;\n      MoralisEmitter.emit(_InternalWeb3Provider.InternalWeb3Events.WEB3_ENABLED, {\n        chainId,\n        account,\n        connector,\n        provider,\n        web3\n      });\n      return web3; // eslint-disable-next-line no-useless-catch\n    } catch (error) {\n      throw error;\n    } finally {\n      this.isEnablingWeb3 = false;\n    }\n  }\n\n  static isDotAuth(options) {\n    switch (options === null || options === void 0 ? void 0 : options.type) {\n      case 'dot':\n      case 'polkadot':\n      case 'kusama':\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  static isElrondAuth(options) {\n    switch (options === null || options === void 0 ? void 0 : options.type) {\n      case 'erd':\n      case 'elrond':\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  static isSolAuth(options) {\n    switch (options === null || options === void 0 ? void 0 : options.type) {\n      case 'sol':\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  static getWeb3Connector(provider) {\n    switch (provider) {\n      case 'walletconnect':\n      case 'walletConnect':\n      case 'wc':\n        return _WalletConnectWeb3Connector.default;\n\n      case 'network':\n        return _NetworkWeb3Connector.default;\n\n      case 'magicLink':\n        return _MagicWeb3Connector.default;\n\n      case 'web3Auth':\n        return _Web3AuthConnector.Web3Auth;\n\n      default:\n        return _InjectedWeb3Connector.default;\n    }\n  }\n\n  static async deactivateWeb3() {\n    return this.cleanup();\n  }\n  /**\n   * Cleanup previously established provider\n   */\n\n\n  static async cleanup() {\n    if (this.isEnablingWeb3) {\n      // Enabling is aborted before finishing\n      this.isEnablingWeb3 = false;\n      this.internalWeb3Provider = null;\n      this.web3 = null;\n      return;\n    }\n\n    if (this.web3 && this.internalWeb3Provider) {\n      MoralisEmitter.emit(_InternalWeb3Provider.InternalWeb3Events.WEB3_DEACTIVATED, {\n        connector: this.internalWeb3Provider.connector,\n        provider: this.internalWeb3Provider.provider\n      });\n    }\n\n    if (this.internalWeb3Provider) {\n      this.internalWeb3Provider.removeListener(_InternalWeb3Provider.InternalWeb3Events.ACCOUNT_CHANGED, this.handleWeb3AccountChanged);\n      this.internalWeb3Provider.removeListener(_InternalWeb3Provider.InternalWeb3Events.CHAIN_CHANGED, this.handleWeb3ChainChanged);\n      this.internalWeb3Provider.removeListener(_InternalWeb3Provider.InternalWeb3Events.PROVIDER_CONNECT, this.handleWeb3Connect);\n      this.internalWeb3Provider.removeListener(_InternalWeb3Provider.InternalWeb3Events.PROVIDER_DISCONNECT, this.handleWeb3Disconnect); // For example, if walletconnect has been enabled, then later on metamask, then wc is not the internalProvider, but still has an active connection\n\n      try {\n        await this.internalWeb3Provider.deactivate();\n      } catch (error) {// Do nothing\n      }\n    }\n\n    this.internalWeb3Provider = null;\n    this.web3 = null;\n  }\n\n  static async authenticate(options) {\n    const isLoggedIn = await _ParseUser.default.currentAsync();\n\n    if (isLoggedIn) {\n      await _ParseUser.default.logOut();\n    }\n\n    if (MoralisWeb3.isDotAuth(options)) {\n      return _MoralisDot.default.authenticate(options);\n    }\n\n    if (MoralisWeb3.isElrondAuth(options)) {\n      return _MoralisErd.default.authenticate(options);\n    }\n\n    if (MoralisWeb3.isSolAuth(options)) {\n      return _MoralisSol.default.authenticate(options);\n    }\n\n    await this.enableWeb3(options);\n    const {\n      account,\n      web3: internalWeb3,\n      signer\n    } = this.getInternalWeb3Provider();\n\n    if (!account) {\n      throw new Error('Cannot authenticate, no account returned from provider');\n    }\n\n    const message = (options === null || options === void 0 ? void 0 : options.signingMessage) || MoralisWeb3.getSigningData();\n    const data = await (0, _createSigningData.default)(message);\n    const ethAddress = account.toLowerCase();\n    if (!ethAddress) throw new Error('Address not found');\n    const signature = await signer.signMessage(data);\n    if (!signature) throw new Error('Data not signed');\n    const user = await _ParseUser.default.logInWith('moralisEth', {\n      authData: {\n        id: ethAddress,\n        signature,\n        data\n      }\n    });\n    if (!user) throw new Error('Could not get user');\n    await user.setACL(new _ParseACL.default(user));\n    user.addAllUnique('accounts', [ethAddress]);\n    user.set('ethAddress', ethAddress);\n    await user.save(null, options);\n    return user;\n  }\n\n  static async link(account, options) {\n    const {\n      signer\n    } = this.getInternalWeb3Provider();\n    const message = (options === null || options === void 0 ? void 0 : options.signingMessage) || MoralisWeb3.getSigningData();\n    const user = await _ParseUser.default.currentAsync();\n    const ethAddress = account.toLowerCase();\n\n    const EthAddress = _ParseObject.default.extend('_EthAddress');\n\n    const query = new _ParseQuery.default(EthAddress);\n    const ethAddressRecord = await query.get(ethAddress).catch(() => null);\n\n    if (!ethAddressRecord) {\n      const data = await (0, _createSigningData.default)(message);\n      const signature = await signer.signMessage(data);\n      if (!signature) throw new Error('Data not signed');\n      await user.linkWith('moralisEth', {\n        authData: {\n          id: ethAddress,\n          signature,\n          data\n        }\n      });\n    }\n\n    user.addAllUnique('accounts', [ethAddress]);\n    user.set('ethAddress', ethAddress);\n    await user.save(null, options);\n    return user;\n  }\n\n  static async unlink(account) {\n    var _user$get;\n\n    const accountsLower = account.toLowerCase();\n\n    const EthAddress = _ParseObject.default.extend('_EthAddress');\n\n    const query = new _ParseQuery.default(EthAddress);\n    const ethAddressRecord = await query.get(accountsLower);\n    await ethAddressRecord.destroy();\n    const user = await _ParseUser.default.currentAsync();\n    const accounts = (_user$get = user.get('accounts')) !== null && _user$get !== void 0 ? _user$get : [];\n    const nextAccounts = accounts.filter(v => v !== accountsLower);\n    user.set('accounts', nextAccounts);\n    user.set('ethAddress', nextAccounts[0]);\n    await user._unlinkFrom('moralisEth');\n    await user.save();\n    return user;\n  }\n\n  static async initPlugins(installedPlugins) {\n    const specs = installedPlugins || (await (0, _Cloud.run)('getPluginSpecs'));\n    if (!this.Plugins) this.Plugins = {};\n    if (!specs) return;\n    const allPlugins = this.Plugins;\n    specs.forEach(plugin => {\n      allPlugins[plugin.name] = {};\n      plugin.functions.forEach(f => {\n        allPlugins[plugin.name][f] = async (params, options) => {\n          if (!options) options = {};\n          const response = await (0, _Cloud.run)(`${plugin.name}_${f}`, params);\n\n          if (!response.data.success) {\n            const error = JSON.stringify(response.data.data, null, 2);\n            throw new Error(`Something went wrong\\n${error}`);\n          }\n\n          if (options.disableTriggers !== true) {\n            const triggerReturn = await this.handleTriggers(response.data.result.triggers, response.data.result.data);\n            if (triggerReturn) return triggerReturn;\n          }\n\n          return response.data.result;\n        };\n      });\n    });\n    this.Plugins = allPlugins;\n  }\n\n  static async handleTriggers(triggersArray, payload) {\n    var _triggersArray$i, _triggersArray$i$data, _triggersArray$i2, _triggersArray$i2$dat, _triggersArray$i$data2, _triggersArray$i3, _triggersArray$i3$dat, _triggersArray$i4, _triggersArray$i4$dat, _triggersArray$i5, _triggersArray$i6, _triggersArray$i7, _triggersArray$i8, _triggersArray$i9, _triggersArray$i10, _triggersArray$i11, _triggersArray$i12, _triggersArray$i13, _triggersArray$i14, _triggersArray$i15, _triggersArray$i16, _triggersArray$i17, _triggersArray$i18, _triggersArray$i20, _triggersArray$i22, _triggersArray$i23, _triggersArray$i24;\n\n    if (!triggersArray) return;\n\n    for (let i = 0; i < triggersArray.length; i++) {\n      switch (triggersArray[i].name) {\n        // Handles `openUrl` trigger\n        case 'openUrl':\n          if (triggersArray[i].newTab) window.open(triggersArray[i].url);else window.open(triggersArray[i].url, '_self');\n          break;\n        // Handles `web3Transaction` trigger\n\n        case 'web3Transaction':\n          // Trigger a web3 transaction (await)\n          response = await this.getInternalWeb3Provider().signer.sendTransaction({\n            from: (_triggersArray$i = triggersArray[i]) === null || _triggersArray$i === void 0 ? void 0 : (_triggersArray$i$data = _triggersArray$i.data) === null || _triggersArray$i$data === void 0 ? void 0 : _triggersArray$i$data.from,\n            to: (_triggersArray$i2 = triggersArray[i]) === null || _triggersArray$i2 === void 0 ? void 0 : (_triggersArray$i2$dat = _triggersArray$i2.data) === null || _triggersArray$i2$dat === void 0 ? void 0 : _triggersArray$i2$dat.to,\n            value: _ethers.ethers.BigNumber.from((_triggersArray$i$data2 = (_triggersArray$i3 = triggersArray[i]) === null || _triggersArray$i3 === void 0 ? void 0 : (_triggersArray$i3$dat = _triggersArray$i3.data) === null || _triggersArray$i3$dat === void 0 ? void 0 : _triggersArray$i3$dat.value) !== null && _triggersArray$i$data2 !== void 0 ? _triggersArray$i$data2 : 0),\n            data: (_triggersArray$i4 = triggersArray[i]) === null || _triggersArray$i4 === void 0 ? void 0 : (_triggersArray$i4$dat = _triggersArray$i4.data) === null || _triggersArray$i4$dat === void 0 ? void 0 : _triggersArray$i4$dat.data\n          });\n\n          if (((_triggersArray$i5 = triggersArray[i]) === null || _triggersArray$i5 === void 0 ? void 0 : _triggersArray$i5.shouldAwait) === true) {\n            response = await response.wait();\n          } // Save the response returned by the web3 trasanction\n\n\n          if (((_triggersArray$i6 = triggersArray[i]) === null || _triggersArray$i6 === void 0 ? void 0 : _triggersArray$i6.saveResponse) === true) this.memoryCard.save(response); // Return payload and response\n\n          if (((_triggersArray$i7 = triggersArray[i]) === null || _triggersArray$i7 === void 0 ? void 0 : _triggersArray$i7.shouldReturnPayload) === true) return {\n            payload: payload,\n            response: response\n          }; // Only return response\n\n          if (((_triggersArray$i8 = triggersArray[i]) === null || _triggersArray$i8 === void 0 ? void 0 : _triggersArray$i8.shouldReturnResponse) === true) return response;\n          break;\n        // Handles `web3Sign` trigger\n\n        case 'web3Sign':\n          if (!triggersArray[i].message) throw new Error('web3Sign trigger does not have a message to sign');\n          if (!triggersArray[i].signer) throw new Error('web3Sign trigger signer address missing or invalid'); // eslint-disable-next-line no-case-declarations\n\n          const message = JSON.parse(triggersArray[i].message);\n          delete message.types.EIP712Domain; // eslint-disable-next-line no-case-declarations\n\n          let response = await this.getInternalWeb3Provider().signer._signTypedData(message.domain, message.types, message.message); // Save response\n\n          if (((_triggersArray$i9 = triggersArray[i]) === null || _triggersArray$i9 === void 0 ? void 0 : _triggersArray$i9.saveResponse) === true) this.memoryCard.save(response); // Return payload and response\n\n          if (((_triggersArray$i10 = triggersArray[i]) === null || _triggersArray$i10 === void 0 ? void 0 : _triggersArray$i10.shouldReturnPayload) === true) return {\n            payload: payload,\n            response: response\n          }; // Only return response\n\n          if (((_triggersArray$i11 = triggersArray[i]) === null || _triggersArray$i11 === void 0 ? void 0 : _triggersArray$i11.shouldReturnResponse) === true) return response;\n          break;\n        // Calls a given plugin endpoint\n\n        case 'callPluginEndpoint':\n          if (!triggersArray[i].pluginName) throw new Error('callPluginEndpoint trigger does not have an plugin name to call');\n          if (!triggersArray[i].endpoint) throw new Error('callPluginEndpoint trigger does not have an endpoint to call'); // Call a plugin endpoint (await)\n\n          if (((_triggersArray$i12 = triggersArray[i]) === null || _triggersArray$i12 === void 0 ? void 0 : _triggersArray$i12.shouldAwait) === true) {\n            // Check if a saved response has to be used to fill a parameter needed by the plugin\n            if (triggersArray[i].useSavedResponse === true) {\n              triggersArray[i].params[triggersArray[i].savedResponseAs] = this.memoryCard.get(triggersArray[i].savedResponseAt);\n            } // Call the endpoint\n\n\n            response = await (0, _Cloud.run)(`${triggersArray[i].pluginName}_${triggersArray[i].endpoint}`, triggersArray[i].params);\n          } // Call a plugin endpoint (does NOT await)\n\n\n          if (((_triggersArray$i13 = triggersArray[i]) === null || _triggersArray$i13 === void 0 ? void 0 : _triggersArray$i13.shouldAwait) === false) {\n            // Check if a saved response has to be used to fill a parameter needed by the plugin\n            if (triggersArray[i].useSavedResponse === true) {\n              triggersArray[i].params[triggersArray[i].savedResponseAs] = this.memoryCard.get(triggersArray[i].savedResponseAt);\n            } // Call the endpoint\n\n\n            response = (0, _Cloud.run)(`${triggersArray[i].pluginName}_${triggersArray[i].endpoint}`, triggersArray[i].params);\n          } // If the response contains a trigger, run it\n\n\n          if (triggersArray[i].runResponseTrigger === true) {\n            response = await this.handleTriggers(response.data.result.triggers, response.data.result.data);\n          } // Save response\n\n\n          if (((_triggersArray$i14 = triggersArray[i]) === null || _triggersArray$i14 === void 0 ? void 0 : _triggersArray$i14.saveResponse) === true) this.memoryCard.save(response); // If should not run the response trigger, continues the loop and does not return (to avoid breaking the loop execution and run other pending triggers)\n\n          if (((_triggersArray$i15 = triggersArray[i]) === null || _triggersArray$i15 === void 0 ? void 0 : _triggersArray$i15.runResponseTrigger) === false) continue; // Return payload and response\n\n          if (((_triggersArray$i16 = triggersArray[i]) === null || _triggersArray$i16 === void 0 ? void 0 : _triggersArray$i16.shouldReturnPayload) === true) return {\n            payload: 'payload',\n            response: response\n          }; // Only return response\n\n          if (((_triggersArray$i17 = triggersArray[i]) === null || _triggersArray$i17 === void 0 ? void 0 : _triggersArray$i17.shouldReturnResponse) === true) return response;\n          break;\n\n        case 'web3SignV4':\n          if (!triggersArray[i].parameters) throw new Error('web3SignV4 trigger does not have `parameters` to sign');\n          if (!triggersArray[i].from) throw new Error('web3SignV4 trigger does not have a `from` address');\n\n          if (((_triggersArray$i18 = triggersArray[i]) === null || _triggersArray$i18 === void 0 ? void 0 : _triggersArray$i18.shouldAwait) === true) {\n            try {\n              var _triggersArray$i19;\n\n              const {\n                domain,\n                types,\n                message\n              } = JSON.parse(triggersArray[i].parameters[1]);\n\n              if (types.EIP712Domain) {\n                // Ethers.js will compute this automatically\n                delete types.EIP712Domain;\n              }\n\n              const signature = await this.getInternalWeb3Provider().signer._signTypedData(domain, types, message);\n              const result = {\n                result: signature\n              };\n              if (((_triggersArray$i19 = triggersArray[i]) === null || _triggersArray$i19 === void 0 ? void 0 : _triggersArray$i19.saveResponse) === true) this.memoryCard.save(result);\n              response = result;\n            } catch (error) {\n              throw new Error(error.message || error);\n            }\n          }\n\n          if (((_triggersArray$i20 = triggersArray[i]) === null || _triggersArray$i20 === void 0 ? void 0 : _triggersArray$i20.shouldAwait) === false) {\n            const {\n              domain,\n              types,\n              message\n            } = JSON.parse(triggersArray[i].parameters[1]);\n\n            if (types.EIP712Domain) {\n              // Ethers.js will compute this automatically\n              delete types.EIP712Domain;\n            }\n\n            this.getInternalWeb3Provider().signer._signTypedData(domain, types, message) // eslint-disable-next-line no-loop-func\n            .then(signature => {\n              var _triggersArray$i21;\n\n              const result = {\n                result: signature\n              };\n              if (((_triggersArray$i21 = triggersArray[i]) === null || _triggersArray$i21 === void 0 ? void 0 : _triggersArray$i21.saveResponse) === true) this.memoryCard.save(result);\n              response = result;\n            }).catch(error => {\n              throw new Error(error.message || error);\n            });\n          } // Return payload and response\n\n\n          if (((_triggersArray$i22 = triggersArray[i]) === null || _triggersArray$i22 === void 0 ? void 0 : _triggersArray$i22.shouldReturnPayload) === true) return {\n            payload: payload,\n            response: response\n          }; // Only return response\n\n          if (((_triggersArray$i23 = triggersArray[i]) === null || _triggersArray$i23 === void 0 ? void 0 : _triggersArray$i23.shouldReturnResponse) === true) return response;\n          break;\n\n        default:\n          throw new Error(`Unknown trigger: \"${(_triggersArray$i24 = triggersArray[i]) === null || _triggersArray$i24 === void 0 ? void 0 : _triggersArray$i24.name}\"`);\n      }\n    } // Delete all saved data\n\n\n    this.memoryCard.deleteSaved();\n  }\n\n  static async getAllERC20({\n    chain,\n    address\n  } = {}) {\n    const result = await (0, _Cloud.run)('getAllERC20', {\n      chain,\n      address\n    });\n    return result;\n  }\n\n  static async getERC20({\n    chain,\n    address,\n    symbol,\n    tokenAddress\n  } = {}) {\n    const result = (0, _Cloud.run)('getERC20', {\n      chain,\n      address,\n      symbol,\n      tokenAddress\n    });\n    return result;\n  }\n\n  static getNFTs({\n    chain = 'Eth',\n    address = ''\n  } = {}) {\n    return (0, _Cloud.run)('getNFTs_old', {\n      chain,\n      address\n    });\n  }\n\n  static getNFTsCount({\n    chain = 'Eth',\n    address = ''\n  } = {}) {\n    return (0, _Cloud.run)('getNFTsCount_old', {\n      chain,\n      address\n    });\n  }\n\n  static getTransactions({\n    chain = 'Eth',\n    address = '',\n    order = 'desc'\n  } = {}) {\n    return (0, _Cloud.run)('getTransactions', {\n      chain,\n      address,\n      order\n    });\n  }\n\n  static getTransactionsCount({\n    chain = 'Eth',\n    address = ''\n  } = {}) {\n    return (0, _Cloud.run)('getTransactionsCount', {\n      chain,\n      address\n    });\n  }\n\n  static async transfer({\n    type = 'native',\n    receiver = '',\n    contractAddress = '',\n    // eslint-disable-next-line camelcase\n    contract_address,\n    amount = '',\n    tokenId = '',\n    // eslint-disable-next-line camelcase\n    token_id,\n    system = 'evm'\n  } = {}) {\n    // Allow snake-case for backwards compatibility\n    // eslint-disable-next-line camelcase\n    contractAddress = contractAddress || contract_address; // eslint-disable-next-line camelcase\n\n    tokenId = tokenId || token_id;\n    const options = {\n      receiver,\n      contractAddress,\n      amount,\n      tokenId,\n      system\n    };\n\n    _TransferUtils.default.isSupportedType(type);\n\n    _TransferUtils.default.validateInput(type, options);\n\n    const {\n      web3: internalWeb3,\n      account: sender,\n      signer\n    } = this.getInternalWeb3Provider();\n    if (!sender) throw new Error('Sender address not found');\n    let transferOperation;\n    let customToken;\n    if (tokenId) _TransferUtils.default.isUint256(tokenId);\n\n    if (type !== 'native') {\n      customToken = new _ethers.ethers.Contract(contractAddress, _TransferUtils.default.abi[type], signer);\n    }\n\n    switch (type) {\n      case 'native':\n        transferOperation = signer.sendTransaction({\n          to: receiver,\n          value: _ethers.ethers.BigNumber.from(amount)\n        });\n        break;\n\n      case 'erc20':\n        transferOperation = customToken.transfer(receiver, amount, {\n          from: sender\n        });\n        break;\n\n      case 'erc721':\n        transferOperation = customToken.safeTransferFrom(sender, receiver, `${tokenId}`, {\n          from: sender\n        });\n        break;\n\n      case 'erc1155':\n        transferOperation = customToken.safeTransferFrom(sender, receiver, `${tokenId}`, amount, '0x', {\n          from: sender\n        });\n        break;\n\n      default:\n        throw new Error(`Unknown transfer type: \"${type}\"`);\n    }\n\n    const result = await transferOperation;\n    return result;\n  }\n\n  static async executeFunction({\n    contractAddress,\n    abi,\n    functionName,\n    msgValue,\n    params = {},\n    overrides = {}\n  } = {}) {\n    var _functionData;\n\n    const {\n      account,\n      web3: internalWeb3,\n      provider,\n      signerOrProvider\n    } = this.getInternalWeb3Provider(); // Check if function is an overloaded function definition. ex \"getMessage(string)\", or \"getMessage()\"\n\n    const overloadedFunction = functionName.match(/^(.+)\\((.*)\\)$/);\n    let functionData;\n\n    if (overloadedFunction) {\n      // Get functiondata from overloaded function\n      const nameWithoutTopics = overloadedFunction[1];\n      const topics = overloadedFunction[2].split(',').map(topic => topic.trim()).filter(topic => !!topic);\n      const functionDataArray = abi.filter(x => x.name === nameWithoutTopics);\n\n      if (functionDataArray.length === 0) {\n        throw new Error('Function does not exist in abi');\n      }\n\n      functionData = functionDataArray.find(data => {\n        var _data$inputs$length;\n\n        return ((_data$inputs$length = data === null || data === void 0 ? void 0 : data.inputs.length) !== null && _data$inputs$length !== void 0 ? _data$inputs$length : 0) === topics.length && data.inputs.every((input, index) => input.type === topics[index]);\n      });\n\n      if (!functionData) {\n        const possibleTopics = functionDataArray.map(data => `${data.name}(${data.inputs.map(input => input.type).join(',')})`);\n        throw new Error(`Function with the provided topic does not exist in abi. Possible funcationNames: ${possibleTopics.join(' ,')}`);\n      }\n    } else {\n      // Get functiondata from 'normal' function\n      const functionDataArray = abi.filter(x => x.name === functionName);\n\n      if (functionDataArray.length === 0) {\n        throw new Error('Function does not exist in abi');\n      }\n\n      if (functionDataArray.length > 1) {\n        const possibleTopics = functionDataArray.map(data => `${data.name}(${data.inputs.map(input => input.type).join(',')})`);\n        throw new Error(`Multiple function definitions found in the abi. Please include the topic in the functionName. Possible funcationNames: ${possibleTopics.join(' ,')}`);\n      }\n\n      functionData = functionDataArray[0];\n    }\n\n    const stateMutability = (_functionData = functionData) === null || _functionData === void 0 ? void 0 : _functionData.stateMutability;\n\n    if (!(stateMutability === 'view' || stateMutability === 'pure')) {\n      if (!params.from) {\n        const currentAddress = account;\n        if (!currentAddress) throw new Error('From address is required');\n        ({}).from = currentAddress;\n      }\n    }\n\n    const errors = [];\n\n    for (const input of functionData.inputs) {\n      const value = params[input.name];\n\n      if (!value && typeof value !== 'number' && typeof value !== 'boolean' && input.name !== '') {\n        errors.push(`${input.name} is required`);\n      }\n    }\n\n    if (errors.length > 0) {\n      throw errors;\n    }\n\n    const parsedInputs = functionData.inputs.map(x => {\n      return params[x.name];\n    });\n    const contract = new _ethers.ethers.Contract(contractAddress, abi, signerOrProvider);\n    const contractMethod = contract[functionName];\n\n    if (!contractMethod) {\n      throw new Error(`Cannot find function \"${functionName}\" on the contract`);\n    }\n\n    const response = await contractMethod(...Object.values(parsedInputs), msgValue ? {\n      value: _ethers.ethers.BigNumber.from(`${msgValue}`)\n    } : {});\n    return response;\n  }\n\n  static getSigningData() {\n    return `Moralis Authentication`;\n  }\n\n  static ensureWeb3IsInstalled() {\n    return this.internalWeb3Provider && this.internalWeb3Provider.web3 ? true : false;\n  }\n  /**\n   * Gets the internalWeb3Provider with validation to make sure it has been instansiated with 'enableWeb3()'\n   */\n\n\n  static getInternalWeb3Provider() {\n    if (!this.ensureWeb3IsInstalled()) throw new Error(ERROR_WEB3_MISSING);\n    return this.internalWeb3Provider;\n  }\n  /**\n   * Gets web3 from the internalWeb3Provider with validation to make sure it has been instansiated with 'enableWeb3()'\n   */\n\n\n  static getInternalWeb3() {\n    return this.getInternalWeb3Provider().web3;\n  }\n\n  static get provider() {\n    var _this$internalWeb3Pro2, _this$internalWeb3Pro3;\n\n    return (_this$internalWeb3Pro2 = (_this$internalWeb3Pro3 = this.internalWeb3Provider) === null || _this$internalWeb3Pro3 === void 0 ? void 0 : _this$internalWeb3Pro3.provider) !== null && _this$internalWeb3Pro2 !== void 0 ? _this$internalWeb3Pro2 : null;\n  }\n\n  static get connector() {\n    var _this$internalWeb3Pro4, _this$internalWeb3Pro5;\n\n    return (_this$internalWeb3Pro4 = (_this$internalWeb3Pro5 = this.internalWeb3Provider) === null || _this$internalWeb3Pro5 === void 0 ? void 0 : _this$internalWeb3Pro5.connector) !== null && _this$internalWeb3Pro4 !== void 0 ? _this$internalWeb3Pro4 : null;\n  }\n\n  static get connectorType() {\n    var _this$connector$type, _this$connector;\n\n    return (_this$connector$type = (_this$connector = this.connector) === null || _this$connector === void 0 ? void 0 : _this$connector.type) !== null && _this$connector$type !== void 0 ? _this$connector$type : null;\n  }\n\n  static get network() {\n    var _this$connector$netwo, _this$connector2;\n\n    return (_this$connector$netwo = (_this$connector2 = this.connector) === null || _this$connector2 === void 0 ? void 0 : _this$connector2.network) !== null && _this$connector$netwo !== void 0 ? _this$connector$netwo : null;\n  }\n\n  static get account() {\n    var _this$internalWeb3Pro6, _this$internalWeb3Pro7;\n\n    return (_this$internalWeb3Pro6 = (_this$internalWeb3Pro7 = this.internalWeb3Provider) === null || _this$internalWeb3Pro7 === void 0 ? void 0 : _this$internalWeb3Pro7.account) !== null && _this$internalWeb3Pro6 !== void 0 ? _this$internalWeb3Pro6 : null;\n  }\n\n  static get chainId() {\n    var _this$internalWeb3Pro8, _this$internalWeb3Pro9;\n\n    return (_this$internalWeb3Pro8 = (_this$internalWeb3Pro9 = this.internalWeb3Provider) === null || _this$internalWeb3Pro9 === void 0 ? void 0 : _this$internalWeb3Pro9.chainId) !== null && _this$internalWeb3Pro8 !== void 0 ? _this$internalWeb3Pro8 : null;\n  }\n\n  static getChainId() {\n    return this.chainId;\n  }\n\n  static get web3Library() {\n    return _ethers.ethers;\n  }\n\n  static _forwardToConnector(methodName, args) {\n    const {\n      connector\n    } = this.getInternalWeb3Provider();\n    const hasMethod = Boolean(connector[methodName]);\n\n    if (!hasMethod) {\n      throw new Error(`Cannot call ${methodName}, as it does not exist on connector type \"${connector.type}\"`);\n    }\n\n    return connector[methodName](...args);\n  }\n\n  static switchNetwork(...args) {\n    return this._forwardToConnector('switchNetwork', args);\n  }\n\n  static addNetwork(...args) {\n    return this._forwardToConnector('addNetwork', args);\n  }\n\n  static async isMetaMaskInstalled() {\n    return (await (0, _detectProvider.default)()) ? true : false;\n  }\n\n}\n\n_defineProperty(MoralisWeb3, \"speedyNodeApiKey\", void 0);\n\n_defineProperty(MoralisWeb3, \"web3\", null);\n\n_defineProperty(MoralisWeb3, \"internalWeb3Provider\", null);\n\n_defineProperty(MoralisWeb3, \"Plugins\", {});\n\n_defineProperty(MoralisWeb3, \"isEnablingWeb3\", false);\n\n_defineProperty(MoralisWeb3, \"memoryCard\", {\n  save(what) {\n    this.saved = what;\n  },\n\n  get(where) {\n    if (!this.saved) throw new Error('Nothing saved to memory card'); // In case the saved data is not an object but a simple string or number\n\n    if (where.length === 0) return this.getSaved();\n    let tmp;\n    let savedTmp = this.saved;\n\n    for (let i = 0; i < where.length; i++) {\n      tmp = savedTmp[where[i]];\n      savedTmp = tmp;\n    }\n\n    return savedTmp;\n  },\n\n  getSaved() {\n    return this.saved;\n  },\n\n  deleteSaved() {\n    this.saved = undefined;\n  }\n\n});\n\nMoralisWeb3.onConnect = MoralisWeb3.on.bind(MoralisWeb3, _InternalWeb3Provider.InternalWeb3Events.PROVIDER_CONNECT);\nMoralisWeb3.onDisconnect = MoralisWeb3.on.bind(MoralisWeb3, _InternalWeb3Provider.InternalWeb3Events.PROVIDER_DISCONNECT);\nMoralisWeb3.onWeb3Enabled = MoralisWeb3.on.bind(MoralisWeb3, _InternalWeb3Provider.InternalWeb3Events.WEB3_ENABLED);\nMoralisWeb3.onWeb3Deactivated = MoralisWeb3.on.bind(MoralisWeb3, _InternalWeb3Provider.InternalWeb3Events.WEB3_DEACTIVATED);\nMoralisWeb3.onChainChanged = MoralisWeb3.on.bind(MoralisWeb3, _InternalWeb3Provider.InternalWeb3Events.CHAIN_CHANGED);\nMoralisWeb3.onAccountChanged = MoralisWeb3.on.bind(MoralisWeb3, _InternalWeb3Provider.InternalWeb3Events.ACCOUNT_CHANGED);\nvar _default = MoralisWeb3;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}