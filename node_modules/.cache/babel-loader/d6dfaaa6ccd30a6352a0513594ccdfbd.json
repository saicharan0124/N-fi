{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EthereumEvents = exports.ConnectorEvents = void 0; // Events being emitted by an eip-1193 provider\n// See https://eips.ethereum.org/EIPS/eip-1193#events\n\nconst EthereumEvents = Object.freeze({\n  CONNECT: 'connect',\n  DISCONNECT: 'disconnect',\n  CHAIN_CHANGED: 'chainChanged',\n  ACCOUNTS_CHANGED: 'accountsChanged'\n}); // Events emitted by the connectors,\n// The InternalWeb3Provider of Moralis will listen to these\n\nexports.EthereumEvents = EthereumEvents;\nconst ConnectorEvents = Object.freeze({\n  CONNECT: 'connect',\n  DISCONNECT: 'disconnect',\n  CHAIN_CHANGED: 'chainChanged',\n  ACCOUNT_CHANGED: 'accountChanged'\n});\nexports.ConnectorEvents = ConnectorEvents;","map":{"version":3,"sources":["S:/final hackathon/nfi3/node_modules/moralis/lib/node/Web3Connector/events.js"],"names":["Object","defineProperty","exports","value","EthereumEvents","ConnectorEvents","freeze","CONNECT","DISCONNECT","CHAIN_CHANGED","ACCOUNTS_CHANGED","ACCOUNT_CHANGED"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,cAAR,GAAyBF,OAAO,CAACG,eAAR,GAA0B,KAAK,CAAxD,C,CAA2D;AAC3D;;AAEA,MAAMD,cAAc,GAAGJ,MAAM,CAACM,MAAP,CAAc;AACnCC,EAAAA,OAAO,EAAE,SAD0B;AAEnCC,EAAAA,UAAU,EAAE,YAFuB;AAGnCC,EAAAA,aAAa,EAAE,cAHoB;AAInCC,EAAAA,gBAAgB,EAAE;AAJiB,CAAd,CAAvB,C,CAKI;AACJ;;AAEAR,OAAO,CAACE,cAAR,GAAyBA,cAAzB;AACA,MAAMC,eAAe,GAAGL,MAAM,CAACM,MAAP,CAAc;AACpCC,EAAAA,OAAO,EAAE,SAD2B;AAEpCC,EAAAA,UAAU,EAAE,YAFwB;AAGpCC,EAAAA,aAAa,EAAE,cAHqB;AAIpCE,EAAAA,eAAe,EAAE;AAJmB,CAAd,CAAxB;AAMAT,OAAO,CAACG,eAAR,GAA0BA,eAA1B","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EthereumEvents = exports.ConnectorEvents = void 0; // Events being emitted by an eip-1193 provider\n// See https://eips.ethereum.org/EIPS/eip-1193#events\n\nconst EthereumEvents = Object.freeze({\n  CONNECT: 'connect',\n  DISCONNECT: 'disconnect',\n  CHAIN_CHANGED: 'chainChanged',\n  ACCOUNTS_CHANGED: 'accountsChanged'\n}); // Events emitted by the connectors,\n// The InternalWeb3Provider of Moralis will listen to these\n\nexports.EthereumEvents = EthereumEvents;\nconst ConnectorEvents = Object.freeze({\n  CONNECT: 'connect',\n  DISCONNECT: 'disconnect',\n  CHAIN_CHANGED: 'chainChanged',\n  ACCOUNT_CHANGED: 'accountChanged'\n});\nexports.ConnectorEvents = ConnectorEvents;"]},"metadata":{},"sourceType":"script"}