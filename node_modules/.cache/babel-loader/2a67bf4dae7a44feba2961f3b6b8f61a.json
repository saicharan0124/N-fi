{"ast":null,"code":"const {\n  ethers\n} = require(\"ethers\");\n\nconst getrewardsvalue = async (lend_id, owner) => {\n  //metamask\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  await provider.send(\"eth_requestAccounts\", []);\n  const signer = provider.getSigner();\n  console.log(\"hlo1\"); //contract initialization \n\n  const contract = require(\"./abi.json\");\n\n  const lendpool_addr = '0x4E9846Cc17d070589588f5D822986d9677046335';\n  const lendpool_contract = new ethers.Contract(lendpool_addr, contract.lendpool_abi, signer);\n  const lendpool_contract_p = new ethers.Contract(lendpool_addr, contract.lendpool_abi, provider); // console.log(amount)\n  // const decimals = 18;\n  // const input = \"2\"; // Note: this is a string, e.g. user input\n  // const amount = ethers.utils.parseUnits(input, decimals)\n\n  const earned_fn = await lendpool_contract.earned(lend_id);\n  console.log(earned_fn);\n  return earned_fn;\n};\n\nexport default getrewardsvalue;","map":{"version":3,"sources":["S:/final hackathon/nfi3/src/functions/getrewardsvalue.js"],"names":["ethers","require","getrewardsvalue","lend_id","owner","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","console","log","contract","lendpool_addr","lendpool_contract","Contract","lendpool_abi","lendpool_contract_p","earned_fn","earned"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,QAAD,CAA1B;;AAGA,MAAMC,eAAe,GAAC,OAAMC,OAAN,EAAcC,KAAd,KAAsB;AAEvC;AACA,QAAMC,QAAQ,GAAG,IAAIL,MAAM,CAACM,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;AACA,QAAMJ,QAAQ,CAACK,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAAN;AACA,QAAMC,MAAM,GAAGN,QAAQ,CAACO,SAAT,EAAf;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAPuC,CAUvC;;AAEA,QAAMC,QAAQ,GAAGd,OAAO,CAAC,YAAD,CAAxB;;AACA,QAAMe,aAAa,GAAG,4CAAtB;AACA,QAAMC,iBAAiB,GAAG,IAAIjB,MAAM,CAACkB,QAAX,CAAoBF,aAApB,EAAmCD,QAAQ,CAACI,YAA5C,EAAyDR,MAAzD,CAA1B;AACA,QAAMS,mBAAmB,GAAG,IAAIpB,MAAM,CAACkB,QAAX,CAAoBF,aAApB,EAAmCD,QAAQ,CAACI,YAA5C,EAAyDd,QAAzD,CAA5B,CAfuC,CAiBvC;AACA;AACA;AACA;;AAGL,QAAMgB,SAAS,GAAG,MAAMJ,iBAAiB,CAACK,MAAlB,CAAyBnB,OAAzB,CAAxB;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYO,SAAZ;AAEA,SAAOA,SAAP;AAGC,CA7BD;;AAgCA,eAAenB,eAAf","sourcesContent":["const { ethers } = require(\"ethers\");\r\n\r\n\r\nconst getrewardsvalue=async(lend_id,owner)=>{\r\n\r\n     //metamask\r\n     const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n     await provider.send(\"eth_requestAccounts\", []);\r\n     const signer = provider.getSigner()\r\n     \r\n     console.log(\"hlo1\")\r\n     \r\n     \r\n     //contract initialization \r\n     \r\n     const contract = require(\"./abi.json\");\r\n     const lendpool_addr = '0x4E9846Cc17d070589588f5D822986d9677046335' \r\n     const lendpool_contract = new ethers.Contract(lendpool_addr, contract.lendpool_abi,signer)\r\n     const lendpool_contract_p = new ethers.Contract(lendpool_addr, contract.lendpool_abi,provider)\r\n     \r\n     // console.log(amount)\r\n     // const decimals = 18;\r\n     // const input = \"2\"; // Note: this is a string, e.g. user input\r\n     // const amount = ethers.utils.parseUnits(input, decimals)\r\n\r\n    \r\nconst earned_fn = await lendpool_contract.earned(lend_id)\r\nconsole.log(earned_fn)\r\n\r\nreturn earned_fn;\r\n\r\n\r\n}\r\n\r\n\r\nexport default getrewardsvalue;"]},"metadata":{},"sourceType":"module"}